{"version":3,"sources":["./node_modules/@gsp-svc/expression/editor/expr-func-grid/expr-func-grid.component.js","./node_modules/@gsp-svc/expression/editor/expr-var-grid/expressiongrid.component.js","./node_modules/@gsp-svc/expression/editor/expression.module.js","./node_modules/@gsp-svc/expression/editor/expressioncontextentity.js","./node_modules/@gsp-svc/expression/editor/expressioneditor/expressioneditor.component.js","./node_modules/@gsp-svc/expression/editor/expressionentity.js","./node_modules/@gsp-svc/expression/editor/expressioneventservice.js","./node_modules/@gsp-svc/expression/editor/expressionservice.js","./node_modules/@gsp-svc/expression/editor/funcentity.js","./node_modules/@gsp-svc/expression/editor/my-monaco-editor/editorconfig.js","./node_modules/@gsp-svc/expression/editor/my-monaco-editor/my-monaco-editor-services/events.js","./node_modules/@gsp-svc/expression/editor/my-monaco-editor/my-monaco-editor-services/monaco-editor.event.service.js","./node_modules/@gsp-svc/expression/editor/my-monaco-editor/my-monaco-editor.component.js","./node_modules/@gsp-svc/expression/editor/my-monaco-editor/my-monaco-editor.module.js","./node_modules/@gsp-svc/expression/editor/navigate-tree/navigatetree.component.js","./node_modules/@gsp-svc/expression/index.js","./node_modules/@progress/kendo-angular-grid/dist/es2015/utils.js","./node_modules/@progress/kendo-angular-label/dist/es/index.js","./node_modules/@progress/kendo-angular-label/dist/es/label.directive.js","./node_modules/@progress/kendo-angular-label/dist/es/label.module.js","./node_modules/@progress/kendo-angular-label/dist/es/main.js","./src/packages/coderuledesigner/coderulepackage.module.js","./src/packages/coderuledesigner/package.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderule.component.css","./src/packages/coderuledesigner/views/coderuledesigner/coderule.component.html","./src/packages/coderuledesigner/views/coderuledesigner/coderule.component.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderule.module.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/basecoderulecomponent/base.component.css","./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/basecoderulecomponent/base.component.html","./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/basecoderulecomponent/base.component.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/baseoutparamcomponent/baseoutparam.component.html","./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/baseoutparamcomponent/baseoutparam.component.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/constcomponent/const.component.html","./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/constcomponent/const.component.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/expression/mockexpression.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/outparamcomponent/outparam.component.html","./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/outparamcomponent/outparam.component.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/sequencecomponent/sequence.component.html","./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/sequencecomponent/sequence.component.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/syscomponent/sys.component.html","./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/syscomponent/sys.component.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/dmbasecomponent/dmbase.component.css","./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/dmbasecomponent/dmbase.component.html","./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/dmbasecomponent/dmbase.component.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/dmdynamiccomponent/dmdynamic.component.css","./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/dmdynamiccomponent/dmdynamic.component.html","./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/dmdynamiccomponent/dmdynamic.component.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/dynamiccomponent/dynamic.component.css","./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/dynamiccomponent/dynamic.component.html","./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/dynamiccomponent/dynamic.component.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/abstractioncoderule.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/basecoderule.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/dynamic/datatype/basictype.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/dynamic/datatype/complextype.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/dynamic/datatype/datatypeenum.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/dynamic/datatype/datatypefactory.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/dynamic/dynamiccoderule.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/dynamic/inputparameter.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/dynamic/selector.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/segment/constantsegment.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/segment/outparamsegment.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/segment/segmentfactory.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/segment/segmenttype.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/segment/sequencesegment.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/segment/sysvariablesegment.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/coderulefactory.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/coderulemetadata.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/coderuletype.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/datahandler/componenthandler.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/datahandler/datahandlerfactory.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/datahandler/expresshandler.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/datahandler/handlerserializer.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/datahandler/handlertype.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/extension/dmbasecoderule.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/extension/dmdynamiccoderule.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/extension/dmextensioninfo.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/extension/parammapping.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderuleservice/coderuleservice.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderuleservice/eventBusService.ts","./src/packages/coderuledesigner/views/coderuledesigner/coderulewizard/coderulewizard.component.html","./src/packages/coderuledesigner/views/coderuledesigner/coderulewizard/coderulewizard.component.ts","./src/packages/coderuledesigner/views/coderuledesigner/commonobject/commonobject.ts","./src/packages/coderuledesigner/views/coderuledesigner/commonobject/const.ts","./src/packages/coderuledesigner/views/index.ts"],"names":[],"mappings":";;;;;;AAAA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA,6TAA6T,uBAAuB,0GAA0G,uBAAuB,wGAAwG,uBAAuB;AACplB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,wDAAwD,WAAW;AACnE;AACA,kBAAkB,qBAAqB;AACvC,6BAA6B,sBAAsB;AACnD,2BAA2B,sBAAsB;AACjD;AACA;AACA,CAAC;AACD;AACA,oD;;;;;;;;ACxCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA,2TAA2T,uBAAuB,wGAAwG,uBAAuB;AACjd;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,0DAA0D,WAAW;AACrE;AACA,wBAAwB,qBAAqB;AAC7C,6BAA6B,sBAAsB;AACnD,2BAA2B,sBAAsB;AACjD;AACA;AACA,CAAC;AACD;AACA,oD;;;;;;;;ACxCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA,6C;;;;;;;;AC9CA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,mD;;;;;;;;ACXA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,8BAA8B,sBAAsB,sBAAsB,OAAO;AAC1H;AACA,cAAc;AACd;AACA;AACA,cAAc;AACdqFAAqF;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,YAAY,GAAG;AAClE;AACA;AACA;AACA,wDAAwD,YAAY,GAAG;AACvE;AACA;AACA,mDAAmD,WAAW,GAAG;AACjE;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,GAAG;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,2BAA2B,SAAS;AACpC;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,+QAA+Q,YAAY,8lBAA8lB,YAAY,ivBAAivB,GAAG,GAAG,yeAAye,KAAK,4EAA4E,MAAM,8yBAA8yB,2vBAA2vB,cAAc;AACnvH,+DAA+D,iBAAiB,EAAE,KAAK,kBAAkB,cAAc,EAAE;AACzH,iBAAiB,IAAI;AACrB;AACA;AACA,4DAA4D;AAC5D,SAAS,yDAAyD;AAClE,MAAM;AACN;AACA,oBAAoB,sBAAsB;AAC1C,8BAA8B,qBAAqB;AACnD;AACA;AACA,CAAC;AACD;AACA,sD;;;;;;;;AC3VA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,4C;;;;;;;;ACRA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA,CAAC;AACD;AACA,kD;;;;;;;;ACvDA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mDAAmD;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8B;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mDAAmD;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mDAAmD;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,mDAAmD;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA,oDAAoD;AACpD,SAAS,yBAAyB;AAClC,SAAS,+BAA+B;AACxC,SAAS,yCAAyC;AAClD,MAAM;AACN;AACA,CAAC;AACD;AACA,6C;;;;;;;;ACrKA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,uDAAuD;AACxD,sC;;;;;;;;AClBA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,wC;;;;;;;;ACNA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;ACPA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA,CAAC;AACD;AACA,uD;;;;;;;;ACpCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,gCAAgC,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS,+BAA+B,EAAE;AACrF;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,qFAAqF,oCAAoC,EAAE;AAC3H,mEAAmE,4BAA4B,EAAE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,4CAA4C,EAAE;AACxG,sDAAsD,wCAAwC,EAAE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,6BAA6B,EAAE,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,qCAAqC,gBAAgB,eAAe,EAAE,UAAU,aAAa,aAAa,EAAE;AAC5G;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,0DAA0D;AAC1D,SAAS,mBAAmB;AAC5B,SAAS,gCAAgC,mEAAmE,IAAI;AAChH,SAAS,8DAA8D;AACvE,SAAS,yDAAyD;AAClE,MAAM;AACN;AACA,8BAA8B,4CAA4C;AAC1E,oBAAoB,kBAAkB;AACtC,sBAAsB,kBAAkB;AACxC,uBAAuB,kBAAkB;AACzC,qBAAqB,qCAAqC;AAC1D;AACA;AACA,CAAC;AACD;AACA,sD;;;;;;;;ACpSA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA,mD;;;;;;;;ACzCA;AACA,8CAA8C,cAAc;AAC5D;AACA,mCAAmC,6CAA6C;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,qBAAqB,kBAAkB;AACvC,qBAAqB,gBAAgB;AACrC,qBAAqB,kBAAkB;AACvC,qBAAqB,gBAAgB;AACrC,qBAAqB,kBAAkB;AACvC,qBAAqB,gBAAgB;AACrC,qBAAqB,iBAAiB;AACtC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,+CAA+C;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,+WAA+W,eAAe;AAC9X;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,wDAAwD,WAAW;AACnE;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA,CAAC;AACD;AACA,kD;;;;;;;;ACvFA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA,iC;;;;;;;;;;;;;;ACNyB;AACT;AACH;AACb;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA,uFAA+C;AAAA;AAAA;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;ACjFA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;ACHsD;AACtD;AACA;AACA;AACA;AACA,0DAA0D,wBAAwB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,iBAAiB,6DAAc;AAC/B,sBAAsB,wFAAyC;AAC/D,yBAAyB,sFAAuC;AAChE;AACA;AACA,CAAC;AACO;;;;;;;;;;;;AChGW;AACM;AACzB;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA,WAAW,yBAAyB;AACpC;AACA,WAAW,WAAW;AACtB;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,8CAA8C,WAAW;AACzD;AACA,CAAC;AACO;;;;;;;;;;;;;ACjDiB;AACH;;;;;;;;;;;;;;;;ACDtB;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACuD;AAC/B;AACH;AACa;AACD;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAA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","file":"coderulepackage.module.chunk.js","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar ExprFuncGridComponent = /** @class */ (function () {\r\n    function ExprFuncGridComponent() {\r\n        this.selectrowchange = new core_1.EventEmitter();\r\n        this.dbclickinsert = new core_1.EventEmitter();\r\n        this.count = 0;\r\n    }\r\n    ExprFuncGridComponent.prototype.ngOnChanges = function () {\r\n        this.funcgridData = this.func;\r\n    };\r\n    ExprFuncGridComponent.prototype.cellClickHandler = function (_a) {\r\n        var dataItem = _a.dataItem;\r\n        this.selectrowchange.emit(dataItem);\r\n        var that = this;\r\n        this.count++;\r\n        if (this.count < 2) {\r\n            document.getElementById(\"funcgrid\").addEventListener(\"dblclick\", function () {\r\n                that.dbclickinsert.emit(true);\r\n            });\r\n        }\r\n    };\r\n    ExprFuncGridComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'app-expr-func-grid',\r\n                    template: \"<kendo-grid id=\\\"funcgrid\\\" [kendoGridBinding]=\\\"funcgridData\\\" [pageSize]=\\\"6\\\" [pageable]=\\\"true\\\" [filterable]=\\\"true\\\" [groupable]=\\\"false\\\" [height]=\\\"250\\\" (cellClick)=\\\"cellClickHandler($event)\\\" > <kendo-grid-column field=\\\"key\\\" title=\\\"语义名称\\\" [width]=\\\"100\\\" [headerStyle]=\\\"{'text-align': 'center'}\\\"></kendo-grid-column> <kendo-grid-column field=\\\"params\\\" title=\\\"参数\\\" [width]=\\\"100\\\" [headerStyle]=\\\"{'text-align': 'center'}\\\"></kendo-grid-column> <kendo-grid-column field=\\\"name\\\" title=\\\"名称\\\" [width]=\\\"100\\\" [headerStyle]=\\\"{'text-align': 'center'}\\\"></kendo-grid-column> </kendo-grid> \",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ExprFuncGridComponent.ctorParameters = function () { return []; };\r\n    ExprFuncGridComponent.propDecorators = {\r\n        \"func\": [{ type: core_1.Input },],\r\n        \"selectrowchange\": [{ type: core_1.Output },],\r\n        \"dbclickinsert\": [{ type: core_1.Output },],\r\n    };\r\n    return ExprFuncGridComponent;\r\n}());\r\nexports.ExprFuncGridComponent = ExprFuncGridComponent;\r\n//# sourceMappingURL=expr-func-grid.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@gsp-svc/expression/editor/expr-func-grid/expr-func-grid.component.js\n// module id = ./node_modules/@gsp-svc/expression/editor/expr-func-grid/expr-func-grid.component.js\n// module chunks = coderulepackage.module","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar ExpressiongridComponent = /** @class */ (function () {\r\n    function ExpressiongridComponent() {\r\n        this.selectrowchange = new core_1.EventEmitter();\r\n        this.dbclickinsert = new core_1.EventEmitter();\r\n        this.count = 0;\r\n    }\r\n    ExpressiongridComponent.prototype.ngOnChanges = function () {\r\n        this.vargridData = this.cafcontext;\r\n    };\r\n    ExpressiongridComponent.prototype.cellClickHandler = function (_a) {\r\n        var dataItem = _a.dataItem;\r\n        this.selectrowchange.emit(dataItem);\r\n        var that = this;\r\n        this.count++;\r\n        if (this.count < 2) {\r\n            document.getElementById(\"vargrid\").addEventListener(\"dblclick\", function () {\r\n                that.dbclickinsert.emit(true);\r\n            });\r\n        }\r\n    };\r\n    ExpressiongridComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'app-expressiongrid',\r\n                    template: \"<kendo-grid id=\\\"vargrid\\\" [kendoGridBinding]=\\\"vargridData\\\" [pageSize]=\\\"6\\\" [pageable]=\\\"true\\\" [filterable]=\\\"true\\\" [groupable]=\\\"false\\\" [height]=\\\"250\\\" (cellClick)=\\\"cellClickHandler($event)\\\" > <kendo-grid-column field=\\\"key\\\" title=\\\"语义名称\\\" [width]=\\\"150\\\" [headerStyle]=\\\"{'text-align': 'center'}\\\"></kendo-grid-column> <kendo-grid-column field=\\\"name\\\" title=\\\"名称\\\" [width]=\\\"150\\\" [headerStyle]=\\\"{'text-align': 'center'}\\\"></kendo-grid-column> </kendo-grid> \",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ExpressiongridComponent.ctorParameters = function () { return []; };\r\n    ExpressiongridComponent.propDecorators = {\r\n        \"cafcontext\": [{ type: core_1.Input },],\r\n        \"selectrowchange\": [{ type: core_1.Output },],\r\n        \"dbclickinsert\": [{ type: core_1.Output },],\r\n    };\r\n    return ExpressiongridComponent;\r\n}());\r\nexports.ExpressiongridComponent = ExpressiongridComponent;\r\n//# sourceMappingURL=expressiongrid.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@gsp-svc/expression/editor/expr-var-grid/expressiongrid.component.js\n// module id = ./node_modules/@gsp-svc/expression/editor/expr-var-grid/expressiongrid.component.js\n// module chunks = coderulepackage.module","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar common_1 = require(\"@angular/common\");\r\nvar kendo_angular_dialog_1 = require(\"@progress/kendo-angular-dialog\");\r\nvar expressioneditor_component_1 = require(\"./expressioneditor/expressioneditor.component\");\r\nvar kendo_angular_layout_1 = require(\"@progress/kendo-angular-layout\");\r\nvar kendo_angular_buttons_1 = require(\"@progress/kendo-angular-buttons\");\r\nvar navigatetree_component_1 = require(\"./navigate-tree/navigatetree.component\");\r\nvar kendo_angular_treeview_1 = require(\"@progress/kendo-angular-treeview\");\r\nvar kendo_angular_inputs_1 = require(\"@progress/kendo-angular-inputs\");\r\nvar expressiongrid_component_1 = require(\"./expr-var-grid/expressiongrid.component\");\r\nvar kendo_angular_grid_1 = require(\"@progress/kendo-angular-grid\");\r\nvar my_monaco_editor_module_1 = require(\"./my-monaco-editor/my-monaco-editor.module\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nvar expressioneventservice_1 = require(\"./expressioneventservice\");\r\nvar expr_func_grid_component_1 = require(\"./expr-func-grid/expr-func-grid.component\");\r\nvar monacoConfig = {\r\n    baseUrl: 'assets',\r\n    defaultOptions: { scrollBeyondLastLine: false }\r\n};\r\nvar ExpressionModule = /** @class */ (function () {\r\n    function ExpressionModule() {\r\n    }\r\n    ExpressionModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    imports: [\r\n                        common_1.CommonModule,\r\n                        kendo_angular_dialog_1.DialogsModule,\r\n                        kendo_angular_layout_1.LayoutModule,\r\n                        kendo_angular_buttons_1.ButtonsModule,\r\n                        kendo_angular_treeview_1.TreeViewModule,\r\n                        kendo_angular_inputs_1.InputsModule,\r\n                        kendo_angular_grid_1.GridModule,\r\n                        forms_1.FormsModule,\r\n                        my_monaco_editor_module_1.MyMonacoEditorModule.forRoot(monacoConfig)\r\n                    ],\r\n                    entryComponents: [expressioneditor_component_1.ExpressioneditorComponent],\r\n                    exports: [expressioneditor_component_1.ExpressioneditorComponent],\r\n                    declarations: [expressioneditor_component_1.ExpressioneditorComponent, navigatetree_component_1.NavigateTreeComponent, expressiongrid_component_1.ExpressiongridComponent, expr_func_grid_component_1.ExprFuncGridComponent],\r\n                    providers: [expressioneventservice_1.ExpressionEventService]\r\n                },] },\r\n    ];\r\n    return ExpressionModule;\r\n}());\r\nexports.ExpressionModule = ExpressionModule;\r\n//# sourceMappingURL=expression.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@gsp-svc/expression/editor/expression.module.js\n// module id = ./node_modules/@gsp-svc/expression/editor/expression.module.js\n// module chunks = coderulepackage.module","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ExpressionContextEntity = /** @class */ (function () {\r\n    function ExpressionContextEntity() {\r\n        this.sessionEntities = [];\r\n        this.contextEntities = [];\r\n        this.funcEntities = [];\r\n    }\r\n    return ExpressionContextEntity;\r\n}());\r\nexports.ExpressionContextEntity = ExpressionContextEntity;\r\n//# sourceMappingURL=expressioncontextentity.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@gsp-svc/expression/editor/expressioncontextentity.js\n// module id = ./node_modules/@gsp-svc/expression/editor/expressioncontextentity.js\n// module chunks = coderulepackage.module","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar expressioneventservice_1 = require(\"../expressioneventservice\");\r\nvar expressioncontextentity_1 = require(\"../expressioncontextentity\");\r\nvar expressionentity_1 = require(\"../expressionentity\");\r\nvar util_1 = require(\"util\");\r\nvar funcentity_1 = require(\"../funcentity\");\r\nvar ExpressioneditorComponent = /** @class */ (function () {\r\n    function ExpressioneditorComponent(eventService) {\r\n        this.eventService = eventService;\r\n        this.closed = new core_1.EventEmitter();\r\n        this.windowTop = 0;\r\n        this.expressionEntityTemp = new expressionentity_1.ExpressionEntity();\r\n        this.selectvar = false;\r\n        this.selectfunc = false;\r\n        this.cafcontext = [];\r\n        this.func = [];\r\n        this.funcDate = [];\r\n        this.funcEstimate = [];\r\n        this.funcString = [];\r\n        this.funcTranslate = [];\r\n        this.funcAggregate = [];\r\n        this.funcExtend = [];\r\n        this.funcMath = [];\r\n        //编辑器的基本参数\r\n        this.options = {\r\n            theme: 'vs-dark',\r\n            language: 'javascript',\r\n        };\r\n        this.showMultiple = true;\r\n        //编辑器初始化默认表达式\r\n        this.jsCode = \"function hello() {\\n      alert('Hello world!');\\n      alert('foo1');\\n      alert('foo2');\\n    }\";\r\n        this.jsonCode = [\r\n            '{',\r\n            '    \"p1\": \"v3\",',\r\n            '    \"p2\": false',\r\n            '}'\r\n        ].join('\\n');\r\n        this.model = {\r\n            value: this.jsonCode,\r\n            language: 'json',\r\n            uri: 'foo.json'\r\n        };\r\n    }\r\n    ExpressioneditorComponent.prototype.setCode = function () {\r\n        this.code = 'Code changed from the app component.';\r\n    };\r\n    //组件初始化生命周期钩子\r\n    //组件初始化生命周期钩子\r\n    ExpressioneditorComponent.prototype.ngOnInit = \r\n    //组件初始化生命周期钩子\r\n    function () {\r\n        var _this = this;\r\n        //初始化各函数实体\r\n        this.expressionEntity.funcEntities.forEach(function (funcentity) {\r\n            switch (funcentity.type) {\r\n                case funcentity_1.FuncType.Extend:\r\n                    _this.funcExtend.push(funcentity);\r\n                    break;\r\n                case funcentity_1.FuncType.Aggregate:\r\n                    _this.funcAggregate.push(funcentity);\r\n                    break;\r\n                case funcentity_1.FuncType.Translate:\r\n                    _this.funcTranslate.push(funcentity);\r\n                    break;\r\n                case funcentity_1.FuncType.Estimate:\r\n                    _this.funcEstimate.push(funcentity);\r\n                    break;\r\n                case funcentity_1.FuncType.Date:\r\n                    _this.funcDate.push(funcentity);\r\n                    break;\r\n                case funcentity_1.FuncType.Math:\r\n                    _this.funcMath.push(funcentity);\r\n                    break;\r\n                case funcentity_1.FuncType.String:\r\n                    _this.funcString.push(funcentity);\r\n                    break;\r\n            }\r\n        });\r\n        this.updateOptions();\r\n    };\r\n    //初始化编辑器默认显示\r\n    //初始化编辑器默认显示\r\n    ExpressioneditorComponent.prototype.updateOptions = \r\n    //初始化编辑器默认显示\r\n    function () {\r\n        if (util_1.isNullOrUndefined(this.expressionEntity) || util_1.isNullOrUndefined(this.expressionEntity.expr) || this.expressionEntity.expr.length == 0) {\r\n            this.code = this.jsCode;\r\n        }\r\n        else {\r\n            this.code = this.expressionEntity.expr;\r\n            this.expressionEntityTemp.expr = this.code;\r\n        }\r\n    };\r\n    //编辑器初始化事件句柄\r\n    //编辑器初始化事件句柄\r\n    ExpressioneditorComponent.prototype.onInitHandler = \r\n    //编辑器初始化事件句柄\r\n    function (event) {\r\n    };\r\n    //编辑器表达式改变事件句柄\r\n    //编辑器表达式改变事件句柄\r\n    ExpressioneditorComponent.prototype.onChangeHandler = \r\n    //编辑器表达式改变事件句柄\r\n    function (event) {\r\n        this.expressioninfo = event.data;\r\n    };\r\n    ExpressioneditorComponent.prototype.onTouchedHandler = function (event) {\r\n    };\r\n    //保存\r\n    //保存\r\n    ExpressioneditorComponent.prototype.onSave = \r\n    //保存\r\n    function () {\r\n        this.expressionEntityTemp.expr = this.expressioninfo;\r\n        alert(\"保存成功！\");\r\n    };\r\n    //清空\r\n    //清空\r\n    ExpressioneditorComponent.prototype.onClear = \r\n    //清空\r\n    function () {\r\n        this.expressioninfo = \"\";\r\n        this.code = \"\";\r\n        this.eventService.pushclearExpression();\r\n    };\r\n    //校验\r\n    //校验\r\n    ExpressioneditorComponent.prototype.onCheck = \r\n    //校验\r\n    function () {\r\n        alert(\"校验结果：true\");\r\n        return true;\r\n    };\r\n    //关闭窗口\r\n    //关闭窗口\r\n    ExpressioneditorComponent.prototype.close = \r\n    //关闭窗口\r\n    function () {\r\n        this.GetUnCamelParse(this.expressionEntityTemp);\r\n        this.closed.next(JSON.stringify(this.expressionEntityTemp));\r\n        //this.eventService.setExpression(JSON.stringify(this.expressionEntityTemp));//将实体JSON序列化保存\r\n        //this.eventService.closeWindow();\r\n    };\r\n    //根据选择树显示对应页面\r\n    //根据选择树显示对应页面\r\n    ExpressioneditorComponent.prototype.selectTreeChange = \r\n    //根据选择树显示对应页面\r\n    function ($event) {\r\n        if ($event == \"0_0\" || $event == \"0_1\") {\r\n            this.switchTreeGrid($event);\r\n            this.selectvar = true;\r\n            this.selectfunc = false;\r\n        }\r\n        else if ($event == \"1_0\" || $event == \"1_1\" || $event == \"1_2\" || $event == \"1_3\" || $event == \"1_4\" || $event == \"1_5\" || $event == \"1_6\") {\r\n            this.switchTreeGrid($event);\r\n            this.selectvar = false;\r\n            this.selectfunc = true;\r\n        }\r\n    };\r\n    //表格中选择行事件\r\n    //表格中选择行事件\r\n    ExpressioneditorComponent.prototype.selectrowChange = \r\n    //表格中选择行事件\r\n    function ($event) {\r\n        this.descriptinfo = $event.description;\r\n        this.keyinfo = $event.key;\r\n    };\r\n    //双击插入事件\r\n    //双击插入事件\r\n    ExpressioneditorComponent.prototype.dbclickInsert = \r\n    //双击插入事件\r\n    function ($event) {\r\n        if ($event) {\r\n            this.eventService.insertExpression(this.keyinfo);\r\n        }\r\n    };\r\n    //根据选择树节点信息绑定各grid显示数据\r\n    //根据选择树节点信息绑定各grid显示数据\r\n    ExpressioneditorComponent.prototype.switchTreeGrid = \r\n    //根据选择树节点信息绑定各grid显示数据\r\n    function (key) {\r\n        switch (key) {\r\n            case \"0_0\":\r\n                this.cafcontext = this.expressionEntity.contextEntities;\r\n                break;\r\n            case \"0_1\":\r\n                this.cafcontext = this.expressionEntity.sessionEntities;\r\n                break;\r\n            case \"1_0\":\r\n                this.func = this.funcExtend;\r\n                break;\r\n            case \"1_1\":\r\n                this.func = this.funcAggregate;\r\n                break;\r\n            case \"1_2\":\r\n                this.func = this.funcTranslate;\r\n                break;\r\n            case \"1_3\":\r\n                this.func = this.funcEstimate;\r\n                break;\r\n            case \"1_4\":\r\n                this.func = this.funcDate;\r\n                break;\r\n            case \"1_5\":\r\n                this.func = this.funcMath;\r\n                break;\r\n            case \"1_6\":\r\n                this.func = this.funcString;\r\n                break;\r\n            default: break;\r\n        }\r\n    };\r\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////编辑符号方法\r\n    //////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ExpressioneditorComponent.prototype.onIf = function () {\r\n        this.eventService.insertExpression(\"if()\\n{\\n  return ;\\n}\");\r\n        ;\r\n    };\r\n    ExpressioneditorComponent.prototype.onEIf = function () {\r\n        this.eventService.insertExpression(\"else if()\\n{\\n  return ;\\n}\");\r\n    };\r\n    ExpressioneditorComponent.prototype.onElse = function () {\r\n        this.eventService.insertExpression(\"else\\n{\\n return ;\\n}\");\r\n    };\r\n    ExpressioneditorComponent.prototype.onReturn = function () {\r\n        this.eventService.insertExpression(\"return ;\");\r\n    };\r\n    ExpressioneditorComponent.prototype.onVar = function () {\r\n        this.eventService.insertExpression(\"var\");\r\n    };\r\n    ExpressioneditorComponent.prototype.onEqual = function () {\r\n        this.eventService.insertExpression(\"=\");\r\n    };\r\n    ExpressioneditorComponent.prototype.onTrue = function () {\r\n        this.eventService.insertExpression(\"true\");\r\n    };\r\n    ExpressioneditorComponent.prototype.onFalse = function () {\r\n        this.eventService.insertExpression(\"false\");\r\n    };\r\n    ExpressioneditorComponent.prototype.onNull = function () {\r\n        this.eventService.insertExpression(\"null\");\r\n    };\r\n    ExpressioneditorComponent.prototype.onSparen = function () {\r\n        this.eventService.insertExpression(\"()\");\r\n    };\r\n    ExpressioneditorComponent.prototype.onBrace = function () {\r\n        this.eventService.insertExpression(\"{\\n}\");\r\n    };\r\n    ExpressioneditorComponent.prototype.onBBrace = function () {\r\n        this.eventService.insertExpression(\"【】\");\r\n    };\r\n    ExpressioneditorComponent.prototype.onAnd = function () {\r\n        this.eventService.insertExpression(\"and\");\r\n    };\r\n    ExpressioneditorComponent.prototype.onOr = function () {\r\n        this.eventService.insertExpression(\"or\");\r\n    };\r\n    ExpressioneditorComponent.prototype.onExclamation = function () {\r\n        this.eventService.insertExpression(\"!\");\r\n    };\r\n    ExpressioneditorComponent.prototype.onIequal = function () {\r\n        this.eventService.insertExpression(\"==\");\r\n    };\r\n    ExpressioneditorComponent.prototype.onUnequal = function () {\r\n        this.eventService.insertExpression(\"!=\");\r\n    };\r\n    ExpressioneditorComponent.prototype.onLess = function () {\r\n        this.eventService.insertExpression(\"<\");\r\n    };\r\n    ExpressioneditorComponent.prototype.onLessequal = function () {\r\n        this.eventService.insertExpression(\"<=\");\r\n    };\r\n    ExpressioneditorComponent.prototype.onMore = function () {\r\n        this.eventService.insertExpression(\">\");\r\n    };\r\n    ExpressioneditorComponent.prototype.onMoreequal = function () {\r\n        this.eventService.insertExpression(\">=\");\r\n    };\r\n    ExpressioneditorComponent.prototype.onPlus = function () {\r\n        this.eventService.insertExpression(\"+\");\r\n    };\r\n    ExpressioneditorComponent.prototype.onMinus = function () {\r\n        this.eventService.insertExpression(\"-\");\r\n    };\r\n    ExpressioneditorComponent.prototype.onMultiple = function () {\r\n        this.eventService.insertExpression(\"*\");\r\n    };\r\n    ExpressioneditorComponent.prototype.onDivision = function () {\r\n        this.eventService.insertExpression(\"/\");\r\n    };\r\n    ExpressioneditorComponent.prototype.onPercent = function () {\r\n        this.eventService.insertExpression(\"%\");\r\n    };\r\n    //json串解析\r\n    //json串解析\r\n    ExpressioneditorComponent.prototype.GetUnCamelParse = \r\n    //json串解析\r\n    function (jsonObj) {\r\n        for (var key in jsonObj) {\r\n            if (typeof (jsonObj[key]) === \"object\") {\r\n                this.GetUnCamelParse(jsonObj[key]);\r\n            }\r\n            var temp = jsonObj[key];\r\n            delete (jsonObj[key]);\r\n            jsonObj[this.ConvertToUncamel(key)] = temp;\r\n        }\r\n    };\r\n    //字符串反转换Camel\r\n    //字符串反转换Camel\r\n    ExpressioneditorComponent.prototype.ConvertToUncamel = \r\n    //字符串反转换Camel\r\n    function (input) {\r\n        if (input.length > 0) {\r\n            var len = input.length;\r\n            var strTemp = \"\"; //新字符串\r\n            for (var i = 0; i < len; i++) {\r\n                if (i == 0) {\r\n                    strTemp += input[i].toUpperCase(); //第一个\r\n                }\r\n                else {\r\n                    strTemp += input[i];\r\n                }\r\n            }\r\n            return strTemp;\r\n        }\r\n    };\r\n    ExpressioneditorComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'app-expressioneditor',\r\n                    template: \"<div class=\\\"expression\\\"> <kendo-window [(top)]=\\\"windowTop\\\" [minWidth]=\\\"200\\\" [width]=\\\"1300\\\" [minHeight]=\\\"300\\\" [height]=\\\"620\\\" title=\\\"语义化表达式编辑器\\\"  (close)=\\\"close()\\\" style=\\\"background:#5f6cdf\\\"> <div style=\\\"background: #f3f3f3;width: 100%;\\\"> <button kendoButton [look]=\\\"'bare'\\\" (click)=\\\"onSave()\\\"  [icon]=\\\"'save'\\\">保存</button> <button kendoButton [look]=\\\"'bare'\\\" (click)=\\\"onClear()\\\" [icon]=\\\"'clear-css'\\\">清空</button> <button kendoButton [look]=\\\"'bare'\\\" (click)=\\\"onCheck()\\\" [icon]=\\\"'indent-increase'\\\">校验</button> <button kendoButton [look]=\\\"'bare'\\\"  [icon]=\\\"'question'\\\">帮助</button> <button kendoButton [look]=\\\"'bare'\\\"  [icon]=\\\"'download'\\\">导入表达式</button> <input  type=\\\"file\\\" value=\\\"\\\" id=\\\"uploads\\\" (change)= \\\"fileUploadonselect()\\\" style=\\\"display:none\\\" accept=\\\".txt\\\"/> </div>  <div style=\\\"background: #f0ffffe0;width: 100%;\\\"> <button kendoButton  id=\\\"if\\\" (click)=\\\"onIf()\\\">if</button> <button kendoButton  id=\\\"elseif\\\" (click)=\\\"onEIf()\\\">else if</button> <button kendoButton  id=\\\"else\\\" (click)=\\\"onElse()\\\">else</button> <button kendoButton  id=\\\"return\\\" (click)=\\\"onReturn()\\\">return</button>  <button kendoButton  id=\\\"var\\\" (click)=\\\"onVar()\\\">var</button> <button kendoButton  id=\\\"equal\\\" (click)=\\\"onEqual()\\\">=</button> <button kendoButton  id=\\\"true\\\" (click)=\\\"onTrue()\\\">true</button> <button kendoButton  id=\\\"false\\\" (click)=\\\"onFalse()\\\">false</button> <button kendoButton  id=\\\"null\\\" (click)=\\\"onNull()\\\">null</button> <button kendoButton  id=\\\"singleparen\\\" (click)=\\\"onSparen()\\\">()</button> <button kendoButton  id=\\\"brace\\\" (click)=\\\"onBrace()\\\">{{'{}'}}</button> <button kendoButton  id=\\\"blackbraces\\\" (click)=\\\"onBBrace()\\\">【】</button> <button kendoButton  id=\\\"and\\\" (click)=\\\"onAnd()\\\">and</button> <button kendoButton  id=\\\"or\\\" (click)=\\\"onOr()\\\">or</button> <button kendoButton  id=\\\"exclamation\\\" (click)=\\\"onExclamation()\\\">!</button> <button kendoButton  id=\\\"iequal\\\" (click)=\\\"onIequal()\\\">==</button> <button kendoButton  id=\\\"unequal\\\" (click)=\\\"onUnequal()\\\">!=</button> <button kendoButton  id=\\\"less\\\" (click)=\\\"onLess()\\\">{{'<'}}</button> <button kendoButton  id=\\\"lessequal\\\" (click)=\\\"onLessequal()\\\">{{'<='}}</button> <button kendoButton  id=\\\"more\\\" (click)=\\\"onMore()\\\">></button> <button kendoButton  id=\\\"moreequal\\\" (click)=\\\"onMoreequal()\\\">>=</button> <button kendoButton  id=\\\"plus\\\" (click)=\\\"onPlus()\\\">+</button> <button kendoButton  id=\\\"minus\\\" (click)=\\\"onMinus()\\\">-</button> <button kendoButton  id=\\\"multiple\\\" (click)=\\\"onMultiple()\\\">*</button> <button kendoButton  id=\\\"division\\\" (click)=\\\"onDivision()\\\">/</button> <button kendoButton  id=\\\"percent\\\" (click)=\\\"onPercent()\\\">%</button> </div> <div style=\\\"height:200px\\\"> <app-my-monaco-editor [options]=\\\"options\\\" [(ngModel)]=\\\"code\\\" (onInit)=\\\"onInitHandler($event)\\\" (onTouched)=\\\"onTouchedHandler($event)\\\" (onChange)=\\\"onChangeHandler($event)\\\"> </app-my-monaco-editor> </div> <div style=\\\"height:240px\\\"> <kendo-tabstrip  style=\\\"width: 100%;\\\"> <kendo-tabstrip-tab [title]=\\\"'变量'\\\" [selected]=\\\"true\\\"> <ng-template kendoTabContent> <kendo-splitter orientation=\\\"horizontal\\\" style=\\\"height:240px\\\"> <kendo-splitter-pane size=\\\"20%\\\">  <app-navigatetree (selecttreechange)=\\\"selectTreeChange($event)\\\"></app-navigatetree> </kendo-splitter-pane>  <kendo-splitter-pane>         <app-expressiongrid  *ngIf= selectvar [cafcontext]=\\\"cafcontext\\\" (selectrowchange)=\\\"selectrowChange($event)\\\" (dbclickinsert)=\\\"dbclickInsert($event)\\\"></app-expressiongrid>  <app-expr-func-grid  *ngIf= selectfunc [func]=\\\"func\\\" (selectrowchange)=\\\"selectrowChange($event)\\\" (dbclickinsert)=\\\"dbclickInsert($event)\\\"></app-expr-func-grid>                      </kendo-splitter-pane> <kendo-splitter-pane size=\\\"20%\\\"> <h3 >{{descriptinfo}} </h3> </kendo-splitter-pane> </kendo-splitter> </ng-template> </kendo-tabstrip-tab> <kendo-tabstrip-tab [title]=\\\"'智能帮助'\\\">  <ng-template kendoTabContent> <p style=\\\"height:220px\\\"> 智能帮助 </p> </ng-template> </kendo-tabstrip-tab> <kendo-tabstrip-tab [title]=\\\"'输出'\\\"> <ng-template kendoTabContent> <p style=\\\"height:220px\\\"> 输出 </p> </ng-template> </kendo-tabstrip-tab> </kendo-tabstrip> </div> </kendo-window> </div> \",\r\n                    styles: [\"kendo-splitter + kendo-splitter { margin: 0px 0 0; } h3 { font-size: 1.2em; padding: 5px; }\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ExpressioneditorComponent.ctorParameters = function () { return [\r\n        { type: expressioneventservice_1.ExpressionEventService, },\r\n    ]; };\r\n    ExpressioneditorComponent.propDecorators = {\r\n        \"closed\": [{ type: core_1.Output },],\r\n        \"expressionEntity\": [{ type: core_1.Input },],\r\n    };\r\n    return ExpressioneditorComponent;\r\n}());\r\nexports.ExpressioneditorComponent = ExpressioneditorComponent;\r\n//# sourceMappingURL=expressioneditor.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@gsp-svc/expression/editor/expressioneditor/expressioneditor.component.js\n// module id = ./node_modules/@gsp-svc/expression/editor/expressioneditor/expressioneditor.component.js\n// module chunks = coderulepackage.module","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ExpressionEntity = /** @class */ (function () {\r\n    function ExpressionEntity() {\r\n    }\r\n    return ExpressionEntity;\r\n}());\r\nexports.ExpressionEntity = ExpressionEntity;\r\n//# sourceMappingURL=expressionentity.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@gsp-svc/expression/editor/expressionentity.js\n// module id = ./node_modules/@gsp-svc/expression/editor/expressionentity.js\n// module chunks = coderulepackage.module","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar _1 = require(\"rxjs/\");\r\nvar ExpressionEventService = /** @class */ (function () {\r\n    function ExpressionEventService() {\r\n        // Observable string sources\r\n        this.windowClosed = new _1.Subject();\r\n        // Observable string streams\r\n        this.windowClosed$ = this.windowClosed.asObservable();\r\n        //创建Observable源\r\n        this._expressionsource = new _1.Subject();\r\n        //在光标处插入表达式事件发布与订阅\r\n        this._insertexpression = new _1.Subject();\r\n        this._clearexpression = new _1.Subject();\r\n    }\r\n    // Service message commands\r\n    // Service message commands\r\n    ExpressionEventService.prototype.closeWindow = \r\n    // Service message commands\r\n    function () {\r\n        this.windowClosed.next();\r\n    };\r\n    //定义发布表达式实体方法\r\n    //定义发布表达式实体方法\r\n    ExpressionEventService.prototype.setExpression = \r\n    //定义发布表达式实体方法\r\n    function (expressionentity) {\r\n        this._expressionsource.next(expressionentity);\r\n    };\r\n    //定义获得表达式实体方法\r\n    //定义获得表达式实体方法\r\n    ExpressionEventService.prototype.getExpression = \r\n    //定义获得表达式实体方法\r\n    function () {\r\n        return this._expressionsource.asObservable();\r\n    };\r\n    ExpressionEventService.prototype.insertExpression = function (expression) {\r\n        this._insertexpression.next(expression);\r\n    };\r\n    ExpressionEventService.prototype.currentExpression = function () {\r\n        return this._insertexpression.asObservable();\r\n    };\r\n    ExpressionEventService.prototype.pushclearExpression = function () {\r\n        this._clearexpression.next();\r\n    };\r\n    ExpressionEventService.prototype.clearExpression = function () {\r\n        return this._clearexpression.asObservable();\r\n    };\r\n    ExpressionEventService.decorators = [\r\n        { type: core_1.Injectable },\r\n    ];\r\n    return ExpressionEventService;\r\n}());\r\nexports.ExpressionEventService = ExpressionEventService;\r\n//# sourceMappingURL=expressioneventservice.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@gsp-svc/expression/editor/expressioneventservice.js\n// module id = ./node_modules/@gsp-svc/expression/editor/expressioneventservice.js\n// module chunks = coderulepackage.module","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar core_2 = require(\"@angular/core\");\r\nvar expressioneditor_component_1 = require(\"./expressioneditor/expressioneditor.component\");\r\nvar core_3 = require(\"@angular/core\");\r\nvar expressioncontextentity_1 = require(\"./expressioncontextentity\");\r\nvar ExpressionService = /** @class */ (function () {\r\n    function ExpressionService(injector, applicationRef, compFactRes) {\r\n        this.injector = injector;\r\n        this.applicationRef = applicationRef;\r\n        this.compFactRes = compFactRes;\r\n        this.i = 0;\r\n        this.exprEntity = new expressioncontextentity_1.ExpressionContextEntity();\r\n    }\r\n    //创建表达式于指定位置\r\n    // public buildExpressionOn(element: HTMLElement, getExprContent?: Function) {\r\n    //     if (this.i == 0) {\r\n    //         this.i = 1;\r\n    //         // Create element\r\n    //         const popup = element;\r\n    //         // Create the component and wire it up with the element\r\n    //         const factory = this.compFactRes.resolveComponentFactory(ExpressioneditorComponent);\r\n    //         factory.inputs.push({ propName: 'expressionEntity', templateName: 'ss' });\r\n    //         const popupComponentRef = factory.create(this.injector, [], popup);\r\n    //         popupComponentRef.instance.expressionEntity = this.exprEntity;\r\n    //         // Attach to the view so that the change detector knows to run\r\n    //         this.applicationRef.attachView(popupComponentRef.hostView);\r\n    //         // Listen to the close event\r\n    //         popupComponentRef.instance.closed.subscribe((expressionContent) => {\r\n    //             document.body.removeChild(popup);\r\n    //             this.applicationRef.detachView(popupComponentRef.hostView);\r\n    //             this.i = 0;       \r\n    //             if (typeof getExprContent === 'function') {\r\n    //                 getExprContent(expressionContent);\r\n    //             }\r\n    //         });\r\n    //         // Add to the DOM\r\n    //         document.body.appendChild(popup);\r\n    //     }\r\n    // }\r\n    //创建表达式（与body）\r\n    //创建表达式于指定位置\r\n    // public buildExpressionOn(element: HTMLElement, getExprContent?: Function) {\r\n    //     if (this.i == 0) {\r\n    //         this.i = 1;\r\n    //         // Create element\r\n    //         const popup = element;\r\n    //         // Create the component and wire it up with the element\r\n    //         const factory = this.compFactRes.resolveComponentFactory(ExpressioneditorComponent);\r\n    //         factory.inputs.push({ propName: 'expressionEntity', templateName: 'ss' });\r\n    //         const popupComponentRef = factory.create(this.injector, [], popup);\r\n    //         popupComponentRef.instance.expressionEntity = this.exprEntity;\r\n    //         // Attach to the view so that the change detector knows to run\r\n    //         this.applicationRef.attachView(popupComponentRef.hostView);\r\n    //         // Listen to the close event\r\n    //         popupComponentRef.instance.closed.subscribe((expressionContent) => {\r\n    //             document.body.removeChild(popup);\r\n    //             this.applicationRef.detachView(popupComponentRef.hostView);\r\n    //             this.i = 0;\r\n    //             if (typeof getExprContent === 'function') {\r\n    //                 getExprContent(expressionContent);\r\n    //             }\r\n    //         });\r\n    //         // Add to the DOM\r\n    //         document.body.appendChild(popup);\r\n    //     }\r\n    // }\r\n    //创建表达式（与body）\r\n    ExpressionService.prototype.buildExpression = \r\n    //创建表达式于指定位置\r\n    // public buildExpressionOn(element: HTMLElement, getExprContent?: Function) {\r\n    //     if (this.i == 0) {\r\n    //         this.i = 1;\r\n    //         // Create element\r\n    //         const popup = element;\r\n    //         // Create the component and wire it up with the element\r\n    //         const factory = this.compFactRes.resolveComponentFactory(ExpressioneditorComponent);\r\n    //         factory.inputs.push({ propName: 'expressionEntity', templateName: 'ss' });\r\n    //         const popupComponentRef = factory.create(this.injector, [], popup);\r\n    //         popupComponentRef.instance.expressionEntity = this.exprEntity;\r\n    //         // Attach to the view so that the change detector knows to run\r\n    //         this.applicationRef.attachView(popupComponentRef.hostView);\r\n    //         // Listen to the close event\r\n    //         popupComponentRef.instance.closed.subscribe((expressionContent) => {\r\n    //             document.body.removeChild(popup);\r\n    //             this.applicationRef.detachView(popupComponentRef.hostView);\r\n    //             this.i = 0;\r\n    //             if (typeof getExprContent === 'function') {\r\n    //                 getExprContent(expressionContent);\r\n    //             }\r\n    //         });\r\n    //         // Add to the DOM\r\n    //         document.body.appendChild(popup);\r\n    //     }\r\n    // }\r\n    //创建表达式（与body）\r\n    function (getExprContent) {\r\n        var that = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (that.i == 0) {\r\n                that.i = 1;\r\n                // Create element\r\n                var popup_1 = document.createElement('popup-component');\r\n                // Create the component and wire it up with the element\r\n                var factory = that.compFactRes.resolveComponentFactory(expressioneditor_component_1.ExpressioneditorComponent);\r\n                factory.inputs.push({ propName: 'expressionEntity', templateName: 'ss' });\r\n                var popupComponentRef_1 = factory.create(that.injector, [], popup_1);\r\n                popupComponentRef_1.instance.expressionEntity = that.exprEntity;\r\n                // Attach to the view so that the change detector knows to run\r\n                that.applicationRef.attachView(popupComponentRef_1.hostView);\r\n                // Listen to the close event\r\n                // Listen to the close event\r\n                popupComponentRef_1.instance.closed.subscribe(function (expressionContent) {\r\n                    document.body.removeChild(popup_1);\r\n                    that.applicationRef.detachView(popupComponentRef_1.hostView);\r\n                    that.i = 0;\r\n                    that.exprEntity = new expressioncontextentity_1.ExpressionContextEntity();\r\n                    return resolve(expressionContent);\r\n                });\r\n                // Add to the DOM\r\n                document.body.appendChild(popup_1);\r\n            }\r\n        });\r\n    };\r\n    //添加上下文变量方法\r\n    //添加上下文变量方法\r\n    ExpressionService.prototype.addContext = \r\n    //添加上下文变量方法\r\n    function (contextEntity) {\r\n        this.exprEntity.contextEntities.push(contextEntity);\r\n    };\r\n    //添加系统变量方法\r\n    //添加系统变量方法\r\n    ExpressionService.prototype.addSession = \r\n    //添加系统变量方法\r\n    function (sessionEntity) {\r\n        this.exprEntity.sessionEntities.push(sessionEntity);\r\n    };\r\n    //添加函数方法\r\n    //添加函数方法\r\n    ExpressionService.prototype.addFunc = \r\n    //添加函数方法\r\n    function (funcEntity) {\r\n        this.exprEntity.funcEntities.push(funcEntity);\r\n    };\r\n    //预置表达式\r\n    //预置表达式\r\n    ExpressionService.prototype.addExpressionText = \r\n    //预置表达式\r\n    function (text) {\r\n        this.exprEntity.expr = text;\r\n    };\r\n    ExpressionService.decorators = [\r\n        { type: core_3.Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    ExpressionService.ctorParameters = function () { return [\r\n        { type: core_1.Injector, },\r\n        { type: core_1.ApplicationRef, },\r\n        { type: core_2.ComponentFactoryResolver, },\r\n    ]; };\r\n    return ExpressionService;\r\n}());\r\nexports.ExpressionService = ExpressionService;\r\n//# sourceMappingURL=expressionservice.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@gsp-svc/expression/editor/expressionservice.js\n// module id = ./node_modules/@gsp-svc/expression/editor/expressionservice.js\n// module chunks = coderulepackage.module","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar FuncEntity = /** @class */ (function () {\r\n    function FuncEntity() {\r\n    }\r\n    return FuncEntity;\r\n}());\r\nexports.FuncEntity = FuncEntity;\r\nvar FuncType;\r\n(function (FuncType) {\r\n    FuncType[FuncType[\"Date\"] = 0] = \"Date\";\r\n    FuncType[FuncType[\"Estimate\"] = 1] = \"Estimate\";\r\n    FuncType[FuncType[\"String\"] = 2] = \"String\";\r\n    FuncType[FuncType[\"Translate\"] = 3] = \"Translate\";\r\n    FuncType[FuncType[\"Aggregate\"] = 4] = \"Aggregate\";\r\n    FuncType[FuncType[\"Extend\"] = 5] = \"Extend\";\r\n    FuncType[FuncType[\"Math\"] = 6] = \"Math\";\r\n})(FuncType = exports.FuncType || (exports.FuncType = {}));\r\n//# sourceMappingURL=funcentity.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@gsp-svc/expression/editor/funcentity.js\n// module id = ./node_modules/@gsp-svc/expression/editor/funcentity.js\n// module chunks = coderulepackage.module","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\n// injectionToken作用说明\r\n// https://segmentfault.com/a/1190000008626348\r\nexports.MY_MONACO_EDITOR_CONFIG = new core_1.InjectionToken('MY_MONACO_EDITOR_CONFIG');\r\n//# sourceMappingURL=editorconfig.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@gsp-svc/expression/editor/my-monaco-editor/editorconfig.js\n// module id = ./node_modules/@gsp-svc/expression/editor/my-monaco-editor/editorconfig.js\n// module chunks = coderulepackage.module","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CODE_EDITOR_EVENTS = {\r\n    onInit: 'onInit',\r\n    onChange: 'onChange',\r\n    onTouched: 'onTouched'\r\n};\r\n//# sourceMappingURL=events.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@gsp-svc/expression/editor/my-monaco-editor/my-monaco-editor-services/events.js\n// module id = ./node_modules/@gsp-svc/expression/editor/my-monaco-editor/my-monaco-editor-services/events.js\n// module chunks = coderulepackage.module","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar lodash_1 = require(\"lodash\");\r\nvar events_1 = require(\"./events\");\r\nvar CodeEditorEventService = /** @class */ (function () {\r\n    function CodeEditorEventService() {\r\n        this.eventNames = Object.keys(events_1.CODE_EDITOR_EVENTS);\r\n        this._events = {};\r\n    }\r\n    /**\r\n     * 设置启用事件\r\n     * @param  事件\r\n     */\r\n    /**\r\n         * 设置启用事件\r\n         * @param  事件\r\n         */\r\n    CodeEditorEventService.prototype.addEvent = /**\r\n         * 设置启用事件\r\n         * @param  事件\r\n         */\r\n    function (event) {\r\n        lodash_1.assign(this._events, event);\r\n        // console.log(this.events);\r\n    };\r\n    CodeEditorEventService.prototype.fireEvent = function (event) {\r\n        this._events[event.eventName].emit(event);\r\n        // console.log(\"Emit Event:\" + event);\r\n    };\r\n    CodeEditorEventService.decorators = [\r\n        { type: core_1.Injectable },\r\n    ];\r\n    return CodeEditorEventService;\r\n}());\r\nexports.CodeEditorEventService = CodeEditorEventService;\r\n//# sourceMappingURL=monaco-editor.event.service.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@gsp-svc/expression/editor/my-monaco-editor/my-monaco-editor-services/monaco-editor.event.service.js\n// module id = ./node_modules/@gsp-svc/expression/editor/my-monaco-editor/my-monaco-editor-services/monaco-editor.event.service.js\n// module chunks = coderulepackage.module","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _1 = require(\"@angular/core/\");\r\nvar _2 = require(\"@angular/core/\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nvar lodash_1 = require(\"lodash\");\r\nvar editorconfig_1 = require(\"./editorconfig\");\r\nvar monaco_editor_event_service_1 = require(\"./my-monaco-editor-services/monaco-editor.event.service\");\r\nvar events_1 = require(\"./my-monaco-editor-services/events\");\r\nvar expressioneventservice_1 = require(\"../expressioneventservice\");\r\nvar loadedMonaco = false;\r\nvar loadPromise;\r\n// 自定义输入控件:1.封装ControlValueAccessor\r\n// https://code-examples.net/zh-CN/q/2154761\r\nexports.CODE_EDITOR_INPUT_VALUE_ACCESSOR = {\r\n    // https://blog.csdn.net/wangdan_2013/article/details/81314959\r\n    provide: forms_1.NG_VALUE_ACCESSOR,\r\n    //\r\n    useExisting: _2.forwardRef(function () { return MyMonacoEditorComponent; }),\r\n    //\r\n    multi: true //\r\n};\r\nvar MyMonacoEditorComponent = /** @class */ (function () {\r\n    // 注入AngularMonacoEditorConfig，在创建Editor实例时设置config\r\n    function MyMonacoEditorComponent(zone, config, codeEditorEventService, eventService) {\r\n        var _this = this;\r\n        this.zone = zone;\r\n        this.config = config;\r\n        this.codeEditorEventService = codeEditorEventService;\r\n        this.eventService = eventService;\r\n        this._value = '';\r\n        //ControlValueAccessor提供的事件回调\r\n        this.onChangeHandler = function (_) {\r\n            //Propagate Change to outside\r\n            _this.codeEditorEventService.fireEvent({\r\n                eventName: events_1.CODE_EDITOR_EVENTS.onChange,\r\n                target: _this,\r\n                data: _\r\n            });\r\n        };\r\n        //ControlValueAccessor提供的事件回调\r\n        this.onTouchedHandler = function () {\r\n            _this.codeEditorEventService.fireEvent({\r\n                eventName: events_1.CODE_EDITOR_EVENTS.onTouched,\r\n                target: _this\r\n            });\r\n        };\r\n        // 初始化自定义事件\r\n        var self = this;\r\n        codeEditorEventService.eventNames.forEach(function (name) {\r\n            // 创建自定义事件，此处作用等效于: @Output() onInit = new EventEmitter<any>()\r\n            self[name] = new _1.EventEmitter();\r\n            var eventPair = lodash_1.pick(self, name);\r\n            codeEditorEventService.addEvent(eventPair);\r\n        });\r\n    }\r\n    Object.defineProperty(MyMonacoEditorComponent.prototype, \"options\", {\r\n        get: function () {\r\n            return this._options;\r\n        },\r\n        set: function (options) {\r\n            // 默认options(this.config.defaultOptions) + 自定义options(options)\r\n            this._options = Object.assign({}, this.config.defaultOptions, options);\r\n            if (this._editor) {\r\n                this._editor.dispose();\r\n                this.initMonaco(options);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    //在光标处插入表达式的方法\r\n    //在光标处插入表达式的方法\r\n    MyMonacoEditorComponent.prototype.insertWord = \r\n    //在光标处插入表达式的方法\r\n    function (insertWord) {\r\n        if (insertWord && insertWord != undefined && insertWord != \"\") {\r\n            var p = this._editor.getPosition();\r\n            var range = new monaco.Range(p.lineNumber, p.column, p.lineNumber, p.column);\r\n            var id = { major: 1, minor: 1 };\r\n            var text = insertWord;\r\n            var op = { identifier: id, range: range, text: text, forceMoveMarkers: true };\r\n            this._editor.executeEdits(\"my-source\", [op]);\r\n        }\r\n    };\r\n    MyMonacoEditorComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        if (loadedMonaco) {\r\n            // Wait until monaco editor is available\r\n            loadPromise.then(function () {\r\n                _this.initMonaco(_this.options);\r\n            });\r\n        }\r\n        else {\r\n            loadedMonaco = true;\r\n            loadPromise = new Promise(function (resolve) {\r\n                var baseUrl = _this.config.baseUrl || '/assets';\r\n                // if (typeof((<any>window).monaco) === 'object') {\r\n                //   resolve();\r\n                //   return;\r\n                // }\r\n                var onGotAmdLoader = function () {\r\n                    // Load monaco\r\n                    // Load monaco\r\n                    window.require.config({ paths: { 'vs': baseUrl + \"/monaco/vs\" } });\r\n                    window.require(['vs/editor/editor.main'], function () {\r\n                        _this.onMonacoLoad();\r\n                        _this.initMonaco(_this.options);\r\n                        resolve();\r\n                    });\r\n                };\r\n                // Load AMD loader if necessary\r\n                if (!window.require) {\r\n                    var loaderScript = document.createElement('script');\r\n                    loaderScript.type = 'text/javascript';\r\n                    loaderScript.src = baseUrl + \"/monaco/vs/loader.js\";\r\n                    loaderScript.addEventListener('load', onGotAmdLoader);\r\n                    document.body.appendChild(loaderScript);\r\n                }\r\n                else {\r\n                    onGotAmdLoader();\r\n                }\r\n            });\r\n        }\r\n        //在光标处插入表达式事件订阅\r\n        this.eventService.currentExpression().subscribe(function (insertexpression) { _this.insertWord(insertexpression); });\r\n        this.eventService.clearExpression().subscribe(function () { _this._editor.setValue(\"\"); });\r\n    };\r\n    MyMonacoEditorComponent.prototype.onMonacoLoad = function () {\r\n        var id = \"foo.json\";\r\n        monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\r\n            validate: true,\r\n            schemas: [{\r\n                    uri: \"http://myserver/foo-schema.json\",\r\n                    fileMatch: [id],\r\n                    schema: {\r\n                        type: \"object\",\r\n                        properties: {\r\n                            p1: {\r\n                                enum: [\"v1\", \"v2\"]\r\n                            },\r\n                            p2: {\r\n                                $ref: \"http://myserver/bar-schema.json\"\r\n                            }\r\n                        }\r\n                    }\r\n                }, {\r\n                    uri: \"http://myserver/bar-schema.json\",\r\n                    fileMatch: [id],\r\n                    schema: {\r\n                        type: \"object\",\r\n                        properties: {\r\n                            q1: {\r\n                                enum: [\"x1\", \"x2\"]\r\n                            }\r\n                        }\r\n                    }\r\n                }]\r\n        });\r\n    };\r\n    MyMonacoEditorComponent.prototype.ngOnDestroy = function () {\r\n        // if (this._windowResizeSubscription) {\r\n        //   this._windowResizeSubscription.unsubscribe();\r\n        // }\r\n        if (this._editor) {\r\n            this._editor.dispose();\r\n            this._editor = undefined;\r\n        }\r\n    };\r\n    MyMonacoEditorComponent.prototype.initMonaco = function (options) {\r\n        var _this = this;\r\n        console.log(\"Init the custom monaco code editor.\");\r\n        // const hasModel = !!options.model;\r\n        var hasModel = false;\r\n        // if (hasModel) {\r\n        //   options.model = monaco.editor.createModel(options.model.value, options.model.language, options.model.uri);\r\n        // }\r\n        this._editor = monaco.editor.create(this._editorComponent.nativeElement, options);\r\n        if (!hasModel) {\r\n            this._editor.setValue(this._value);\r\n        }\r\n        // monaco editor -> outside component\r\n        this._editor.onDidChangeModelContent(function () { return _this.onChangeModelContentHandler(); });\r\n        this._editor.onDidBlurEditorText(function () { return _this.onBlurEditorTextHandler(); });\r\n        // refresh layout on resize event.\r\n        // if (this._windowResizeSubscription) {\r\n        //   this._windowResizeSubscription.unsubscribe();\r\n        // }\r\n        // this._windowResizeSubscription = fromEvent(window, 'resize').subscribe(() => this._editor.layout());\r\n        this.codeEditorEventService.fireEvent({\r\n            eventName: events_1.CODE_EDITOR_EVENTS.onInit,\r\n            target: this,\r\n            editor: this._editor\r\n        });\r\n    };\r\n    MyMonacoEditorComponent.prototype.onChangeModelContentHandler = function () {\r\n        var _this = this;\r\n        var _value = this._editor.getValue();\r\n        // monaco editor -> outside component\r\n        // https://github.com/JTangming/tm/issues/4 ngZone详解\r\n        this.zone.run(function () { return _this.value = _value; }); // value is not propagated to parent when executing outside zone.\r\n        // console.log(\"write from the monaco:\" + this._value);\r\n    };\r\n    MyMonacoEditorComponent.prototype.onBlurEditorTextHandler = function () {\r\n        this.onTouchedHandler();\r\n    };\r\n    Object.defineProperty(MyMonacoEditorComponent.prototype, \"value\", {\r\n        //get accessor\r\n        get: \r\n        //get accessor\r\n        function () {\r\n            return this._value;\r\n        },\r\n        //set accessor including call the onchange callback\r\n        set: \r\n        //set accessor including call the onchange callback\r\n        function (v) {\r\n            if (v !== this.value) {\r\n                // 注意这种写法，值得学习\r\n                this._value = v;\r\n            }\r\n            this.onChangeHandler(this.value); //在属性修饰器里调用onchangeHandler方法\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ;\r\n    MyMonacoEditorComponent.prototype.localEditor = function () {\r\n        //Demo: outside component -> monaco editor\r\n        this.writeValue('test');\r\n    };\r\n    // 自定义输入控件:3.2 implements ControlValueAccesso\r\n    // outside component -> monaco editor\r\n    //From ControlValueAccessor interface\r\n    // 自定义输入控件:3.2 implements ControlValueAccesso\r\n    // outside component -> monaco editor\r\n    //From ControlValueAccessor interface\r\n    MyMonacoEditorComponent.prototype.writeValue = \r\n    // 自定义输入控件:3.2 implements ControlValueAccesso\r\n    // outside component -> monaco editor\r\n    //From ControlValueAccessor interface\r\n    function (value) {\r\n        var _this = this;\r\n        this.value = value || '';\r\n        // Fix for value change while dispose in process.\r\n        setTimeout(function () {\r\n            if (_this._editor /*&& !this.options.model*/) {\r\n                _this._editor.setValue(_this._value);\r\n                // console.log(\"write to the editor:\" + this._value);\r\n            }\r\n        });\r\n    };\r\n    //From ControlValueAccessor interface\r\n    //From ControlValueAccessor interface\r\n    MyMonacoEditorComponent.prototype.registerOnChange = \r\n    //From ControlValueAccessor interface\r\n    function (fn) {\r\n        this.onChangeHandler(this);\r\n    };\r\n    //From ControlValueAccessor interface\r\n    //From ControlValueAccessor interface\r\n    MyMonacoEditorComponent.prototype.registerOnTouched = \r\n    //From ControlValueAccessor interface\r\n    function (fn) {\r\n        this.onTouchedHandler();\r\n    };\r\n    MyMonacoEditorComponent.decorators = [\r\n        { type: _1.Component, args: [{\r\n                    selector: 'app-my-monaco-editor',\r\n                    template: \"<div class=\\\"editor\\\" #codeEditor></div>\",\r\n                    styles: [\":host { display: block; height: 200px; } .editor { width: 100%; height: 98%; }\"],\r\n                    // 自定义输入控件:2.引入依赖服务ControlValueAccessor\r\n                    providers: [exports.CODE_EDITOR_INPUT_VALUE_ACCESSOR]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MyMonacoEditorComponent.ctorParameters = function () { return [\r\n        { type: _2.NgZone, },\r\n        { type: undefined, decorators: [{ type: _2.Inject, args: [editorconfig_1.MY_MONACO_EDITOR_CONFIG,] },] },\r\n        { type: monaco_editor_event_service_1.CodeEditorEventService, },\r\n        { type: expressioneventservice_1.ExpressionEventService, },\r\n    ]; };\r\n    MyMonacoEditorComponent.propDecorators = {\r\n        \"_editorComponent\": [{ type: _1.ViewChild, args: ['codeEditor',] },],\r\n        \"onInit\": [{ type: _1.Output },],\r\n        \"onChange\": [{ type: _1.Output },],\r\n        \"onTouched\": [{ type: _1.Output },],\r\n        \"options\": [{ type: _1.Input, args: ['options',] },],\r\n    };\r\n    return MyMonacoEditorComponent;\r\n}());\r\nexports.MyMonacoEditorComponent = MyMonacoEditorComponent;\r\n//# sourceMappingURL=my-monaco-editor.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@gsp-svc/expression/editor/my-monaco-editor/my-monaco-editor.component.js\n// module id = ./node_modules/@gsp-svc/expression/editor/my-monaco-editor/my-monaco-editor.component.js\n// module chunks = coderulepackage.module","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar common_1 = require(\"@angular/common\");\r\nvar my_monaco_editor_component_1 = require(\"./my-monaco-editor.component\");\r\nvar editorconfig_1 = require(\"./editorconfig\");\r\nvar monaco_editor_event_service_1 = require(\"./my-monaco-editor-services/monaco-editor.event.service\");\r\nvar MyMonacoEditorModule = /** @class */ (function () {\r\n    function MyMonacoEditorModule() {\r\n    }\r\n    MyMonacoEditorModule.forRoot = function (config) {\r\n        if (config === void 0) { config = {}; }\r\n        return {\r\n            ngModule: MyMonacoEditorModule,\r\n            providers: [\r\n                { provide: editorconfig_1.MY_MONACO_EDITOR_CONFIG, useValue: config }\r\n            ]\r\n        };\r\n    };\r\n    MyMonacoEditorModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    imports: [\r\n                        common_1.CommonModule\r\n                    ],\r\n                    exports: [\r\n                        my_monaco_editor_component_1.MyMonacoEditorComponent\r\n                    ],\r\n                    entryComponents: [\r\n                        my_monaco_editor_component_1.MyMonacoEditorComponent\r\n                    ],\r\n                    declarations: [\r\n                        my_monaco_editor_component_1.MyMonacoEditorComponent\r\n                    ],\r\n                    providers: [\r\n                        monaco_editor_event_service_1.CodeEditorEventService\r\n                    ]\r\n                },] },\r\n    ];\r\n    return MyMonacoEditorModule;\r\n}());\r\nexports.MyMonacoEditorModule = MyMonacoEditorModule;\r\n//# sourceMappingURL=my-monaco-editor.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@gsp-svc/expression/editor/my-monaco-editor/my-monaco-editor.module.js\n// module id = ./node_modules/@gsp-svc/expression/editor/my-monaco-editor/my-monaco-editor.module.js\n// module chunks = coderulepackage.module","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar is = function (fileName, ext) { return new RegExp(\".\" + ext).test(fileName); };\r\nvar ɵ0 = is;\r\nexports.ɵ0 = ɵ0;\r\nvar NavigateTreeComponent = /** @class */ (function () {\r\n    function NavigateTreeComponent() {\r\n        var _this = this;\r\n        //向父组件expressioneditor传递所选树信息\r\n        this.selecttreechange = new core_1.EventEmitter();\r\n        //选中渲染效果变量\r\n        this.selectedKeys = [];\r\n        //树形结构\r\n        this.data = [\r\n            {\r\n                text: '变量',\r\n                items: [\r\n                    { text: '上下文变量' },\r\n                    { text: '系统变量' }\r\n                ],\r\n            },\r\n            {\r\n                text: '函数',\r\n                items: [\r\n                    { text: '扩展函数-扩展' },\r\n                    { text: '聚合-内置' },\r\n                    { text: '类型转换-内置' },\r\n                    { text: '判断-内置' },\r\n                    { text: '日期时间-内置' },\r\n                    { text: '数学-内置' },\r\n                    { text: '字符串-内置' },\r\n                ]\r\n            },\r\n            {\r\n                text: '数据模型',\r\n                items: [\r\n                    {\r\n                        text: 'DATA(DATA)',\r\n                        items: []\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n        this.isItemSelected = function (_, index) { return _this.selectedKeys.indexOf(index) > -1; };\r\n    }\r\n    NavigateTreeComponent.prototype.ngOnInit = function () {\r\n    };\r\n    //根据树形节点名后缀预置图标方法\r\n    //根据树形节点名后缀预置图标方法\r\n    NavigateTreeComponent.prototype.iconClass = \r\n    //根据树形节点名后缀预置图标方法\r\n    function (_a) {\r\n        var text = _a.text, items = _a.items;\r\n        return {\r\n            'k-i-folder': items !== undefined,\r\n            'k-i-formula-fx': is(text, '-内置|-扩展'),\r\n            'k-i-paste-plain-text': is(text, '变量'),\r\n            'k-i-image': is(text, 'jpg|png'),\r\n            'k-icon': true\r\n        };\r\n    };\r\n    //选中树节点事件\r\n    //选中树节点事件\r\n    NavigateTreeComponent.prototype.handleSelection = \r\n    //选中树节点事件\r\n    function (_a) {\r\n        var index = _a.index;\r\n        //选中效果渲染\r\n        this.selectedKeys = [index];\r\n        this.selecttreechange.emit(index);\r\n    };\r\n    NavigateTreeComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'app-navigatetree',\r\n                    template: \"<kendo-treeview [nodes]=\\\"data\\\" textField=\\\"text\\\" kendoTreeViewExpandable kendoTreeViewHierarchyBinding childrenField=\\\"items\\\" kendoTreeViewSelectable [isSelected]=\\\"isItemSelected\\\" (selectionChange)=\\\"handleSelection($event)\\\"> <ng-template kendoTreeViewNodeTemplate let-dataItem> <span [ngClass]=\\\"iconClass(dataItem)\\\"></span> {{dataItem.text}} </ng-template> </kendo-treeview> \",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    NavigateTreeComponent.ctorParameters = function () { return []; };\r\n    NavigateTreeComponent.propDecorators = {\r\n        \"selecttreechange\": [{ type: core_1.Output },],\r\n    };\r\n    return NavigateTreeComponent;\r\n}());\r\nexports.NavigateTreeComponent = NavigateTreeComponent;\r\n//# sourceMappingURL=navigatetree.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@gsp-svc/expression/editor/navigate-tree/navigatetree.component.js\n// module id = ./node_modules/@gsp-svc/expression/editor/navigate-tree/navigatetree.component.js\n// module chunks = coderulepackage.module","\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./editor/expression.module\"));\r\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@gsp-svc/expression/index.js\n// module id = ./node_modules/@gsp-svc/expression/index.js\n// module chunks = coderulepackage.module","import { InjectionToken } from '@angular/core';\nimport { merge } from 'rxjs/observable/merge';\nimport { of } from \"rxjs/observable/of\";\n/**\n * @hidden\n */\nexport const isPresent = (value) => value !== null && value !== undefined;\n/**\n * @hidden\n */\nexport const isBlank = (value) => value === null || value === undefined;\n/**\n * @hidden\n */\nexport const isArray = (value) => Array.isArray(value);\n/**\n * @hidden\n */\nexport const isTruthy = (value) => !!value;\n/**\n * @hidden\n */\nexport const isNullOrEmptyString = (value) => isBlank(value) || (value.trim && value.trim().length === 0);\n/**\n * @hidden\n */\nexport const isChanged = (propertyName, changes, skipFirstChange = true) => (changes[propertyName] && (!changes[propertyName].isFirstChange() || !skipFirstChange) &&\n    changes[propertyName].previousValue !== changes[propertyName].currentValue);\n/**\n * @hidden\n */\nexport const anyChanged = (propertyNames, changes, skipFirstChange = true) => propertyNames.some(name => isChanged(name, changes, skipFirstChange));\n/**\n * @hidden\n */\nexport const observe = (list) => merge(of(list), list.changes);\n/**\n * @hidden\n */\nexport const isUniversal = () => typeof document === 'undefined';\n/**\n * @hidden\n */\nexport const extractFormat = (format) => {\n    if (!isNullOrEmptyString(format) && format.startsWith('{0:')) {\n        return format.slice(3, format.length - 1);\n    }\n    return format;\n};\n/**\n * @hidden\n */\nexport const not = (fn) => (...args) => !fn.apply(null, args);\n/**\n * @hidden\n */\nexport const or = (...conditions) => (value) => conditions.reduce((acc, x) => acc || x(value), false);\n/**\n * @hidden\n */\nexport const and = (...conditions) => (value) => conditions.reduce((acc, x) => acc && x(value), true);\n/**\n * @hidden\n */\nexport const Skip = new InjectionToken(\"Skip\"); // tslint:disable-line:variable-name\n/**\n * @hidden\n */\nexport const guid = () => {\n    let id = \"\";\n    let i;\n    let random;\n    for (i = 0; i < 32; i++) {\n        random = Math.random() * 16 | 0; // tslint:disable-line:no-bitwise\n        if (i === 8 || i === 12 || i === 16 || i === 20) {\n            id += \"-\";\n        }\n        // tslint:disable-next-line:no-bitwise\n        id += (i === 12 ? 4 : (i === 16 ? (random & 3 | 8) : random)).toString(16);\n    }\n    return id;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-grid/dist/es2015/utils.js\n// module id = ./node_modules/@progress/kendo-angular-grid/dist/es2015/utils.js\n// module chunks = iapipackage.module coderulepackage.module webcmdpackage.module","/**\n * Generated bundle index. Do not edit.\n */\nexport * from './main';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-label/dist/es/index.js\n// module id = ./node_modules/@progress/kendo-angular-label/dist/es/index.js\n// module chunks = coderulepackage.module webcmdpackage.module","import { Directive, Input, HostBinding, HostListener } from '@angular/core';\nvar isDocumentAvailable = function () {\n    return typeof document !== 'undefined' && !!document.body;\n};\n/**\n * Represents the [Kendo UI Label directive for Angular]({% slug overview_label %}).\n * The Label associates a focusable Angular component or an HTML element\n * with a `label` tag by using the `[for]` property binding.\n *\n * To associate a component by using the `label` element, either:\n * * Set the `[for]` property binding to a\n * [template reference variable](https://angular.io/docs/ts/latest/guide/template-syntax.html#!#ref-vars), or\n * * Set the `[for]` property binding to an `id` HTML string value.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <div class=\"row example-wrapper\" style=\"min-height: 450px;\">\n *    <div class=\"col-xs-12 col-md-6 example-col\">\n *      <label [for]=\"datepicker\">DatePicker: </label>\n *      <kendo-datepicker #datepicker></kendo-datepicker>\n *    </div>\n *\n *    <div class=\"col-xs-12 col-md-6 example-col\">\n *      <label [for]=\"'input'\">Input: </label>\n *      <input id=\"input\" />\n *    </div>\n *  </div>\n * `\n * })\n * class AppComponent { }\n * ```\n */\nvar LabelDirective = /** @class */ (function () {\n    function LabelDirective() {\n    }\n    Object.defineProperty(LabelDirective.prototype, \"labelFor\", {\n        get: function () {\n            if (typeof this.for === 'string') {\n                return this.for;\n            }\n            if (!isDocumentAvailable()) {\n                return null;\n            }\n            var component = this.getFocusableComponent() || {};\n            return component.focusableId || component.id || null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @hidden\n     */\n    LabelDirective.prototype.handleClick = function () {\n        var component = this.getFocusableComponent();\n        if (!component) {\n            return;\n        }\n        if (component.focusComponent) {\n            component.focusComponent();\n        }\n        if (component.focus) {\n            component.focus();\n        }\n    };\n    LabelDirective.prototype.getFocusableComponent = function () {\n        var target = this.for;\n        if (target) {\n            var focusableComponent = target;\n            var hasFocus = focusableComponent.focus !== undefined;\n            var hasFocusComponent = focusableComponent.focusComponent !== undefined;\n            if (hasFocus || hasFocusComponent) {\n                return target;\n            }\n            if (isDocumentAvailable() && typeof target === 'string') {\n                return document.querySelector(\"[id='\" + target + \"']\");\n            }\n        }\n        return null;\n    };\n    LabelDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: 'label[for]' //tslint:disable-line:directive-selector\n                },] },\n    ];\n    /** @nocollapse */\n    LabelDirective.ctorParameters = function () { return []; };\n    LabelDirective.propDecorators = {\n        'for': [{ type: Input },],\n        'labelFor': [{ type: HostBinding, args: ['attr.for',] },],\n        'handleClick': [{ type: HostListener, args: ['click',] },],\n    };\n    return LabelDirective;\n}());\nexport { LabelDirective };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-label/dist/es/label.directive.js\n// module id = ./node_modules/@progress/kendo-angular-label/dist/es/label.directive.js\n// module chunks = coderulepackage.module webcmdpackage.module","import { NgModule } from '@angular/core';\nimport { LabelDirective } from './label.directive';\nvar COMPONENT_DIRECTIVES = [LabelDirective];\n/**\n * The exported package module.\n *\n * The package exports:\n * - `LabelDirective`&mdash;The Label directive class.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Label module\n * import { LabelModule } from '@progress/kendo-angular-label';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, LabelModule], // import Label module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nvar LabelModule = /** @class */ (function () {\n    function LabelModule() {\n    }\n    LabelModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [COMPONENT_DIRECTIVES],\n                    exports: [COMPONENT_DIRECTIVES]\n                },] },\n    ];\n    /** @nocollapse */\n    LabelModule.ctorParameters = function () { return []; };\n    return LabelModule;\n}());\nexport { LabelModule };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-label/dist/es/label.module.js\n// module id = ./node_modules/@progress/kendo-angular-label/dist/es/label.module.js\n// module chunks = coderulepackage.module webcmdpackage.module","export { LabelDirective } from './label.directive';\nexport { LabelModule } from './label.module';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-label/dist/es/main.js\n// module id = ./node_modules/@progress/kendo-angular-label/dist/es/main.js\n// module chunks = coderulepackage.module webcmdpackage.module","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { ComponentFactoryResolver, Injector, NgModule } from '@angular/core';\r\nimport { PackageModule } from '@farris/ide-devkit';\r\nimport { HttpModule } from '@angular/http';\r\nimport { CodeRuleDesignerPackage } from './package';\r\nimport { CodeRuleDesignerModule } from './views/coderuledesigner/coderule.module';\r\nvar CodeRulePackageModule = (function (_super) {\r\n    __extends(CodeRulePackageModule, _super);\r\n    function CodeRulePackageModule(cfr, injector) {\r\n        var _this = _super.call(this) || this;\r\n        _this.cfr = cfr;\r\n        _this.injector = injector;\r\n        return _this;\r\n    }\r\n    CodeRulePackageModule.prototype.initPackage = function (gsp) {\r\n        this.package = new CodeRuleDesignerPackage(gsp, this.cfr, this.injector);\r\n    };\r\n    CodeRulePackageModule = __decorate([\r\n        NgModule({\r\n            imports: [\r\n                CodeRuleDesignerModule,\r\n                HttpModule,\r\n            ],\r\n            providers: []\r\n        }),\r\n        __metadata(\"design:paramtypes\", [ComponentFactoryResolver, Injector])\r\n    ], CodeRulePackageModule);\r\n    return CodeRulePackageModule;\r\n}(PackageModule));\r\nexport { CodeRulePackageModule };\r\n//# sourceMappingURL=coderulepackage.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/coderuledesigner/coderulepackage.module.js\n// module id = ./src/packages/coderuledesigner/coderulepackage.module.js\n// module chunks = coderulepackage.module","import { GSP, Package } from '@farris/ide-devkit';\r\nimport { ComponentFactoryResolver, Injector } from '@angular/core';\r\nimport { CodeRuleDesignerPackageView, CodeRuleWizardPackageView } from './views';\r\nimport { CodeRuleDesignerComponent } from './views/coderuledesigner/coderule.component';\r\nimport { MetadataDto } from '../../../reference/metadata/metadata.ref';\r\nimport { CodeRuleWizardComponent } from './views/coderuledesigner/coderulewizard/coderulewizard.component';\r\n\r\nexport class CodeRuleDesignerPackage extends Package {\r\n\r\n  private layoutPanel: any;\r\n\r\n  constructor(\r\n    gsp: GSP,\r\n    private cfr: ComponentFactoryResolver,\r\n    private injector: Injector\r\n  ) {\r\n    super(gsp);\r\n  }\r\n\r\n  activate(state) {\r\n    this.gsp.workspace.addOpener((uri: string) => this.openCodeRule(uri));\r\n    this.gsp.eventBus.on(null, null, 'Command:openMetadataGuide:CodeRule', this, (data) => this.openCodeRuleWizard(state, data));\r\n  }\r\n\r\n  openCodeRule(uri) {\r\n    if (uri.endsWith('.coderule')) {\r\n      const pkgView = new CodeRuleDesignerPackageView({}, this.cfr, this.injector);\r\n      const currentElement = pkgView.getElement().instance as CodeRuleDesignerComponent;\r\n      currentElement.metadataUri = uri;\r\n      const fileName = uri.substring(uri.lastIndexOf('/') + 1);\r\n      return {\r\n        getTitle: () => fileName,\r\n        getElement: () => pkgView.getElement()\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 打开编号规则向导\r\n   * @param state state\r\n   * @param dto 元数据MetadataDto\r\n   */\r\n  openCodeRuleWizard(state: any, dto: MetadataDto) {\r\n    const packageView = new CodeRuleWizardPackageView(state, this.cfr, this.injector);\r\n    const element = packageView.getElement();\r\n    const guide = element.instance as CodeRuleWizardComponent;\r\n    guide.createMetadataSuccess.subscribe((data)=>{\r\n      //debugger;\r\n      this.addNewTreeNode(data); \r\n    });\r\n    guide.createMetadataEvent.subscribe((data) => {\r\n      this.createMetadata(data);\r\n      // this.refreshTree();\r\n      this.openMetadata(data);\r\n    });\r\n    this.showGuide(element, guide, '编号规则定义向导', dto);\r\n  }\r\n\r\n  addNewTreeNode(nodeInfo) {\r\n    this.gsp.eventBus.requestFor('FileTreePanelPackage', 'projectCreate', 'AccessFileTree', nodeInfo, () => {\r\n      // console.log('event has been deal done');\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * 显示向导模态框\r\n   */\r\n  showGuide(ele: any, guide: CodeRuleWizardComponent, title: string, dto: MetadataDto) {\r\n    guide.metadataContent = dto;\r\n    const modalPanel = this.gsp.workspace.addModalPanel({\r\n      item: {\r\n        element: ele,\r\n        modalOptions: {\r\n          title: title,\r\n          width: 400,\r\n          height:150,\r\n          buttons: guide.btns,\r\n          resizable:false,\r\n          showMaxButton:false\r\n        }\r\n      }\r\n    });\r\n    guide.closeModal.subscribe(() => modalPanel.destroy());\r\n  }\r\n\r\n  /**\r\n   * 新建元数据\r\n   */\r\n  private createMetadata(data: MetadataDto) {\r\n    this.gsp.eventBus.post(CodeRuleDesignerPackage, this.id, 'Command:CreateMetadata', data);\r\n  }\r\n\r\n  /**\r\n   * 刷新树\r\n   */\r\n  refreshTree() {\r\n    this.gsp.eventBus.requestFor('FileTreePanelPackage', 'metadataCreate', 'AccessFileTree', { action: '5' }, () => {\r\n      console.log('refresh tree event has been deal done');\r\n    });\r\n  }\r\n  /**\r\n   * 打开元数据\r\n   * @param data\r\n   */\r\n  private openMetadata(data: MetadataDto) {\r\n    const uri = this.getUriFromMetadataDto(data);\r\n    this.gsp.workspace.open(uri);\r\n  }\r\n\r\n  /**\r\n * 根据dto获取uri\r\n */\r\n  private getUriFromMetadataDto(dto: MetadataDto): string {\r\n    if (dto) {\r\n      const fileName = dto.fileName;\r\n      const filePath = dto.relativePath;\r\n      return `/${filePath}/${fileName}`;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/package.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host {\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-direction: column;\\r\\n            flex-direction: column;\\r\\n    -webkit-box-flex: 1;\\r\\n        -ms-flex: 1;\\r\\n            flex: 1;\\r\\n}\\r\\n\\r\\n#bemain .k-content {\\r\\n    padding: 0 !important;\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-direction: column;\\r\\n            flex-direction: column;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderule.component.css\n// module id = ./src/packages/coderuledesigner/views/coderuledesigner/coderule.component.css\n// module chunks = coderulepackage.module","module.exports = \"<div class=\\\"d-flex flex-column\\\" style=\\\"flex:1 1 auto;\\\">\\r\\n    <div class=\\\"border-bottom\\\" style=\\\"background: #f3f3f3;\\\">\\r\\n        <button kendoButton [look]=\\\"'bare'\\\" (click)=\\\"saveCodeRuleMetadata()\\\">\\r\\n            <span class=\\\"k-icon k-i-save\\\"></span> 保存</button>\\r\\n    </div>\\r\\n    <ng-template #codeRuleComponentContainer></ng-template>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderule.component.html\n// module id = ./src/packages/coderuledesigner/views/coderuledesigner/coderule.component.html\n// module chunks = coderulepackage.module","import { Component, OnInit, ViewChild, ViewContainerRef, ComponentFactory, ComponentRef, OnDestroy, ComponentFactoryResolver } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { MetadataDto, GSPMetadataService } from '@gsp-lcm/metadata-selector';\r\nimport { CodeRuleMetadata } from './coderulemetadata/coderulemetadata';\r\nimport { isNullOrUndefined } from 'util';\r\nimport { BaseCodeRuleComponent } from './coderulecomponent/basecoderulecomponent/base.component';\r\nimport { CodeRuleType } from './coderulemetadata/coderuletype';\r\nimport { DMBaseCodeRuleComponent } from './coderulecomponent/dmbasecomponent/dmbase.component';\r\nimport { DynamicCodeRuleComponent } from './coderulecomponent/dynamiccomponent/dynamic.component';\r\nimport { DMDynamicCodeRuleComponent } from './coderulecomponent/dmdynamiccomponent/dmdynamic.component';\r\nimport { CacheService } from '@farris/ide-devkit/services';\r\n\r\n@Component({\r\n  selector: 'app-coderule',\r\n  templateUrl: './coderule.component.html',\r\n  styleUrls: ['./coderule.component.css']\r\n})\r\n\r\nexport class CodeRuleDesignerComponent implements OnInit, OnDestroy {\r\n\r\n  /**\r\n   * 编号规则元数据\r\n   */\r\n  public codeRuleMetadata: CodeRuleMetadata;\r\n\r\n  /**元数据抽象Dto */\r\n  public metadataDto: MetadataDto;\r\n\r\n  /**\r\n   * 元数据的Uri,包含相对路径以及元数据文件名称信息\r\n   */\r\n  private _metadataUri: string;\r\n\r\n  /**\r\n   * 解析元数据的Uri，获取文件名称和路径\r\n   */\r\n  set metadataUri(metadataUri: string) {\r\n    const fileName = metadataUri.substring(metadataUri.lastIndexOf('/') + 1);\r\n    const filePath = metadataUri.substring(1, metadataUri.lastIndexOf('/'));\r\n    this.metadataService.LoadMetadata(fileName, filePath).subscribe(gspMetadata => {\r\n      this.metadataContent = gspMetadata;  //获取元数据Json串\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 解析元数据Json串，获取编号规则元数据\r\n   */\r\n  set metadataContent(metadataContent: any) {\r\n    this.loadCodeRuleMetadata(metadataContent);\r\n  }\r\n\r\n  private componentRef: ComponentRef<any>;\r\n\r\n  @ViewChild(\"codeRuleComponentContainer\", { read: ViewContainerRef }) container: ViewContainerRef;\r\n\r\n  constructor(private http: Http, private metadataService: GSPMetadataService, private resolver: ComponentFactoryResolver, private cache: CacheService) { }\r\n\r\n  ngOnInit() {\r\n    this.codeRuleMetadata = new CodeRuleMetadata();\r\n  }\r\n\r\n  /**\r\n   * 加载编号规则元数据\r\n   * @param dto 元数据MetadataDto\r\n   */\r\n  private loadCodeRuleMetadata(dto: MetadataDto) {\r\n    this.metadataDto = dto;\r\n    if (!isNullOrUndefined(dto.content)) {\r\n      this.codeRuleMetadata = new CodeRuleMetadata();\r\n      let jsonObj = JSON.parse(dto.content);\r\n      //debugger;\r\n      this.codeRuleMetadata.init(jsonObj);\r\n      this.codeRuleMetadata.Code = (isNullOrUndefined(this.codeRuleMetadata.Code)) ? dto.code : this.codeRuleMetadata.Code;\r\n      this.codeRuleMetadata.Name = (isNullOrUndefined(this.codeRuleMetadata.Name)) ? dto.name : this.codeRuleMetadata.Name;\r\n      this.createComponentByRuleType(this.codeRuleMetadata.RuleType);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 根据编号规则类型创建对应的组件\r\n   * @param ruleType 编号规则类型\r\n   */\r\n  private createComponentByRuleType(ruleType: CodeRuleType) {\r\n    switch (ruleType) {\r\n      case CodeRuleType.Base:\r\n        // 创建Base组件\r\n        this.createComponent(this.codeRuleMetadata, BaseCodeRuleComponent);\r\n        break;\r\n      case CodeRuleType.DMBase:\r\n        // 创建DMBase组件\r\n        this.createComponent(this.codeRuleMetadata, DMBaseCodeRuleComponent);\r\n        break;\r\n      case CodeRuleType.Dynamic:\r\n        // 创建Dynamic组件\r\n        this.createComponent(this.codeRuleMetadata, DynamicCodeRuleComponent);\r\n        break;\r\n      case CodeRuleType.DMDynamic:\r\n        // 创建DMDynamic组件\r\n        this.createComponent(this.codeRuleMetadata, DMDynamicCodeRuleComponent);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 动态创建组件\r\n   * @param metadata \r\n   */\r\n  private createComponent(metadata: CodeRuleMetadata, componentTemplate: any) {\r\n    this.container.clear();\r\n    const factory: any = this.resolver.resolveComponentFactory(componentTemplate);\r\n    this.componentRef = this.container.createComponent(factory);\r\n    this.componentRef.instance.codeRuleMetadata = metadata;\r\n    this.componentRef.instance.metadataDto = this.metadataDto;\r\n    // this.componentRef.instance.output.subscribe(data => {\r\n    //   this.codeRuleMetadata = data;\r\n    // });\r\n  }\r\n\r\n  /**\r\n  * 保存元数据\r\n  */\r\n  private saveCodeRuleMetadata() {\r\n    //debugger;\r\n    let jsonStringifyContent = JSON.stringify(this.codeRuleMetadata.convertToJObject());\r\n    this.metadataDto.content = jsonStringifyContent;\r\n    let sessionId = this.cache.get('sessionId');\r\n    this.metadataService.SaveMetadata(this.metadataDto, sessionId).subscribe(response => {\r\n      if (response.status == 200) {\r\n        alert(\"保存成功！\");\r\n      }\r\n      else {\r\n        alert(\"保存失败!\");\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 组件销毁\r\n   */\r\n  ngOnDestroy() {\r\n    if (!isNullOrUndefined(this.componentRef)) {\r\n      this.componentRef.destroy();\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderule.component.ts","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { CommonModule } from '@angular/common';\r\n// import { ToolBarModule } from '@progress/kendo-angular-toolbar';\r\nimport { ButtonModule, ButtonsModule, ButtonGroupModule } from '@progress/kendo-angular-buttons';\r\nimport { LayoutModule, SplitterModule } from '@progress/kendo-angular-layout';\r\nimport { TreeViewModule } from '@progress/kendo-angular-treeview';\r\nimport { GridModule } from '@progress/kendo-angular-grid';\r\nimport { DialogModule } from '@progress/kendo-angular-dialog';\r\nimport { InputsModule } from '@progress/kendo-angular-inputs';\r\nimport { DropDownsModule, DropDownListModule } from '@progress/kendo-angular-dropdowns';\r\nimport { PopupModule } from '@progress/kendo-angular-popup';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { FarrisDialogModule } from '@farris/ui';\r\nimport { LabelModule } from '@progress/kendo-angular-label';\r\nimport { GSPMetadataServiceModule, SelectMetadataComponent, MetadataSelectModule } from \"@gsp-lcm/metadata-selector\";\r\nimport { environment } from '../../../../environments/environment'\r\nimport { CodeRuleDesignerComponent } from './coderule.component';\r\nimport { BaseCodeRuleComponent } from './coderulecomponent/basecoderulecomponent/base.component';\r\nimport { CodeRuleWizardComponent } from './coderulewizard/coderulewizard.component';\r\nimport { DMBaseCodeRuleComponent } from './coderulecomponent/dmbasecomponent/dmbase.component';\r\nimport { DynamicCodeRuleComponent } from './coderulecomponent/dynamiccomponent/dynamic.component';\r\nimport { DMDynamicCodeRuleComponent } from './coderulecomponent/dmdynamiccomponent/dmdynamic.component';\r\nimport { OutParamSegmentComponent } from './coderulecomponent/commoncomponent/outparamcomponent/outparam.component';\r\nimport { SysVariableSegmentComponent } from './coderulecomponent/commoncomponent/syscomponent/sys.component';\r\nimport { SequenceSegmentComponent } from './coderulecomponent/commoncomponent/sequencecomponent/sequence.component';\r\nimport { ConstantSegmentComponent } from './coderulecomponent/commoncomponent/constcomponent/const.component';\r\nimport { CodeRuleService } from './coderuleservice/coderuleservice';\r\nimport { EventBusService } from './coderuleservice/eventBusService';\r\nimport { BaseOutParamSegmentComponent } from './coderulecomponent/commoncomponent/baseoutparamcomponent/baseoutparam.component';\r\nimport { ExpressionModule } from '@gsp-svc/expression';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CodeRuleDesignerComponent,\r\n    BaseCodeRuleComponent,\r\n    CodeRuleWizardComponent,\r\n    DMBaseCodeRuleComponent,\r\n    DynamicCodeRuleComponent,\r\n    DMDynamicCodeRuleComponent,\r\n    OutParamSegmentComponent,\r\n    SysVariableSegmentComponent,\r\n    ConstantSegmentComponent,\r\n    SequenceSegmentComponent,\r\n    BaseOutParamSegmentComponent\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    HttpModule,\r\n    CommonModule,\r\n    ExpressionModule,\r\n    ButtonsModule,\r\n    ButtonGroupModule,\r\n    DialogModule,\r\n    ReactiveFormsModule,\r\n    InputsModule,\r\n    DropDownListModule,\r\n    PopupModule,\r\n    TreeViewModule,\r\n    LayoutModule,\r\n    LabelModule,\r\n    GridModule,\r\n    LayoutModule,\r\n    FarrisDialogModule,\r\n    MetadataSelectModule,\r\n    GSPMetadataServiceModule.forRoot(environment.SERVER_IP)\r\n  ],\r\n  providers: [CodeRuleService,EventBusService],\r\n  entryComponents:[BaseCodeRuleComponent,CodeRuleWizardComponent,DMBaseCodeRuleComponent,\r\n    DynamicCodeRuleComponent,DMDynamicCodeRuleComponent,OutParamSegmentComponent,SysVariableSegmentComponent,\r\n    ConstantSegmentComponent,SequenceSegmentComponent,SelectMetadataComponent,BaseOutParamSegmentComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  bootstrap: [CodeRuleDesignerComponent]\r\n})\r\n\r\nexport class CodeRuleDesignerModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderule.module.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host {\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-direction: column;\\r\\n            flex-direction: column;\\r\\n    -webkit-box-flex: 1;\\r\\n        -ms-flex: 1;\\r\\n            flex: 1;\\r\\n}\\r\\n\\r\\n#bemain .k-content {\\r\\n    padding: 0 !important;\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-direction: column;\\r\\n            flex-direction: column;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/basecoderulecomponent/base.component.css\n// module id = ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/basecoderulecomponent/base.component.css\n// module chunks = coderulepackage.module","module.exports = \"<div id=\\\"bemain\\\" class=\\\"d-flex flex-column\\\" style=\\\" flex: 1 1 auto; display: flex; flex-direction: column;\\\">\\r\\n        <div class=\\\"d-flex flex-column\\\" style=\\\"margin-top: 10px;flex:1 1 auto;\\\">\\r\\n            <div class=\\\"col-xs-12 col-sm-12\\\">\\r\\n                <div class=\\\"panel-heading\\\">\\r\\n                    <h6 class=\\\"panel-title\\\" style=\\\"font-size: 0.9rem;\\\">\\r\\n                        基本信息\\r\\n                    </h6>\\r\\n                </div>\\r\\n                <div class=\\\"card\\\" style=\\\"background-color: #f6f6f6;\\\">\\r\\n                    <div class=\\\"card-block\\\">\\r\\n                        <form class=\\\"k-form\\\" style=\\\"padding: 10px 6px 1px 1px;\\\">\\r\\n                            <form class=\\\"k-form-inline\\\" style=\\\"padding: 2px;\\\">\\r\\n                                <div class=\\\"k-form-field\\\">\\r\\n                                    <label style=\\\"width: 5%;min-width: 95px;\\\">ID</label>\\r\\n                                    <input style=\\\"width: 30%;\\\" class=\\\"k-textbox\\\" [(ngModel)]=\\\"codeRuleMetadata.Id\\\" name=\\\"codeRuleMetadataId\\\" />\\r\\n                                    <label style=\\\"width: 5%;min-width: 95px\\\">编号</label>\\r\\n                                    <input style=\\\"width: 30%;\\\" class=\\\"k-textbox\\\" [(ngModel)]=\\\"codeRuleMetadata.Code\\\" name=\\\"codeRuleMetadataCode\\\" />\\r\\n                                    <label style=\\\"width: 5%;min-width: 95px\\\">名称</label>\\r\\n                                    <input style=\\\"width: 30%;\\\" class=\\\"k-textbox\\\" [(ngModel)]=\\\"codeRuleMetadata.Name\\\" name=\\\"codeRuleMetadataName\\\" />\\r\\n                                </div>\\r\\n                            </form>\\r\\n    \\r\\n                            <form class=\\\"k-form-inline\\\" style=\\\"padding: 2px;\\\">\\r\\n                                <div class=\\\"k-form-field\\\">\\r\\n                                    <label style=\\\"width: 5%;min-width: 95px;\\\">是否连续</label>\\r\\n                                    <kendo-dropdownlist [data]=\\\"status\\\" style=\\\"width: 30%;background-image: linear-gradient(#ffff,#ffff);\\\" [(ngModel)]=\\\"baseCodeRule.IsBrokenUse\\\"\\r\\n                                    name=\\\"isBrokenUse\\\" >\\r\\n                                </kendo-dropdownlist>\\r\\n                                    <label style=\\\"width: 5%;min-width: 95px\\\">存储策略</label>\\r\\n                                    <input style=\\\"width: 30%;\\\" class=\\\"k-textbox\\\" />\\r\\n                                    <label style=\\\"width: 5%;min-width: 95px\\\">编号样例</label>\\r\\n                                    <input style=\\\"width: 30%;\\\" class=\\\"k-textbox\\\"  [(ngModel)]=\\\"codeRuleExample\\\" name=\\\"codeRuleExample\\\"/>\\r\\n                                </div>\\r\\n                            </form>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n    \\r\\n            <div class=\\\"col-xs-12 col-sm-12 d-flex flex-column\\\" style=\\\"flex: 1 1 auto;margin-top: 4px;\\\">\\r\\n                <kendo-splitter class=\\\"d-flex \\\" style=\\\"flex: 1 1 auto;margin-top: 6px\\\" orientation=\\\"horizontal\\\">\\r\\n                    <kendo-splitter-pane class=\\\"d-flex \\\" [collapsible]=\\\"true\\\" size=\\\"35%\\\" style=\\\"height: auto\\\">\\r\\n                        <div class=\\\"col-xs-12 col-sm-12 d-flex flex-column\\\" style=\\\"margin-top: 10px; padding-right: 6px;padding-left: 6px;\\\">\\r\\n                            <div class=\\\"panel-heading\\\">\\r\\n                                <h6 class=\\\"panel-title\\\" style=\\\"font-size: 0.9rem;\\\">\\r\\n                                    段列表\\r\\n                                </h6>\\r\\n                            </div>\\r\\n                            <div class=\\\"card d-flex\\\" style=\\\"flex:1 1 auto;\\\">\\r\\n                                <div class=\\\"card-block d-flex\\\" style=\\\"flex:1 1 auto;\\\">\\r\\n                                    <kendo-grid class=\\\"d-flex\\\" style=\\\"flex:1 1 auto;min-height: 150px\\\" [data]=\\\"brokenList\\\" [selectable]=\\\"{enabled: true, checkboxOnly: false,mode:'single' }\\\"\\r\\n                                        [kendoGridSelectBy]=\\\"'Code'\\\" (selectedKeysChange)=\\\"onSelectedBrokenChange($event)\\\" [selectedKeys]=\\\"selectedBrokenCodes\\\"\\r\\n                                        [rowSelected]=\\\"isRowParamSelected\\\" (cellClick)=\\\"cellClickHandler($event)\\\">\\r\\n                                        <ng-template kendoGridToolbarTemplate>\\r\\n                                            <button kendoGridAddCommand (click)=\\\"add()\\\">\\r\\n                                                <span class=\\\"k-icon k-i-plus\\\"></span>新增</button>\\r\\n                                            <button kendoGridAddCommand (click)=\\\"delete()\\\">\\r\\n                                                <span class=\\\"k-icon k-i-delete\\\"></span>删除</button>\\r\\n                                            <button kendoGridAddCommand (click)=\\\"up()\\\">\\r\\n                                                <span class=\\\"k-icon k-i-sort-asc-sm\\\"></span>上移</button>\\r\\n                                            <button kendoGridAddCommand (click)=\\\"down()\\\">\\r\\n                                                <span class=\\\"k-icon k-i-sort-desc-sm\\\"></span>下移</button>\\r\\n                                        </ng-template>\\r\\n                                        <kendo-grid-checkbox-column width=\\\"40\\\">\\r\\n                                            <ng-template>\\r\\n                                                <input class=\\\"k-checkbox\\\" />\\r\\n                                                <label class=\\\"k-checkbox-label\\\" for=\\\"selectAllCheckboxBrokenCode\\\"></label>\\r\\n                                            </ng-template>\\r\\n                                        </kendo-grid-checkbox-column>\\r\\n                                        <kendo-grid-column field=\\\"Code\\\" title=\\\"编号\\\"></kendo-grid-column>\\r\\n                                        <kendo-grid-column field=\\\"Type\\\" title=\\\"类型\\\"></kendo-grid-column>\\r\\n                                    </kendo-grid>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </kendo-splitter-pane>\\r\\n    \\r\\n                    <kendo-splitter-pane class=\\\"d-flex\\\" style=\\\"height: auto\\\">\\r\\n                        <div class=\\\"col-xs-12 col-sm-12 d-flex flex-column\\\" style=\\\"margin-top: 10px;padding-right: 6px;padding-left: 6px;flex: 1 1 auto;\\\">\\r\\n                            <div class=\\\"panel-heading\\\">\\r\\n                                <h6 class=\\\"panel-title\\\" style=\\\"font-size: 0.9rem;\\\">\\r\\n                                    段信息\\r\\n                                </h6>\\r\\n                            </div>\\r\\n                            <div class=\\\"card d-flex\\\" style=\\\"flex:1 1 auto\\\">\\r\\n                                <ng-template #brokenType></ng-template>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </kendo-splitter-pane>\\r\\n                </kendo-splitter>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n    <farris-dialog #brokenSelection [buttons]=\\\"brokenSelectionBtn\\\">\\r\\n        <form class=\\\"k-form-inline\\\" style=\\\"padding:16px;height: 38px\\\">\\r\\n            <div class=\\\"k-form-field\\\">\\r\\n                <span style=\\\"width: 5%;min-width: 70px;\\\">段类型</span>\\r\\n                <kendo-dropdownlist [data]=\\\"brokenTypeList\\\" style=\\\"width: 83%;\\\" textField=\\\"text\\\" valueField=\\\"value\\\" [valuePrimitive]=\\\"true\\\"\\r\\n                    [value]=\\\"Constant\\\" [(ngModel)]=\\\"selectedBrokenType\\\" name=\\\"selectedBrokenType\\\">\\r\\n                </kendo-dropdownlist>\\r\\n            </div>\\r\\n        </form>\\r\\n        <form class=\\\"k-form-inline\\\" style=\\\"padding:16px;height: 38px\\\">\\r\\n            <div class=\\\"k-form-field\\\">\\r\\n                <span style=\\\"width: 5%;min-width: 70px;\\\">段编号</span>\\r\\n                <input style=\\\"width: 83%;\\\" class=\\\"k-textbox\\\" [(ngModel)]=\\\"newBrokenCode\\\" name=\\\"newBrokenCode\\\" />\\r\\n            </div>\\r\\n        </form>\\r\\n        <form class=\\\"k-form-inline\\\" style=\\\"padding:16px;height: 38px\\\">\\r\\n            <div class=\\\"k-form-field\\\">\\r\\n                <span style=\\\"width: 5%;min-width: 70px;\\\">段名称</span>\\r\\n                <input style=\\\"width: 83%;\\\" class=\\\"k-textbox\\\" [(ngModel)]=\\\"newBrokenName\\\" name=\\\"newBrokenName\\\" />\\r\\n            </div>\\r\\n        </form>\\r\\n        <ng-template #brokenSelectionBtn>\\r\\n            <button (click)=\\\"brokenSelection.close()\\\">取消</button>\\r\\n            <button (click)=\\\"brokenSelectionConfirm()\\\">确定</button>\\r\\n        </ng-template>\\r\\n    </farris-dialog>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/basecoderulecomponent/base.component.html\n// module id = ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/basecoderulecomponent/base.component.html\n// module chunks = coderulepackage.module","import { Component, Input, OnInit, ComponentRef, ViewContainerRef, ViewChild, ComponentFactoryResolver, Injector, SimpleChanges } from '@angular/core';\r\nimport { CodeRuleMetadata } from '../../coderulemetadata/coderulemetadata';\r\nimport { MetadataDto } from '../../../../../../../reference/metadata/metadata.ref';\r\nimport { Item, BrokenObject } from '../../commonobject/commonobject';\r\nimport { brokenTypes } from '../../commonobject/const';\r\nimport { BaseCodeRule } from '../../coderulemetadata/base/basecoderule';\r\nimport { ISegment } from '../../coderulemetadata/base/segment/isegment';\r\nimport { SelectAllCheckboxState, RowArgs } from '../../../../../../../reference/progress/progress.grid.ref';\r\nimport { DialogComponent } from '@farris/ui';\r\nimport { BsModalService } from '@farris/ide-devkit';\r\nimport { CodeRuleService } from '../../coderuleservice/coderuleservice';\r\nimport { isNullOrUndefined } from 'util';\r\nimport { isNullOrEmptyString } from '@progress/kendo-angular-grid/dist/es2015/utils';\r\nimport { ConstantSegment } from '../../coderulemetadata/base/segment/constantsegment';\r\nimport { SysVariableSegment } from '../../coderulemetadata/base/segment/sysvariablesegment';\r\nimport { OutParamSegment } from '../../coderulemetadata/base/segment/outparamsegment';\r\nimport { SequenceSegment } from '../../coderulemetadata/base/segment/sequencesegment';\r\nimport { ConstantSegmentComponent } from '../commoncomponent/constcomponent/const.component';\r\nimport { SysVariableSegmentComponent } from '../commoncomponent/syscomponent/sys.component';\r\nimport { SequenceSegmentComponent } from '../commoncomponent/sequencecomponent/sequence.component';\r\nimport { BaseOutParamSegmentComponent } from '../commoncomponent/baseoutparamcomponent/baseoutparam.component';\r\n\r\n@Component({\r\n    selector: 'app-basecoderule',\r\n    templateUrl: './base.component.html',\r\n    styleUrls: ['./base.component.css']\r\n})\r\n\r\nexport class BaseCodeRuleComponent implements OnInit {\r\n\r\n    /**\r\n    * 编号规则元数据\r\n   */\r\n    @Input() codeRuleMetadata: CodeRuleMetadata;\r\n\r\n    /**\r\n     * 元数据抽象类\r\n     */\r\n    @Input() metadataDto: MetadataDto;\r\n\r\n    /**\r\n     * 动态组件模板\r\n     */\r\n    private componentRef: ComponentRef<any>;\r\n\r\n    /**\r\n     * 段列表数据源,绑定Kendo UI Grid\r\n     */\r\n    brokenTypeList: Array<Item> = brokenTypes;\r\n\r\n    status: Array<boolean> = [true, false];\r\n\r\n    /**\r\n     * 已选择的段类型\r\n     */\r\n    selectedBrokenType: string;\r\n    newBrokenCode:string;\r\n    newBrokenName:string;\r\n    baseCodeRule: BaseCodeRule;\r\n    brokenList: Array<BrokenObject> = [];\r\n    selectedBrokenList: Array<BrokenObject> = [];\r\n    selectedBrokenCodes: string[] = [];\r\n    selectedBroken: BrokenObject;\r\n    selectedSegement: ISegment;\r\n    selectAllBrokenState: SelectAllCheckboxState = 'unchecked';\r\n    codeRuleExample: string;\r\n    isRowParamSelected = (e: RowArgs) => this.selectedBrokenCodes.indexOf(e.dataItem.Code) >= 0;\r\n    @ViewChild(\"brokenType\", { read: ViewContainerRef }) container: ViewContainerRef;\r\n    @ViewChild('brokenSelection') brokenSelection: DialogComponent;\r\n    @ViewChild('modelSelect') modelSelect: DialogComponent;\r\n\r\n    constructor(private resolver: ComponentFactoryResolver, private modalService: BsModalService, private injector: Injector, private codeRuleService: CodeRuleService) { }\r\n\r\n    ngOnInit(): void {\r\n        //debugger;\r\n        if (!this.codeRuleMetadata.CodeRule) {\r\n            this.codeRuleMetadata.CodeRule = new BaseCodeRule();\r\n        }\r\n        this.baseCodeRule = this.codeRuleMetadata.CodeRule as BaseCodeRule;\r\n        if (!this.baseCodeRule.Segments) {\r\n            this.baseCodeRule.Segments = new Array<ISegment>();\r\n        }\r\n        if (this.baseCodeRule.Segments.length > 0) {\r\n            this.initSegment();\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 初始化段信息\r\n     */\r\n    initSegment() {\r\n        //debugger;\r\n        this.baseCodeRule.Segments.forEach(segment => {\r\n            let broken = new BrokenObject();\r\n            broken.Code = segment.SegmentCode;\r\n            let segmentTypeString = this.codeRuleService.getSegmentTypeToString(segment.getSegmentType());\r\n            broken.Type = this.codeRuleService.getSegmentTypeDesc(segmentTypeString);\r\n            this.brokenList.push(broken);\r\n        });\r\n        this.selectedBroken = this.brokenList[0];\r\n        this.selectedBrokenCodes = [];\r\n        this.selectedBrokenCodes.push(this.brokenList[0].Code);\r\n        this.selectedBrokenList=new Array<BrokenObject>();\r\n        this.selectedBrokenList.push(this.brokenList[0]);\r\n        this.createFocusedBrokenComponent();\r\n    }\r\n\r\n    /**\r\n     * 根据左侧列表获取对应的段实例\r\n     * @param brokenCode \r\n     */\r\n    getFocusedSegment(brokenCode: string): ISegment {\r\n        let tempIndex = this.baseCodeRule.Segments.findIndex(segment => segment.SegmentCode == brokenCode);\r\n        if (tempIndex != (-1)) {\r\n            return this.baseCodeRule.Segments[tempIndex];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建当前选中焦点行的对应Broken组件\r\n     */\r\n    createFocusedBrokenComponent() {\r\n        let segement = this.getFocusedSegment(this.selectedBroken.Code);\r\n        this.selectedSegement = segement;\r\n        let segmentType = segement.getSegmentType();\r\n        let segmentTypeString = this.codeRuleService.getSegmentTypeToString(segmentType);\r\n        this.createComponentByBrokenType(segmentTypeString, segement);\r\n    }\r\n   \r\n    /**\r\n     * 新增段\r\n     */\r\n    add() {\r\n        this.selectedBrokenType='Constant';\r\n        this.openBrokenSelectionDialog();\r\n    }\r\n\r\n    /**\r\n     * 删除段\r\n     */\r\n    delete() {\r\n        //debugger;\r\n        if (!this.selectedBrokenList || this.selectedBrokenList.length <= 0) {\r\n            alert(\"请选择需要删除的段。\");\r\n            return;\r\n        }\r\n        this.selectedBrokenList.forEach(broken => {\r\n            this.codeRuleService.deleteSpecifiedElementByCode(this.brokenList, broken);\r\n            let segement = this.getFocusedSegment(broken.Code);\r\n            this.codeRuleService.deleteSpecifiedElement(this.baseCodeRule.Segments, segement);\r\n        });\r\n        this.resetFocused();\r\n        this.selectAllBrokenState = 'unchecked';\r\n        this.selectedBrokenCodes = [];\r\n        this.selectedBrokenList=[];\r\n    }\r\n\r\n    up() {\r\n        //debugger;\r\n        if(this.selectedBrokenCodes.length<=0){\r\n            alert('请选择上移的段。');\r\n            return;\r\n        }\r\n        if (isNullOrUndefined(this.selectedSegement.SegmentCode) || isNullOrUndefined(this.selectedSegement.SegmentCode)) {\r\n            alert('请选择上移的段。');\r\n            return;\r\n        }\r\n        let tempIndex = this.brokenList.findIndex(broken => broken.Code == this.selectedBroken.Code);\r\n        if (tempIndex == 0) {\r\n            alert('无法上移。');\r\n            return;\r\n        }\r\n        else {\r\n            let tempSegments = new Array<ISegment>();\r\n            for (let i = 0; i < this.baseCodeRule.Segments.length; i++) {\r\n                if (i == tempIndex - 1) {\r\n                    tempSegments.push(this.baseCodeRule.Segments[tempIndex]);\r\n                }\r\n                else if (i == tempIndex) {\r\n                    tempSegments.push(this.baseCodeRule.Segments[tempIndex - 1]);\r\n                }\r\n                else {\r\n                    tempSegments.push(this.baseCodeRule.Segments[i]);\r\n                }\r\n            }\r\n            this.brokenList = new Array<BrokenObject>();\r\n            tempSegments.forEach(temp => {\r\n                let broken = new BrokenObject;\r\n                broken.Code = temp.SegmentCode;\r\n                let segmentTypeString = this.codeRuleService.getSegmentTypeToString(temp.getSegmentType());\r\n                broken.Type = this.codeRuleService.getSegmentTypeDesc(segmentTypeString);\r\n                this.brokenList.push(broken);\r\n            });\r\n            this.baseCodeRule.Segments = new Array<ISegment>();\r\n            this.baseCodeRule.Segments = tempSegments;\r\n        }\r\n    }\r\n\r\n    down() {\r\n        //debugger;\r\n        if(this.selectedBrokenCodes.length<=0){\r\n            alert('请选择下移的段。');\r\n            return;\r\n        }\r\n        if (isNullOrUndefined(this.selectedSegement.SegmentCode) || isNullOrUndefined(this.selectedSegement.SegmentCode)) {\r\n            alert('请选择下移的段。');\r\n            return;\r\n        }\r\n        let tempIndex = this.brokenList.findIndex(broken => broken.Code == this.selectedBroken.Code);\r\n        if (tempIndex == this.brokenList.length - 1) {\r\n            alert('无法下移。');\r\n            return;\r\n        }\r\n        else {\r\n            let tempSegments = new Array<ISegment>();\r\n            for (let i = 0; i < this.baseCodeRule.Segments.length; i++) {\r\n                if (i == tempIndex) {\r\n                    tempSegments.push(this.baseCodeRule.Segments[tempIndex + 1]);\r\n                }\r\n                else if (i == tempIndex + 1) {\r\n                    tempSegments.push(this.baseCodeRule.Segments[tempIndex]);\r\n                }\r\n                else {\r\n                    tempSegments.push(this.baseCodeRule.Segments[i]);\r\n                }\r\n            }\r\n            this.brokenList = new Array<BrokenObject>();\r\n            tempSegments.forEach(temp => {\r\n                let broken = new BrokenObject;\r\n                broken.Code = temp.SegmentCode;\r\n                let segmentTypeString = this.codeRuleService.getSegmentTypeToString(temp.getSegmentType());\r\n                broken.Type = this.codeRuleService.getSegmentTypeDesc(segmentTypeString);\r\n                this.brokenList.push(broken);\r\n            });\r\n            this.baseCodeRule.Segments = new Array<ISegment>();\r\n            this.baseCodeRule.Segments = tempSegments;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 重置焦点\r\n     */\r\n    resetFocused() {\r\n        if (this.brokenList.length > 0) {\r\n            this.selectedBroken = this.brokenList[0];\r\n            this.createFocusedBrokenComponent();\r\n        }\r\n        else {\r\n            if(!isNullOrUndefined(this.componentRef)){\r\n                this.componentRef.destroy();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 打开段选择模态框\r\n     */\r\n    openBrokenSelectionDialog() {\r\n        this.brokenSelection.title = '段类型选择';\r\n        this.brokenSelection.width = 400;\r\n        this.brokenSelection.height = 225;\r\n        this.brokenSelection.showMaxButton = false;\r\n        this.brokenSelection.resizable = false;\r\n        this.brokenSelection.show();\r\n    }\r\n\r\n    /**\r\n     * 增加段确定\r\n     */\r\n    brokenSelectionConfirm() {\r\n        //debugger;\r\n        if (isNullOrUndefined(this.selectedBrokenType) || isNullOrEmptyString(this.selectedBrokenType)) {\r\n            alert('请选择段类型。');\r\n            return;\r\n        }\r\n        this.brokenSelection.close();\r\n        let segment = this.getSegmentByBrokenType(this.selectedBrokenType,this.newBrokenCode,this.newBrokenName)\r\n        this.createComponentByBrokenType(this.selectedBrokenType, segment);\r\n        this.baseCodeRule.Segments.push(segment);\r\n        let broken = new BrokenObject();\r\n        broken.Code = segment.SegmentCode;\r\n        broken.Type = this.codeRuleService.getSegmentTypeDesc(this.selectedBrokenType);\r\n        this.brokenList.push(broken);\r\n        //新增后焦点定位到新增的行\r\n        this.resetSelectedBroken(this.brokenList[this.brokenList.length - 1])\r\n        //重置新增模态框的选择信息\r\n        this.resetAddBrokenInfo();\r\n    }\r\n\r\n    resetAddBrokenInfo() {\r\n        this.selectedBrokenType = '';\r\n        this.newBrokenCode = '';\r\n        this.newBrokenName = '';\r\n    }\r\n\r\n    /**\r\n     * 重置选择的段，目的是显示Kendo UI的选中焦点\r\n     * @param broken \r\n     */\r\n    resetSelectedBroken(broken: BrokenObject) {\r\n        this.selectedBrokenCodes = [];\r\n        this.selectedBrokenCodes.push(broken.Code);\r\n        this.selectedBroken = broken;\r\n        this.selectedBrokenList = [];\r\n        this.selectedBrokenList.push(this.selectedBroken);\r\n    }\r\n\r\n    /**\r\n     * 根据段类型（字符串）获取对应的段实体类\r\n     * @param brokenType \r\n     */\r\n    private getSegmentByBrokenType(brokenType: string,brokenCode:string,brokenName:string): ISegment {\r\n        switch (brokenType) {\r\n            case 'Constant':\r\n                let constantSegment: ConstantSegment = new ConstantSegment();\r\n                constantSegment.SegmentCode = brokenCode;\r\n                constantSegment.SegmentName = brokenName;\r\n                return constantSegment;\r\n            case 'SysVariable':\r\n                let sysVariableSegment: SysVariableSegment = new SysVariableSegment();\r\n                sysVariableSegment.SegmentCode = brokenCode;\r\n                sysVariableSegment.SegmentName = brokenName;\r\n                return sysVariableSegment;\r\n            case 'OutParam':\r\n                let outParamSegment: OutParamSegment = new OutParamSegment();\r\n                outParamSegment.SegmentCode = brokenCode;\r\n                outParamSegment.SegmentName = brokenName;\r\n                return outParamSegment;\r\n            case 'Sequence':\r\n                let sequenceSegment: SequenceSegment = new SequenceSegment();\r\n                sequenceSegment.SegmentCode = brokenCode;\r\n                sequenceSegment.SegmentName = brokenName;\r\n                return sequenceSegment;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据段类型（字符串）动态创建对应段类型的组件\r\n     */\r\n    private createComponentByBrokenType(brokenType: string, segment: ISegment) {\r\n        switch (brokenType) {\r\n            case 'Constant':\r\n                this.createComponent(segment, ConstantSegmentComponent);\r\n                break;\r\n            case 'SysVariable':\r\n                this.createComponent(segment, SysVariableSegmentComponent);\r\n                break;\r\n            case 'OutParam':\r\n                this.createComponent(segment, BaseOutParamSegmentComponent);\r\n                break;\r\n            case 'Sequence':\r\n                this.createComponent(segment, SequenceSegmentComponent);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 动态创建段组件\r\n     * @param segment 段类型\r\n     * @param componentTemplate 组件模板\r\n     */\r\n    private createComponent(segment: ISegment, componentTemplate: any) {\r\n        this.container.clear();\r\n        const factory: any = this.resolver.resolveComponentFactory(componentTemplate);\r\n        this.componentRef = this.container.createComponent(factory);\r\n        this.componentRef.instance.segment = segment;\r\n    }\r\n\r\n    /**\r\n    * 组件销毁\r\n    */\r\n    ngOnDestroy() {\r\n        if(!isNullOrUndefined(this.componentRef)){\r\n            this.componentRef.destroy();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Kendo UI Grid行改变事件\r\n     * @param e \r\n     */\r\n    onSelectedBrokenChange(e) {\r\n        this.selectedBrokenList = [];\r\n        let len = this.selectedBrokenCodes.length;\r\n        if (len > 0) {\r\n            this.selectedBrokenCodes.forEach(code => {\r\n                if (this.brokenList && this.brokenList.length > 0) {\r\n                    let tempIndex = this.brokenList.findIndex(value => value.Code == code);\r\n                    if (tempIndex != (-1)) {\r\n                        this.selectedBrokenList.push(this.brokenList[tempIndex]);\r\n                    }\r\n                }\r\n            });\r\n            //单选情况加添加该语句\r\n            this.selectedBroken = this.selectedBrokenList[0];\r\n            this.createFocusedBrokenComponent();\r\n        }\r\n        if (len === 0) {\r\n            this.selectAllBrokenState = 'unchecked';\r\n        } else if (len > 0 && len < this.brokenList.length) {\r\n            this.selectAllBrokenState = 'indeterminate';\r\n        } else {\r\n            this.selectAllBrokenState = 'checked';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Kendo UI 列头CheckBox全选事件\r\n     * @param checkedState \r\n     */\r\n    onSelectAllBrokenChange(checkedState: SelectAllCheckboxState) {\r\n        if (checkedState === 'checked') {\r\n            this.selectedBrokenCodes = this.brokenList.map((item) => item.Code);\r\n            this.selectAllBrokenState = 'checked';\r\n        } else {\r\n            this.selectedBrokenCodes = [];\r\n            this.selectAllBrokenState = 'unchecked';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * cell点击事件处理\r\n     * @param param0 \r\n     */\r\n    cellClickHandler({ dataItem }) {\r\n        this.selectedBroken = dataItem;\r\n        this.createFocusedBrokenComponent();\r\n        this.resetRowSelectionFocus(dataItem);\r\n    }\r\n\r\n    /**\r\n     * 重置行选择焦点，Kendo UI Grid的行选择\r\n     * @param dataTtem \r\n     */\r\n    resetRowSelectionFocus(dataTtem: BrokenObject) {\r\n        this.selectedBrokenCodes = [];\r\n        this.selectedBrokenCodes.push(dataTtem.Code);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/basecoderulecomponent/base.component.ts","module.exports = \"<div class=\\\"card-block\\\">\\r\\n    <form class=\\\"k-form\\\" style=\\\"padding: 16px\\\">\\r\\n        <form class=\\\"k-form-inline\\\" style=\\\"padding: 16px;height: 38px\\\">\\r\\n            <div class=\\\"k-form-field\\\">\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">编号</label>\\r\\n                <input style=\\\"width: 45%;\\\" class=\\\"k-textbox\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"segment.SegmentCode\\\" name=\\\"segmentCode\\\" />\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">名称</label>\\r\\n                <input style=\\\"width: 45%;\\\" class=\\\"k-textbox\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"segment.SegmentName\\\" name=\\\"segmentName\\\" />\\r\\n            </div>\\r\\n        </form>\\r\\n        <form class=\\\"k-form-inline\\\" style=\\\"padding: 16px;height: 38px\\\">\\r\\n            <div class=\\\"k-form-field\\\">\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">类型</label>\\r\\n                <input style=\\\"width: 45%;\\\" class=\\\"k-textbox\\\" name=\\\"operationDesc\\\" [(ngModel)]=\\\"segmentType\\\" name=\\\"segmentType\\\" />\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">参与段</label>\\r\\n                <kendo-dropdownlist [data]=\\\"status\\\" style=\\\"width: 45%;background-image: linear-gradient(#ffff,#ffff);\\\" [(ngModel)]=\\\"segment.IsUseShow\\\"\\r\\n                    name=\\\"segmentIsUseShow\\\">\\r\\n                </kendo-dropdownlist>\\r\\n            </div>\\r\\n        </form>\\r\\n        <form class=\\\"k-form-inline\\\" style=\\\"padding:16px;height: 38px\\\">\\r\\n                <div class=\\\"k-form-field\\\">\\r\\n                    <label style=\\\"width: 5%;min-width: 95px;\\\">维度段</label>\\r\\n                    <kendo-dropdownlist [data]=\\\"status\\\" style=\\\"width: 45%;background-image: linear-gradient(#ffff,#ffff);\\\" [(ngModel)]=\\\"segment.IsDimension\\\"\\r\\n                        name=\\\"segmentIsDimension\\\">\\r\\n                    </kendo-dropdownlist>\\r\\n                    <label style=\\\"width: 5%;min-width: 95px;\\\">参数编号</label>\\r\\n                    <input style=\\\"width: 45%;\\\" class=\\\"k-textbox\\\" [(ngModel)]=\\\"segment.ParamCode\\\" name=\\\"segmentParamCode\\\"/>\\r\\n                </div>\\r\\n            </form>\\r\\n        <form class=\\\"k-form-inline\\\" style=\\\"padding:16px;height: 38px\\\">\\r\\n            <div class=\\\"k-form-field\\\">\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">样例</label>\\r\\n                <input style=\\\"width: 45%;\\\" class=\\\"k-textbox\\\"/>\\r\\n            </div>\\r\\n        </form>\\r\\n    </form>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/baseoutparamcomponent/baseoutparam.component.html\n// module id = ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/baseoutparamcomponent/baseoutparam.component.html\n// module chunks = coderulepackage.module","import { Component, Input, OnInit } from '@angular/core';\r\nimport { OutParamSegment } from '../../../coderulemetadata/base/segment/outparamsegment';\r\nimport { CodeRuleService } from '../../../coderuleservice/coderuleservice';\r\n\r\n@Component({\r\n    selector: 'app-baseoutparam',\r\n    templateUrl: './baseoutparam.component.html'\r\n})\r\n\r\nexport class BaseOutParamSegmentComponent implements OnInit {\r\n    /**\r\n     * 编号规则元数据\r\n    */\r\n    @Input() segment: OutParamSegment;\r\n\r\n    segmentType:string;\r\n\r\n    status: Array<boolean> = [true, false];\r\n\r\n    constructor(private codeRuleService:CodeRuleService) { }\r\n\r\n    ngOnInit(): void {\r\n        let segmentTypeString =this.codeRuleService.getSegmentTypeToString(this.segment.getSegmentType());\r\n        this.segmentType=this.codeRuleService.getSegmentTypeDesc(segmentTypeString);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/baseoutparamcomponent/baseoutparam.component.ts","module.exports = \"<div class=\\\"card-block\\\">\\r\\n    <form class=\\\"k-form\\\" style=\\\"padding: 16px\\\">\\r\\n        <form class=\\\"k-form-inline\\\" style=\\\"padding: 16px;height: 38px\\\">\\r\\n            <div class=\\\"k-form-field\\\">\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">编号</label>\\r\\n                <input style=\\\"width: 45%;\\\" class=\\\"k-textbox\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"segment.SegmentCode\\\" name=\\\"segmentCode\\\" />\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">名称</label>\\r\\n                <input style=\\\"width: 45%;\\\" class=\\\"k-textbox\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"segment.SegmentName\\\" name=\\\"segmentName\\\" />\\r\\n            </div>\\r\\n        </form>\\r\\n        <form class=\\\"k-form-inline\\\" style=\\\"padding: 16px;height: 38px\\\">\\r\\n            <div class=\\\"k-form-field\\\">\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">类型</label>\\r\\n                <input style=\\\"width: 45%;\\\" class=\\\"k-textbox\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"segmentType\\\" name=\\\"segmentType\\\" />\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">参与段</label>\\r\\n                <kendo-dropdownlist [data]=\\\"status\\\" style=\\\"width: 45%;background-image: linear-gradient(#ffff,#ffff);\\\" [(ngModel)]=\\\"segment.IsUseShow\\\"\\r\\n                    name=\\\"segmentIsUseShow\\\">\\r\\n                </kendo-dropdownlist>\\r\\n            </div>\\r\\n        </form>\\r\\n        <form class=\\\"k-form-inline\\\" style=\\\"padding:16px;height: 38px\\\">\\r\\n            <div class=\\\"k-form-field\\\">\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">维度段</label>\\r\\n                <kendo-dropdownlist [data]=\\\"status\\\" style=\\\"width: 45%;background-image: linear-gradient(#ffff,#ffff);\\\" [(ngModel)]=\\\"segment.IsDimension\\\"\\r\\n                    name=\\\"segmentIsDimension\\\">\\r\\n                </kendo-dropdownlist>\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">常量</label>\\r\\n                <input style=\\\"width: 45%;\\\" class=\\\"k-textbox\\\" [(ngModel)]=\\\"segment.Value\\\" name=\\\"segmentValue\\\" />\\r\\n            </div>\\r\\n        </form>\\r\\n    </form>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/constcomponent/const.component.html\n// module id = ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/constcomponent/const.component.html\n// module chunks = coderulepackage.module","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ConstantSegment } from '../../../coderulemetadata/base/segment/constantsegment';\r\nimport { CodeRuleService } from '../../../coderuleservice/coderuleservice';\r\n\r\n@Component({\r\n    selector: 'app-const',\r\n    templateUrl: './const.component.html'\r\n})\r\n\r\nexport class ConstantSegmentComponent implements OnInit {\r\n    /**\r\n     * 编号规则元数据\r\n    */\r\n    @Input() segment: ConstantSegment;\r\n\r\n    status: Array<boolean> = [true, false];\r\n\r\n    segmentType:string;\r\n\r\n    constructor(private codeRuleService:CodeRuleService) { }\r\n\r\n    ngOnInit(): void {\r\n        //debugger;\r\n        let segmentTypeString =this.codeRuleService.getSegmentTypeToString(this.segment.getSegmentType());\r\n        this.segmentType=this.codeRuleService.getSegmentTypeDesc(segmentTypeString);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/constcomponent/const.component.ts","import { ExpressionContextEntity } from \"@gsp-svc/expression/editor/expressioncontextentity\";\r\nimport { FuncType } from \"@gsp-svc/expression/editor/funcentity\";\r\n\r\nexport const expression_entity: ExpressionContextEntity = {\r\n    contextEntities: [\r\n      {\r\n        key: \"UserId\",\r\n        name: \"用户Id\",\r\n        description: \"当前用户的Id\"\r\n      },\r\n      {\r\n        key: \"TenantId\",\r\n        name: \"租户Id\",\r\n        description: \"当前租户的名称\"\r\n      },\r\n      {\r\n        key: \"CurrentSU\",\r\n        name: \"服务单元\",\r\n        description: \"当前所处的服务单元\"\r\n      },\r\n      {\r\n        key: \"Language\",\r\n        name: \"语言\",\r\n        description: \"当前语言\"\r\n      },\r\n      {\r\n        key: \"AppCode\",\r\n        name: \"实例编号\",\r\n        description: \"当前实例编号\"\r\n      }\r\n\r\n    ],\r\n    sessionEntities: [\r\n      {\r\n        key: \"SessionId\",\r\n        name: \"SessionId\",\r\n        description: \"当前的SessionId\"\r\n      }\r\n    ],\r\n    funcEntities: [\r\n      {\r\n        key: \"DefaultFunction.GetContextParameter()\",\r\n        params: \"contextParam\",\r\n        name: \"contextParam\",\r\n        description: \"获取上下文参数\",\r\n        type: FuncType.Extend\r\n      },\r\n      {\r\n        key: \"DefaultFunction.GetSessionValue()\",\r\n        params: \"sessionValue\",\r\n        name: \"sessionValue\",\r\n        description: \"获取Session信息\",\r\n        type: FuncType.Extend\r\n      }\r\n    ],\r\n    expr: \"\"\r\n  };\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/expression/mockexpression.ts","module.exports = \"<div class=\\\"card-block\\\">\\r\\n    <form class=\\\"k-form\\\" style=\\\"padding: 16px\\\">\\r\\n        <form class=\\\"k-form-inline\\\" style=\\\"padding: 16px;height: 38px\\\">\\r\\n            <div class=\\\"k-form-field\\\">\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">编号</label>\\r\\n                <input style=\\\"width: 45%;\\\" class=\\\"k-textbox\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"segment.SegmentCode\\\" name=\\\"segmentCode\\\" />\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">名称</label>\\r\\n                <input style=\\\"width: 45%;\\\" class=\\\"k-textbox\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"segment.SegmentName\\\" name=\\\"segmentName\\\" />\\r\\n            </div>\\r\\n        </form>\\r\\n        <form class=\\\"k-form-inline\\\" style=\\\"padding: 16px;height: 38px\\\">\\r\\n            <div class=\\\"k-form-field\\\">\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">类型</label>\\r\\n                <input style=\\\"width: 45%;\\\" class=\\\"k-textbox\\\" name=\\\"operationDesc\\\" [(ngModel)]=\\\"segmentType\\\" name=\\\"segmentType\\\" />\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">参与段</label>\\r\\n                <kendo-dropdownlist [data]=\\\"status\\\" style=\\\"width: 45%;background-image: linear-gradient(#ffff,#ffff);\\\" [(ngModel)]=\\\"segment.IsUseShow\\\"\\r\\n                    name=\\\"segmentIsUseShow\\\">\\r\\n                </kendo-dropdownlist>\\r\\n            </div>\\r\\n        </form>\\r\\n        <form class=\\\"k-form-inline\\\" style=\\\"padding:16px;height: 38px\\\">\\r\\n                <div class=\\\"k-form-field\\\">\\r\\n                    <label style=\\\"width: 5%;min-width: 95px;\\\">维度段</label>\\r\\n                    <kendo-dropdownlist [data]=\\\"status\\\" style=\\\"width: 45%;background-image: linear-gradient(#ffff,#ffff);\\\" [(ngModel)]=\\\"segment.IsDimension\\\"\\r\\n                        name=\\\"segmentIsDimension\\\">\\r\\n                    </kendo-dropdownlist>\\r\\n                    <label style=\\\"width: 5%;min-width: 95px;\\\">参数编号</label>\\r\\n                    <input style=\\\"width: 45%;\\\" class=\\\"k-textbox\\\" [(ngModel)]=\\\"segment.ParamCode\\\" name=\\\"segmentParamCode\\\"/>\\r\\n                </div>\\r\\n            </form>\\r\\n        <form class=\\\"k-form-inline\\\" style=\\\"padding:16px;height: 38px\\\">\\r\\n            <div class=\\\"k-form-field\\\">\\r\\n                    <label style=\\\"width: 5%;min-width: 95px;\\\">表达式</label>\\r\\n                    <!-- <input style=\\\"width: 45%;\\\" class=\\\"k-textbox\\\" [(ngModel)]=\\\"outParamExpress\\\" name=\\\"outParamExpress\\\" (input)=\\\"outParamExpressChange($event)\\\"/> -->\\r\\n                    <input style=\\\"width: 40%;\\\" class=\\\"k-textbox\\\" [(ngModel)]=\\\"outParamExpress\\\" name=\\\"outParamExpress\\\" />\\r\\n                    <button kendoButton (click)=\\\"openExpr()\\\" style=\\\"height: 29px; width:5%\\\">\\r\\n                        <span class=\\\"k-icon k-i-more-horizontal\\\"></span>\\r\\n                    </button>\\r\\n\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">样例</label>\\r\\n                <input style=\\\"width: 45%;\\\" class=\\\"k-textbox\\\"/>\\r\\n            </div>\\r\\n        </form>\\r\\n    </form>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/outparamcomponent/outparam.component.html\n// module id = ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/outparamcomponent/outparam.component.html\n// module chunks = coderulepackage.module","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { OutParamSegment } from '../../../coderulemetadata/base/segment/outparamsegment';\r\nimport { CodeRuleService } from '../../../coderuleservice/coderuleservice';\r\nimport { EventBusService } from '../../../coderuleservice/eventBusService';\r\nimport { ExpressionService } from '@gsp-svc/expression/editor/expressionservice';\r\nimport { expression_entity } from '../expression/mockexpression';\r\n\r\n@Component({\r\n    selector: 'app-outparam',\r\n    templateUrl: './outparam.component.html',\r\n    providers: [ExpressionService]\r\n})\r\n\r\nexport class OutParamSegmentComponent implements OnInit {\r\n    /**\r\n     * 编号规则元数据\r\n    */\r\n    @Input() segment: OutParamSegment;\r\n    @Input() outParamExpress:string;\r\n\r\n    segmentType:string;\r\n    expressionEntity = expression_entity\r\n    status: Array<boolean> = [true, false];\r\n\r\n    constructor(private codeRuleService:CodeRuleService,private codeRuleEventBus:EventBusService,private expr: ExpressionService) { }\r\n\r\n    ngOnInit(): void {\r\n        let segmentTypeString =this.codeRuleService.getSegmentTypeToString(this.segment.getSegmentType());\r\n        this.segmentType=this.codeRuleService.getSegmentTypeDesc(segmentTypeString);\r\n    }\r\n\r\n    outParamExpressChange(){\r\n        this.codeRuleEventBus.eventbus.emit({\r\n            outParamExpress:this.outParamExpress,\r\n            eventName:\"dmOutParamExpressEmit\"\r\n        })\r\n    }\r\n\r\n    openExpr(){\r\n        //debugger;\r\n        let exprText:string=this.outParamExpress?JSON.parse(this.outParamExpress ).Expr:\"默认文本\";\r\n        this.expr.addExpressionText(exprText);\r\n        this.expressionEntity.sessionEntities.forEach(\r\n            item => this.expr.addSession(item));\r\n        this.expressionEntity.contextEntities.forEach(\r\n            item => this.expr.addContext(item)\r\n        )\r\n        this.expressionEntity.funcEntities.forEach(\r\n            item => this.expr.addFunc(item)\r\n        )\r\n        this.expr.buildExpression().then(expressioninfo => {\r\n        //debugger;\r\n            this.outParamExpress =expressioninfo as string;\r\n            this.codeRuleEventBus.eventbus.emit({\r\n                outParamExpress:this.outParamExpress,\r\n                eventName:\"dmOutParamExpressEmit\"\r\n            })\r\n        }\r\n        );\r\n\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/outparamcomponent/outparam.component.ts","module.exports = \"<div class=\\\"card-block\\\">\\r\\n    <form class=\\\"k-form\\\" style=\\\"padding: 16px\\\">\\r\\n        <form class=\\\"k-form-inline\\\" style=\\\"padding: 16px;height: 38px\\\">\\r\\n            <div class=\\\"k-form-field\\\">\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">编号</label>\\r\\n                <input style=\\\"width: 45%;\\\" class=\\\"k-textbox\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"segment.SegmentCode\\\" name=\\\"segmentCode\\\" />\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">名称</label>\\r\\n                <input style=\\\"width: 45%;\\\" class=\\\"k-textbox\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"segment.SegmentName\\\" name=\\\"segmentName\\\" />\\r\\n            </div>\\r\\n        </form>\\r\\n        <form class=\\\"k-form-inline\\\" style=\\\"padding: 16px;height: 38px\\\">\\r\\n            <div class=\\\"k-form-field\\\">\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">类型</label>\\r\\n                <input style=\\\"width: 45%;\\\" class=\\\"k-textbox\\\" name=\\\"operationDesc\\\" [(ngModel)]=\\\"segmentType\\\" name=\\\"segmentType\\\" />\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">参与段</label>\\r\\n                <kendo-dropdownlist [data]=\\\"status\\\" style=\\\"width: 45%;background-image: linear-gradient(#ffff,#ffff);\\\" [(ngModel)]=\\\"segment.IsUseShow\\\"\\r\\n                    name=\\\"segmentIsUseShow\\\">\\r\\n                </kendo-dropdownlist>\\r\\n            </div>\\r\\n        </form>\\r\\n        <form class=\\\"k-form-inline\\\" style=\\\"padding:16px;height: 38px\\\">\\r\\n            <div class=\\\"k-form-field\\\">\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">维度段</label>\\r\\n                <kendo-dropdownlist [data]=\\\"status\\\" style=\\\"width: 45%;background-image: linear-gradient(#ffff,#ffff);\\\" [(ngModel)]=\\\"segment.IsDimension\\\" name=\\\"segmentIsDimension\\\">\\r\\n                </kendo-dropdownlist>\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">起始号</label>\\r\\n                <input style=\\\"width: 45%;\\\" class=\\\"k-textbox\\\"  [(ngModel)]=\\\"segment.Start\\\" name=\\\"segmentStart\\\"/>\\r\\n            </div>\\r\\n        </form>\\r\\n        <form class=\\\"k-form-inline\\\" style=\\\"padding:16px;height: 38px\\\">\\r\\n                <div class=\\\"k-form-field\\\">\\r\\n                    <label style=\\\"width: 5%;min-width: 95px;\\\">步长</label>\\r\\n                    <input style=\\\"width: 45%;\\\" class=\\\"k-textbox\\\"  [(ngModel)]=\\\"segment.Step\\\" name=\\\"segmentStep\\\"/>\\r\\n                    <label style=\\\"width: 5%;min-width: 95px;\\\">位数</label>\\r\\n                    <input style=\\\"width: 45%;\\\" class=\\\"k-textbox\\\"   [(ngModel)]=\\\"segment.Length\\\" name=\\\"segmentLength\\\"/>\\r\\n                </div>\\r\\n            </form>\\r\\n    </form>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/sequencecomponent/sequence.component.html\n// module id = ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/sequencecomponent/sequence.component.html\n// module chunks = coderulepackage.module","import { Component, Input, OnInit } from '@angular/core';\r\nimport { SequenceSegment } from '../../../coderulemetadata/base/segment/sequencesegment';\r\nimport { CodeRuleService } from '../../../coderuleservice/coderuleservice';\r\n\r\n@Component({\r\n    selector: 'app-sequence',\r\n    templateUrl: './sequence.component.html'\r\n})\r\n\r\nexport class SequenceSegmentComponent implements OnInit {\r\n    /**\r\n     * 编号规则元数据\r\n    */\r\n    @Input() segment: SequenceSegment;\r\n\r\n    segmentType:string;\r\n\r\n    status: Array<boolean> = [true, false];\r\n\r\n    constructor(private codeRuleService:CodeRuleService) { }\r\n\r\n    ngOnInit(): void {\r\n        let segmentTypeString =this.codeRuleService.getSegmentTypeToString(this.segment.getSegmentType());\r\n        this.segmentType=this.codeRuleService.getSegmentTypeDesc(segmentTypeString);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/sequencecomponent/sequence.component.ts","module.exports = \"<div class=\\\"card-block\\\">\\r\\n    <form class=\\\"k-form\\\" style=\\\"padding: 16px\\\">\\r\\n        <form class=\\\"k-form-inline\\\" style=\\\"padding: 16px;height: 38px\\\">\\r\\n            <div class=\\\"k-form-field\\\">\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">编号</label>\\r\\n                <input style=\\\"width: 45%;\\\" class=\\\"k-textbox\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"segment.SegmentCode\\\" name=\\\"segmentCode\\\" />\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">名称</label>\\r\\n                <input style=\\\"width: 45%;\\\" class=\\\"k-textbox\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"segment.SegmentName\\\" name=\\\"segmentName\\\" />\\r\\n            </div>\\r\\n        </form>\\r\\n        <form class=\\\"k-form-inline\\\" style=\\\"padding: 16px;height: 38px\\\">\\r\\n            <div class=\\\"k-form-field\\\">\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">类型</label>\\r\\n                <input style=\\\"width: 45%;\\\" class=\\\"k-textbox\\\" name=\\\"operationDesc\\\" [(ngModel)]=\\\"segmentType\\\" name=\\\"segmentType\\\" />\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">参与段</label>\\r\\n                <kendo-dropdownlist [data]=\\\"status\\\" style=\\\"width: 45%;background-image: linear-gradient(#ffff,#ffff);\\\" [(ngModel)]=\\\"segment.IsUseShow\\\" name=\\\"segmentIsUseShow1\\\">\\r\\n                </kendo-dropdownlist>\\r\\n            </div>\\r\\n        </form>\\r\\n        <form class=\\\"k-form-inline\\\" style=\\\"padding:16px;height: 38px\\\">\\r\\n            <div class=\\\"k-form-field\\\">\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">维度段</label>\\r\\n                <kendo-dropdownlist [data]=\\\"status\\\" style=\\\"width: 45%;background-image: linear-gradient(#ffff,#ffff);\\\" [(ngModel)]=\\\"segment.IsDimension\\\" name=\\\"segmentIsDimension1\\\">\\r\\n                </kendo-dropdownlist>\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">表达式</label>\\r\\n                <input style=\\\"width: 40%;\\\" class=\\\"k-textbox\\\" [(ngModel)]=\\\"segment.Express\\\" name=\\\"segmentName\\\" />\\r\\n                <button kendoButton (click)=\\\"openExpr()\\\" style=\\\"height: 29px; width:5%\\\">\\r\\n                    <span class=\\\"k-icon k-i-more-horizontal\\\"></span>\\r\\n                </button>\\r\\n            </div>\\r\\n        </form>\\r\\n        <form class=\\\"k-form-inline\\\" style=\\\"padding: 16px;height: 38px\\\">\\r\\n            <div class=\\\"k-form-field\\\">\\r\\n                <label style=\\\"width: 5%;min-width: 95px;\\\">样例</label>\\r\\n                <input style=\\\"width: 95%;\\\" class=\\\"k-textbox\\\" [(ngModel)]=\\\"example\\\" name=\\\"example\\\" />\\r\\n            </div>\\r\\n        </form>\\r\\n    </form>\\r\\n\\r\\n\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/syscomponent/sys.component.html\n// module id = ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/syscomponent/sys.component.html\n// module chunks = coderulepackage.module","import { Component, Input, OnInit } from '@angular/core';\r\nimport { SysVariableSegment } from '../../../coderulemetadata/base/segment/sysvariablesegment';\r\nimport { CodeRuleService } from '../../../coderuleservice/coderuleservice';\r\nimport { ExpressionService } from '@gsp-svc/expression/editor/expressionservice';\r\nimport { ExpressionContextEntity } from '@gsp-svc/expression/editor/expressioncontextentity';\r\nimport { FuncType } from '@gsp-svc/expression/editor/funcentity';\r\nimport { expression_entity } from '../expression/mockexpression';\r\n\r\n@Component({\r\n    selector: 'app-sys',\r\n    templateUrl: './sys.component.html',\r\n    providers: [ExpressionService]\r\n})\r\n\r\nexport class SysVariableSegmentComponent implements OnInit {\r\n    /**\r\n     * 编号规则元数据\r\n    */\r\n    constructor(private codeRuleService: CodeRuleService,private expr: ExpressionService) { }\r\n    expressionEntity = expression_entity\r\n    @Input() segment: SysVariableSegment;\r\n\r\n    status: Array<boolean> = [true, false];\r\n\r\n    segmentType: string;\r\n\r\n    example: string;\r\n\r\n    ngOnInit(): void {\r\n        let segmentTypeString = this.codeRuleService.getSegmentTypeToString(this.segment.getSegmentType());\r\n        this.segmentType = this.codeRuleService.getSegmentTypeDesc(segmentTypeString);\r\n    }\r\n\r\n    openExpr() {\r\n        //debugger;\r\n        let exprText:string=this.segment.Express?JSON.parse(this.segment.Express).Expr:\"默认文本\";\r\n        this.expr.addExpressionText(exprText);\r\n        this.expressionEntity.sessionEntities.forEach(\r\n            item => this.expr.addSession(item));\r\n        this.expressionEntity.contextEntities.forEach(\r\n            item => this.expr.addContext(item)\r\n        )\r\n        this.expressionEntity.funcEntities.forEach(\r\n            item => this.expr.addFunc(item)\r\n        )\r\n        this.expr.buildExpression().then(expressioninfo => {\r\n        //debugger;\r\n            this.segment.Express =expressioninfo as string\r\n        }\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/commoncomponent/syscomponent/sys.component.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host {\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-direction: column;\\r\\n            flex-direction: column;\\r\\n    -webkit-box-flex: 1;\\r\\n        -ms-flex: 1;\\r\\n            flex: 1;\\r\\n}\\r\\n\\r\\n#bemain .k-content {\\r\\n    padding: 0 !important;\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-direction: column;\\r\\n            flex-direction: column;\\r\\n}\\r\\n\\r\\napp-dmbasecoderule  .k-dropdown-wrap>.k-input{\\r\\n    background-color: #ffff;\\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/dmbasecomponent/dmbase.component.css\n// module id = ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/dmbasecomponent/dmbase.component.css\n// module chunks = coderulepackage.module","module.exports = \"<div id=\\\"bemain\\\" class=\\\"d-flex flex-column\\\" style=\\\" flex: 1 1 auto; display: flex; flex-direction: column;\\\">\\r\\n    <div class=\\\"d-flex flex-column\\\" style=\\\"margin-top: 10px;flex:1 1 auto;\\\">\\r\\n        <div class=\\\"col-xs-12 col-sm-12\\\">\\r\\n            <div class=\\\"panel-heading\\\">\\r\\n                <h6 class=\\\"panel-title\\\" style=\\\"font-size: 0.9rem;\\\">\\r\\n                    基本信息\\r\\n                </h6>\\r\\n            </div>\\r\\n            <div class=\\\"card\\\" style=\\\"background-color: #f6f6f6;\\\">\\r\\n                <div class=\\\"card-block\\\">\\r\\n                    <form class=\\\"k-form\\\" style=\\\"padding: 10px 1px 10px 1px;\\\">\\r\\n                        <form class=\\\"k-form-inline\\\" style=\\\"padding: 2px;height: 38px;\\\">\\r\\n                            <div class=\\\"k-form-field\\\">\\r\\n                                <label style=\\\"width: 5%;min-width: 95px;\\\">ID</label>\\r\\n                                <input style=\\\"width: 30%;\\\" class=\\\"k-textbox\\\" [(ngModel)]=\\\"codeRuleMetadata.Id\\\" name=\\\"codeRuleMetadataId\\\" />\\r\\n                                <label style=\\\"width: 5%;min-width: 95px\\\">编号</label>\\r\\n                                <input style=\\\"width: 30%;\\\" class=\\\"k-textbox\\\" [(ngModel)]=\\\"codeRuleMetadata.Code\\\" name=\\\"codeRuleMetadataCode\\\" />\\r\\n                                <label style=\\\"width: 5%;min-width: 95px\\\">名称</label>\\r\\n                                <input style=\\\"width: 30%;\\\" class=\\\"k-textbox\\\" [(ngModel)]=\\\"codeRuleMetadata.Name\\\" name=\\\"codeRuleMetadataName\\\" />\\r\\n                            </div>\\r\\n                        </form>\\r\\n\\r\\n                        <form class=\\\"k-form-inline\\\" style=\\\"padding: 2px;height: 38px;\\\">\\r\\n                            <div class=\\\"k-form-field\\\">\\r\\n                                <label style=\\\"width: 5%;min-width: 95px;\\\">是否连续</label>\\r\\n                                <kendo-dropdownlist [data]=\\\"status\\\" style=\\\"width: 30%;background-image: linear-gradient(#ffff,#ffff);\\\" [(ngModel)]=\\\"dMBaseCodeRule.IsBrokenUse\\\"\\r\\n                                    name=\\\"isBrokenUse\\\" >\\r\\n                                </kendo-dropdownlist>\\r\\n                                <label style=\\\"width: 5%;min-width: 95px\\\">存储策略</label>\\r\\n                                <input style=\\\"width: 30%;\\\" class=\\\"k-textbox\\\" />\\r\\n                                <label style=\\\"width: 5%;min-width: 95px\\\">编号样例</label>\\r\\n                                <input style=\\\"width: 30%;\\\" class=\\\"k-textbox\\\" [(ngModel)]=\\\"codeRuleExample\\\" name=\\\"codeRuleExample\\\" />\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-xs-12 col-sm-12\\\" style=\\\"margin-top:10px;\\\">\\r\\n                <div class=\\\"panel-heading\\\">\\r\\n                    <h6 class=\\\"panel-title\\\" style=\\\"font-size: 0.9rem;\\\">\\r\\n                        资源信息\\r\\n                        <button kendoButton style=\\\"margin-left: 10px\\\" (click)=\\\"openMetadataDialog()\\\" [icon]=\\\"'folder'\\\">选择模型</button>\\r\\n                        <button kendoButton (click)=\\\"deleteModel()\\\">\\r\\n                            <span class=\\\"k-icon k-i-delete\\\"></span>删除模型</button>\\r\\n                    </h6>\\r\\n                </div>\\r\\n                <div class=\\\"card\\\" style=\\\"background-color: #f6f6f6;\\\">\\r\\n                    <div class=\\\"card-block\\\">\\r\\n                        <form class=\\\"k-form\\\" style=\\\"padding: 4px;\\\">\\r\\n                            <form class=\\\"k-form-inline\\\" style=\\\"padding: 2px;height: 36px;\\\">\\r\\n                                <div class=\\\"k-form-field\\\">\\r\\n                                    <label style=\\\"width: 5%;min-width: 95px;\\\">模型Id</label>\\r\\n                                    <input style=\\\"width: 15%;\\\" class=\\\"k-textbox\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"dmExtensionInfo.ModelId\\\" name=\\\"modelId\\\" />\\r\\n                                    <label style=\\\"width: 5%;min-width: 95px;\\\">模型编号</label>\\r\\n                                    <input style=\\\"width: 15%;\\\" class=\\\"k-textbox\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"dmExtensionInfo.ModelCode\\\" name=\\\"modelCode\\\"\\r\\n                                    />\\r\\n                                    <label style=\\\"width: 5%;min-width: 95px;\\\">模型名称</label>\\r\\n                                    <input style=\\\"width: 15%;\\\" class=\\\"k-textbox\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"dmExtensionInfo.ModelName\\\" name=\\\"modelName\\\"\\r\\n                                    />\\r\\n                                    <button kendoButton style=\\\"margin-left: 6px;margin-right: 6px\\\" [disabled]=\\\"true\\\" [icon]=\\\"'folder'\\\">打开模型</button>\\r\\n                                </div>\\r\\n                            </form>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        <div class=\\\"col-xs-12 col-sm-12 d-flex flex-column\\\" style=\\\"flex: 1 1 auto;margin-top: 4px;\\\">\\r\\n            <kendo-splitter class=\\\"d-flex \\\" style=\\\"flex: 1 1 auto;margin-top: 6px\\\" orientation=\\\"horizontal\\\">\\r\\n                <kendo-splitter-pane class=\\\"d-flex \\\" [collapsible]=\\\"true\\\" size=\\\"30%\\\" min=\\\"350px\\\" style=\\\"height: auto\\\">\\r\\n                    <div class=\\\"col-xs-12 col-sm-12 d-flex flex-column\\\" style=\\\"margin-top: 10px; padding-right: 6px;padding-left: 6px;\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                            <h6 class=\\\"panel-title\\\" style=\\\"font-size: 0.9rem;\\\">\\r\\n                                段列表\\r\\n                            </h6>\\r\\n                        </div>\\r\\n                        <div class=\\\"card d-flex\\\" style=\\\"flex:1 1 auto;\\\">\\r\\n                            <div class=\\\"card-block d-flex\\\" style=\\\"flex:1 1 auto;\\\">\\r\\n                                <kendo-grid class=\\\"d-flex\\\" style=\\\"flex:1 1 auto;min-height: 150px\\\" [data]=\\\"brokenList\\\" [selectable]=\\\"{enabled: true, checkboxOnly: false,mode:'single' }\\\"\\r\\n                                    [kendoGridSelectBy]=\\\"'Code'\\\" (selectedKeysChange)=\\\"onSelectedBrokenChange($event)\\\" [selectedKeys]=\\\"selectedBrokenCodes\\\"\\r\\n                                    [rowSelected]=\\\"isRowParamSelected\\\" (cellClick)=\\\"cellClickHandler($event)\\\">\\r\\n                                    <ng-template kendoGridToolbarTemplate>\\r\\n                                        <button kendoGridAddCommand (click)=\\\"add()\\\">\\r\\n                                            <span class=\\\"k-icon k-i-plus\\\"></span>新增</button>\\r\\n                                        <button kendoGridAddCommand (click)=\\\"delete()\\\">\\r\\n                                            <span class=\\\"k-icon k-i-delete\\\"></span>删除</button>\\r\\n                                        <button kendoGridAddCommand (click)=\\\"up()\\\">\\r\\n                                            <span class=\\\"k-icon k-i-sort-asc-sm\\\"></span>上移</button>\\r\\n                                        <button kendoGridAddCommand (click)=\\\"down()\\\">\\r\\n                                            <span class=\\\"k-icon k-i-sort-desc-sm\\\"></span>下移</button>\\r\\n                                    </ng-template>\\r\\n                                    <kendo-grid-checkbox-column width=\\\"40\\\">\\r\\n                                        <ng-template>\\r\\n                                            <input class=\\\"k-checkbox\\\" />\\r\\n                                            <label class=\\\"k-checkbox-label\\\" for=\\\"selectAllCheckboxBrokenCode\\\"></label>\\r\\n                                        </ng-template>\\r\\n                                    </kendo-grid-checkbox-column>\\r\\n                                    <kendo-grid-column field=\\\"Code\\\" title=\\\"编号\\\"></kendo-grid-column>\\r\\n                                    <kendo-grid-column field=\\\"Type\\\" title=\\\"类型\\\"></kendo-grid-column>\\r\\n                                </kendo-grid>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </kendo-splitter-pane>\\r\\n\\r\\n                <kendo-splitter-pane class=\\\"d-flex\\\" style=\\\"height: auto\\\">\\r\\n                    <div class=\\\"col-xs-12 col-sm-12 d-flex flex-column\\\" style=\\\"margin-top: 10px;padding-right: 6px;padding-left: 6px;flex: 1 1 auto;\\\">\\r\\n                        <div class=\\\"panel-heading\\\">\\r\\n                            <h6 class=\\\"panel-title\\\" style=\\\"font-size: 0.9rem;\\\">\\r\\n                                段信息\\r\\n                            </h6>\\r\\n                        </div>\\r\\n                        <div class=\\\"card d-flex\\\" style=\\\"flex:1 1 auto\\\">\\r\\n                            <ng-template #brokenType></ng-template>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </kendo-splitter-pane>\\r\\n            </kendo-splitter>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<farris-dialog #modelSelect [buttons]=\\\"modelSelectBtn\\\">\\r\\n    <form class=\\\"k-form-inline\\\" style=\\\"padding: 16px;\\\">\\r\\n        <div class=\\\"k-form-field\\\">\\r\\n            <span style=\\\"width: 5%;min-width: 75px;\\\">模型类型</span>\\r\\n            <kendo-dropdownlist [data]=\\\"modelTypeList\\\" style=\\\"width: 83%;\\\" [(ngModel)]=\\\"selectedModel\\\" name=\\\"selectedModel\\\">\\r\\n            </kendo-dropdownlist>\\r\\n        </div>\\r\\n    </form>\\r\\n    <ng-template #modelSelectBtn>\\r\\n        <button (click)=\\\"modelSelect.close()\\\">取消</button>\\r\\n        <button (click)=\\\"modelSelectConfirm()\\\">确定</button>\\r\\n    </ng-template>\\r\\n</farris-dialog>\\r\\n\\r\\n<farris-dialog #brokenSelection [buttons]=\\\"brokenSelectionBtn\\\">\\r\\n    <form class=\\\"k-form-inline\\\" style=\\\"padding:16px;height: 38px\\\">\\r\\n        <div class=\\\"k-form-field\\\">\\r\\n            <span style=\\\"width: 5%;min-width: 70px;\\\">段类型</span>\\r\\n            <kendo-dropdownlist [data]=\\\"brokenTypeList\\\" style=\\\"width: 83%;\\\" textField=\\\"text\\\" valueField=\\\"value\\\" [valuePrimitive]=\\\"true\\\"\\r\\n                [value]=\\\"Constant\\\" [(ngModel)]=\\\"selectedBrokenType\\\" name=\\\"selectedBrokenType\\\">\\r\\n            </kendo-dropdownlist>\\r\\n        </div>\\r\\n    </form>\\r\\n    <form class=\\\"k-form-inline\\\" style=\\\"padding:16px;height: 38px\\\">\\r\\n        <div class=\\\"k-form-field\\\">\\r\\n            <span style=\\\"width: 5%;min-width: 70px;\\\">段编号</span>\\r\\n            <input style=\\\"width: 83%;\\\" class=\\\"k-textbox\\\" [(ngModel)]=\\\"newBrokenCode\\\" name=\\\"newBrokenCode\\\" />\\r\\n        </div>\\r\\n    </form>\\r\\n    <form class=\\\"k-form-inline\\\" style=\\\"padding:16px;height: 38px\\\">\\r\\n        <div class=\\\"k-form-field\\\">\\r\\n            <span style=\\\"width: 5%;min-width: 70px;\\\">段名称</span>\\r\\n            <input style=\\\"width: 83%;\\\" class=\\\"k-textbox\\\" [(ngModel)]=\\\"newBrokenName\\\" name=\\\"newBrokenName\\\" />\\r\\n        </div>\\r\\n    </form>\\r\\n    <ng-template #brokenSelectionBtn>\\r\\n        <button (click)=\\\"brokenSelection.close()\\\">取消</button>\\r\\n        <button (click)=\\\"brokenSelectionConfirm()\\\">确定</button>\\r\\n    </ng-template>\\r\\n</farris-dialog>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/dmbasecomponent/dmbase.component.html\n// module id = ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/dmbasecomponent/dmbase.component.html\n// module chunks = coderulepackage.module","import { Component, Input, OnInit, ViewContainerRef, ViewChild, ComponentFactoryResolver, ComponentRef, Injector, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { CodeRuleMetadata } from '../../coderulemetadata/coderulemetadata';\r\nimport { SelectMetadataComponent, GSPMetadataService } from '../../../../../../../reference/metadata/metadata.ref';\r\nimport { ISegment } from '../../coderulemetadata/base/segment/isegment';\r\nimport { DialogComponent, BsModalService } from '@farris/ui';\r\nimport { isNullOrUndefined } from 'util';\r\nimport { isNullOrEmptyString } from '@progress/kendo-angular-grid/dist/es2015/utils';\r\nimport { ConstantSegment } from '../../coderulemetadata/base/segment/constantsegment';\r\nimport { SysVariableSegment } from '../../coderulemetadata/base/segment/sysvariablesegment';\r\nimport { OutParamSegment } from '../../coderulemetadata/base/segment/outparamsegment';\r\nimport { SequenceSegment } from '../../coderulemetadata/base/segment/sequencesegment';\r\nimport { ConstantSegmentComponent } from '../commoncomponent/constcomponent/const.component';\r\nimport { OutParamSegmentComponent } from '../commoncomponent/outparamcomponent/outparam.component';\r\nimport { SysVariableSegmentComponent } from '../commoncomponent/syscomponent/sys.component';\r\nimport { SequenceSegmentComponent } from '../commoncomponent/sequencecomponent/sequence.component';\r\nimport { DMBaseCodeRule } from '../../coderulemetadata/extension/dmbasecoderule';\r\nimport { CodeRuleService } from '../../coderuleservice/coderuleservice';\r\nimport { MetadataDto, Metadata4RefDto } from '@gsp-lcm/metadata-selector/metadata/metadata4refdto';\r\nimport { DMExtensionInfo } from '../../coderulemetadata/extension/dmextensioninfo';\r\nimport { BrokenObject, Item } from '../../commonobject/commonobject';\r\nimport { RowArgs, SelectAllCheckboxState } from '@progress/kendo-angular-grid';\r\nimport { brokenTypes } from '../../commonobject/const';\r\nimport { SegmentType } from '../../coderulemetadata/base/segment/segmenttype';\r\nimport { ParamMapping } from '../../coderulemetadata/extension/parammapping';\r\nimport { ExpressHandler } from '../../coderulemetadata/datahandler/expresshandler';\r\nimport { EventBusService } from '../../coderuleservice/eventBusService';\r\nimport { HandlerType } from '../../coderulemetadata/datahandler/handlertype';\r\nimport { CacheService } from '@farris/ide-devkit/services';\r\nimport { GSPBusinessEntity } from '@gsp-bef/gsp-be-metadata';\r\n\r\n@Component({\r\n    selector: 'app-dmbasecoderule',\r\n    templateUrl: './dmbase.component.html',\r\n    styleUrls: ['./dmbase.component.css']\r\n})\r\n\r\nexport class DMBaseCodeRuleComponent implements OnInit,OnChanges {\r\n    /**\r\n     * 编号规则元数据\r\n    */\r\n    @Input() codeRuleMetadata: CodeRuleMetadata;\r\n\r\n    /**\r\n     * 元数据抽象类\r\n     */\r\n    @Input() metadataDto: MetadataDto;\r\n\r\n    /**\r\n     * 动态组件模板\r\n     */\r\n    private componentRef: ComponentRef<any>;\r\n\r\n    /**\r\n     * 段列表数据源,绑定Kendo UI Grid\r\n     */\r\n    brokenTypeList: Array<Item> =brokenTypes;\r\n\r\n    /**\r\n     * 模型类型列表\r\n     */\r\n    modelTypeList: Array<string> = ['ViewModel',\"BusinessEntity\"];\r\n\r\n    status: Array<boolean> = [true, false];\r\n\r\n    isBrokenUse:boolean=false;\r\n\r\n    /**be实体 */\r\n    beEntity:GSPBusinessEntity;\r\n\r\n    /**\r\n     * 已选择的段类型\r\n     */\r\n    selectedBrokenType: string;\r\n    newBrokenCode:string;\r\n    newBrokenName:string;\r\n    selectedModel: string;\r\n    dmExtensionInfo: DMExtensionInfo;\r\n    dMBaseCodeRule: DMBaseCodeRule;\r\n    brokenList:Array<BrokenObject>=[];\r\n    selectedBrokenList:Array<BrokenObject>=[];\r\n    selectedBrokenCodes: string[] = [];\r\n    selectedBroken:BrokenObject;\r\n    selectedSegement:ISegment;\r\n    selectAllBrokenState: SelectAllCheckboxState = 'unchecked';\r\n    codeRuleExample:string;\r\n    isRowParamSelected = (e: RowArgs) => this.selectedBrokenCodes.indexOf(e.dataItem.Code) >= 0;\r\n    @ViewChild(\"brokenType\", { read: ViewContainerRef }) container: ViewContainerRef;\r\n    @ViewChild('brokenSelection') brokenSelection: DialogComponent;\r\n    @ViewChild('modelSelect') modelSelect: DialogComponent;\r\n\r\n    constructor(private resolver: ComponentFactoryResolver,private modalService: BsModalService, private injector: Injector, \r\n        private codeRuleService: CodeRuleService,private codeRuleEventBus:EventBusService,private metadataService:GSPMetadataService,private cacheService:CacheService) { \r\n            this.codeRuleEventBus.eventbus.subscribe(_event => {\r\n                this.codeRuleEventBusHandler(_event);\r\n              })\r\n        }\r\n  \r\n\r\n    ngOnInit(): void {\r\n        if (!this.codeRuleMetadata.CodeRule) {\r\n            this.codeRuleMetadata.CodeRule = new DMBaseCodeRule();\r\n        }\r\n        this.dMBaseCodeRule = this.codeRuleMetadata.CodeRule as DMBaseCodeRule;\r\n        if (!this.dMBaseCodeRule.Segments) {\r\n            this.dMBaseCodeRule.Segments = new Array<ISegment>();\r\n        }\r\n        if (!(this.codeRuleMetadata.CodeRule as DMBaseCodeRule).ExtensionInfo) {\r\n            (this.codeRuleMetadata.CodeRule as DMBaseCodeRule).ExtensionInfo = new DMExtensionInfo();\r\n        }\r\n        if(this.dMBaseCodeRule.Segments.length>0){\r\n            this.initSegment();\r\n        }\r\n        this.dmExtensionInfo = (this.codeRuleMetadata.CodeRule as DMBaseCodeRule).ExtensionInfo;\r\n        this.isBrokenUse=this.dMBaseCodeRule.IsBrokenUse;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void{\r\n        \r\n    }\r\n\r\n    /**\r\n     * 初始化段信息\r\n     */\r\n    initSegment(){\r\n        this.dMBaseCodeRule.Segments.forEach(segment => {\r\n            let broken=new BrokenObject();\r\n            broken.Code=segment.SegmentCode;\r\n            let segmentTypeString =this.codeRuleService.getSegmentTypeToString(segment.getSegmentType());\r\n            broken.Type=this.codeRuleService.getSegmentTypeDesc(segmentTypeString);\r\n            this.brokenList.push(broken);\r\n        });\r\n        this.selectedBroken= this.brokenList[0];\r\n        this.selectedBrokenCodes=[];\r\n        this.selectedBrokenCodes.push(this.brokenList[0].Code);\r\n        this.selectedBrokenList=new Array<BrokenObject>();\r\n        this.selectedBrokenList.push(this.brokenList[0]);\r\n        this.createFocusedBrokenComponent();\r\n    }\r\n\r\n    codeRuleEventBusHandler(_event:any){\r\n        if (_event && _event.eventName === \"dmOutParamExpressEmit\") {\r\n            this.dMBaseCodeRule.ExtensionInfo=this.dMBaseCodeRule.ExtensionInfo==null?new DMExtensionInfo():this.dMBaseCodeRule.ExtensionInfo;\r\n            this.dMBaseCodeRule.ExtensionInfo.Mappings=this.dMBaseCodeRule.ExtensionInfo.Mappings==null?new Array<ParamMapping>():this.dMBaseCodeRule.ExtensionInfo.Mappings;\r\n            let tempIndex=this.dMBaseCodeRule.ExtensionInfo.Mappings.findIndex(mapping=>mapping.ParamCode==this.selectedBroken.Code);\r\n            let mapping=this.dMBaseCodeRule.ExtensionInfo.Mappings[tempIndex];\r\n            let expressHandler=new ExpressHandler();\r\n            expressHandler.Express=_event.outParamExpress;\r\n            if(!mapping.Handler){\r\n                mapping.Handler=new ExpressHandler();\r\n            }\r\n            mapping.Handler=expressHandler;\r\n            this.codeRuleService.replaceSpecifiedElementByCode(this.dMBaseCodeRule.ExtensionInfo.Mappings,mapping);\r\n          }\r\n    }\r\n\r\n    /**\r\n     * 根据左侧列表获取对应的段实例\r\n     * @param brokenCode \r\n     */\r\n    getFocusedSegment(brokenCode:string):ISegment{\r\n        let tempIndex=this.dMBaseCodeRule.Segments.findIndex(segment=>segment.SegmentCode==brokenCode);\r\n        if(tempIndex!=(-1)){\r\n            return this.dMBaseCodeRule.Segments[tempIndex];\r\n        }\r\n        else{\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建当前选中焦点行的对应Broken组件\r\n     */\r\n    createFocusedBrokenComponent(){\r\n        let segement=this.getFocusedSegment(this.selectedBroken.Code);\r\n        this.selectedSegement=segement;\r\n        let segmentType=segement.getSegmentType();\r\n        let segmentTypeString=this.codeRuleService.getSegmentTypeToString(segmentType);\r\n        this.createComponentByBrokenType(segmentTypeString,segement);\r\n    }\r\n   \r\n\r\n    /**\r\n     * 打开元数据模态框\r\n     */\r\n    openMetadataDialog() {\r\n        this.openModelSelectDialog();\r\n    }\r\n\r\n    /**\r\n     * 模型选择确定\r\n     */\r\n    modelSelectConfirm() {\r\n        if (isNullOrUndefined(this.selectedModel) || isNullOrEmptyString(this.selectedModel)) {\r\n            alert('请选择模型类型。');\r\n            return;\r\n        }\r\n        this.modelSelect.close();\r\n        this.openMetadataSelect();\r\n    }\r\n\r\n    /**\r\n     * 打开模型选择模态框\r\n     */\r\n    openModelSelectDialog() {\r\n        this.modelSelect.title = '模型类型选择';\r\n        this.modelSelect.width = 400;\r\n        this.modelSelect.height = 160;\r\n        this.modelSelect.showMaxButton = false;\r\n        this.modelSelect.resizable = false;\r\n        this.modelSelect.show();\r\n    }\r\n\r\n    /**\r\n     * 动态创建元数据选择界面组件并打开\r\n     */\r\n    private openMetadataSelect() {\r\n        //debugger;\r\n        const compFactory = this.resolver.resolveComponentFactory(SelectMetadataComponent);\r\n        const compRef = compFactory.create(this.injector);\r\n        compRef.instance.metadataPath = this.metadataDto.relativePath;\r\n        compRef.instance.typeName = this.selectedModel==\"ViewModel\"?\"GSPViewModel\":\"GSPBusinessEntity\";\r\n    \r\n        compRef.instance.selectedMetadata.subscribe($event => {\r\n            //debugger;\r\n            let metadata4RefDto: Metadata4RefDto = $event;\r\n            if(this.selectedModel == \"ViewModel\"){\r\n                this.getViewModelInfo(metadata4RefDto);\r\n            }\r\n            else{\r\n                this.getBEInfo(metadata4RefDto);\r\n            }\r\n        });\r\n        const modalConfig = {\r\n            title: '元数据选择',\r\n            width: 882,\r\n            height: 573,\r\n            showButtons: false\r\n        };\r\n        const dialog = this.modalService.show(compRef, modalConfig);\r\n        compRef.instance.closeModalEmitter.subscribe($event => {\r\n            dialog.close();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获取VM的信息，VM内部的Code和Name可能与元数据Header中的不一致，目前先用Header中的Code和Name\r\n     * @param metadata4RefDto 元数据引用Dto\r\n     */\r\n    getViewModelInfo(metadata4RefDto: Metadata4RefDto) {\r\n        this.dmExtensionInfo.ModelId = metadata4RefDto.metadata.id;\r\n        this.dmExtensionInfo.ModelCode = metadata4RefDto.metadata.code;\r\n        this.dmExtensionInfo.ModelName = metadata4RefDto.metadata.name;\r\n        this.dmExtensionInfo.ModelPath = metadata4RefDto.metadata.relativePath;\r\n    }\r\n    /**\r\n     * 获取BE信息，使用Header中的Code和Name\r\n     * @param metadata4RefDto \r\n     */\r\n    getBEInfo(metadata4RefDto: Metadata4RefDto){\r\n        //debugger;\r\n        this.dmExtensionInfo.ModelId = metadata4RefDto.metadata.id;\r\n        this.dmExtensionInfo.ModelCode = metadata4RefDto.metadata.code;\r\n        this.dmExtensionInfo.ModelName = metadata4RefDto.metadata.name;\r\n        this.dmExtensionInfo.ModelPath = metadata4RefDto.metadata.relativePath;\r\n        let sessionId = this.cacheService.get('sessionId');\r\n        this.metadataService.GetRefMetadata(metadata4RefDto.metadata.relativePath,metadata4RefDto.metadata.id,sessionId).subscribe(data=>{\r\n            //debugger;\r\n            const beData =data as MetadataDto;\r\n            this.beEntity=JSON.parse(beData.content) as GSPBusinessEntity;\r\n        })\r\n    }\r\n\r\n\r\n    deleteModel(){\r\n        this.dMBaseCodeRule.ExtensionInfo=new DMExtensionInfo();\r\n        this.dMBaseCodeRule.ExtensionInfo.Mappings=new Array<ParamMapping>();\r\n        this.dmExtensionInfo=this.dMBaseCodeRule.ExtensionInfo;\r\n    }\r\n\r\n    /**\r\n     * 新增段\r\n     */\r\n    add() {\r\n        this.selectedBrokenType='Constant';\r\n        this.openBrokenSelectionDialog();\r\n    }\r\n\r\n    /**\r\n     * 删除段\r\n     */\r\n    delete(){\r\n        if (!this.selectedBrokenList || this.selectedBrokenList.length <= 0) {\r\n            alert(\"请选择需要删除的段。\");\r\n            return;\r\n        }\r\n        this.selectedBrokenList.forEach(broken => {\r\n            this.codeRuleService.deleteSpecifiedElementByCode(this.brokenList, broken);\r\n            let segement=this.getFocusedSegment(broken.Code);\r\n            this.codeRuleService.deleteSpecifiedElement(this.dMBaseCodeRule.Segments,segement);\r\n            if(segement.getSegmentType()==SegmentType.OutParam){\r\n                let tempIndex=this.dMBaseCodeRule.ExtensionInfo.Mappings.findIndex(mapping=>mapping.ParamCode==segement.SegmentCode);\r\n                this.codeRuleService.deleteSpecifiedElementByCode(this.dMBaseCodeRule.ExtensionInfo.Mappings,this.dMBaseCodeRule.ExtensionInfo.Mappings[tempIndex]);\r\n            }\r\n        });\r\n        this.resetFocused();\r\n        this.selectAllBrokenState = 'unchecked';\r\n        this.selectedBrokenCodes=[];\r\n        this.selectedBrokenList=[];\r\n    }\r\n\r\n    up(){\r\n        if(this.selectedBrokenCodes.length<=0){\r\n            alert('请选择上移的段。');\r\n            return;\r\n        }\r\n        if(isNullOrUndefined(this.selectedSegement.SegmentCode)||isNullOrUndefined(this.selectedSegement.SegmentCode)){\r\n            alert('请选择上移的段。');\r\n            return;\r\n        }\r\n        let tempIndex=this.brokenList.findIndex(broken=>broken.Code==this.selectedBroken.Code);\r\n        if(tempIndex==0){\r\n            alert('无法上移。');\r\n            return;\r\n        }\r\n        else{\r\n            let tempSegments=new Array<ISegment>();\r\n            for(let i=0;i<this.dMBaseCodeRule.Segments.length;i++){\r\n                if(i==tempIndex-1){\r\n                    tempSegments.push(this.dMBaseCodeRule.Segments[tempIndex]);\r\n                }\r\n                else if(i==tempIndex){\r\n                    tempSegments.push(this.dMBaseCodeRule.Segments[tempIndex-1]);\r\n                }\r\n                else{\r\n                    tempSegments.push(this.dMBaseCodeRule.Segments[i]);\r\n                }\r\n            }\r\n            this.brokenList=new Array<BrokenObject>();\r\n            tempSegments.forEach(temp => {\r\n                let broken=new BrokenObject;\r\n                broken.Code=temp.SegmentCode;\r\n                let segmentTypeString =this.codeRuleService.getSegmentTypeToString(temp.getSegmentType());\r\n                broken.Type=this.codeRuleService.getSegmentTypeDesc(segmentTypeString);\r\n                this.brokenList.push(broken);\r\n            });\r\n            this.dMBaseCodeRule.Segments=new Array<ISegment>();\r\n            this.dMBaseCodeRule.Segments=tempSegments;\r\n        }\r\n    }\r\n\r\n    down(){\r\n        if(this.selectedBrokenCodes.length<=0){\r\n            alert('请选择下移的段。');\r\n            return;\r\n        }\r\n        if(isNullOrUndefined(this.selectedSegement.SegmentCode)||isNullOrUndefined(this.selectedSegement.SegmentCode)){\r\n            alert('请选择下移的段。');\r\n            return;\r\n        }\r\n        let tempIndex=this.brokenList.findIndex(broken=>broken.Code==this.selectedBroken.Code);\r\n        if(tempIndex==this.brokenList.length-1){\r\n            alert('无法下移。');\r\n            return;\r\n        }\r\n        else{\r\n            let tempSegments=new Array<ISegment>();\r\n            for(let i=0;i<this.dMBaseCodeRule.Segments.length;i++){\r\n                if(i==tempIndex){\r\n                    tempSegments.push(this.dMBaseCodeRule.Segments[tempIndex+1]);\r\n                }\r\n                else if(i==tempIndex+1){\r\n                    tempSegments.push(this.dMBaseCodeRule.Segments[tempIndex]);\r\n                }\r\n                else{\r\n                    tempSegments.push(this.dMBaseCodeRule.Segments[i]);\r\n                }\r\n            }\r\n            this.brokenList=new Array<BrokenObject>();\r\n            tempSegments.forEach(temp => {\r\n                let broken=new BrokenObject;\r\n                broken.Code=temp.SegmentCode;\r\n                let segmentTypeString =this.codeRuleService.getSegmentTypeToString(temp.getSegmentType());\r\n                broken.Type=this.codeRuleService.getSegmentTypeDesc(segmentTypeString);\r\n                this.brokenList.push(broken);\r\n            });\r\n            this.dMBaseCodeRule.Segments=new Array<ISegment>();\r\n            this.dMBaseCodeRule.Segments=tempSegments;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 重置焦点\r\n     */\r\n    resetFocused(){\r\n        if(this.brokenList.length>0){\r\n            this.selectedBroken=this.brokenList[0];\r\n            this.createFocusedBrokenComponent();\r\n        }\r\n        else{\r\n            if(!isNullOrUndefined(this.componentRef)){\r\n                this.componentRef.destroy();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 打开段选择模态框\r\n     */\r\n    openBrokenSelectionDialog() {\r\n        this.brokenSelection.title = '段类型选择';\r\n        this.brokenSelection.width = 400;\r\n        this.brokenSelection.height = 230;\r\n        this.brokenSelection.showMaxButton = false;\r\n        this.brokenSelection.resizable = false;\r\n        this.brokenSelection.show();\r\n    }\r\n\r\n    /**\r\n     * 增加段确定\r\n     */\r\n    brokenSelectionConfirm() {\r\n        if (isNullOrUndefined(this.selectedBrokenType) || isNullOrEmptyString(this.selectedBrokenType)) {\r\n            alert('请选择段类型。');\r\n            return;\r\n        }\r\n        this.brokenSelection.close();\r\n        let segment =this.getSegmentByBrokenType(this.selectedBrokenType,this.newBrokenCode,this.newBrokenName);\r\n        this.createComponentByBrokenType(this.selectedBrokenType,segment);\r\n        this.dMBaseCodeRule.Segments.push(segment);\r\n        let broken=new BrokenObject();\r\n        broken.Code=segment.SegmentCode;\r\n        broken.Type=this.codeRuleService.getSegmentTypeDesc(this.selectedBrokenType);\r\n        this.brokenList.push(broken);\r\n        if(this.selectedBrokenType=='OutParam'){\r\n            this.dMBaseCodeRule.ExtensionInfo=this.dMBaseCodeRule.ExtensionInfo==null?new DMExtensionInfo():this.dMBaseCodeRule.ExtensionInfo;\r\n            this.dMBaseCodeRule.ExtensionInfo.Mappings=this.dMBaseCodeRule.ExtensionInfo.Mappings==null?new Array<ParamMapping>():this.dMBaseCodeRule.ExtensionInfo.Mappings;\r\n            let mapping=new ParamMapping();\r\n            mapping.ParamCode=(segment as OutParamSegment).SegmentCode;\r\n            let expressHandler=new ExpressHandler();\r\n            expressHandler.Express=\"\";\r\n            mapping.Handler=expressHandler;\r\n            this.dMBaseCodeRule.ExtensionInfo.Mappings.push(mapping);\r\n        }\r\n        //新增后焦点定位到新增的行\r\n        this.resetSelectedBroken(this.brokenList[this.brokenList.length-1])\r\n        //重置新增模态框的选择信息\r\n        this.resetAddBrokenInfo();\r\n    }\r\n\r\n    resetAddBrokenInfo(){\r\n        this.selectedBrokenType='';\r\n        this.newBrokenCode='';\r\n        this.newBrokenName='';\r\n    }\r\n\r\n    /**\r\n     * 重置选择的段，目的是显示Kendo UI的选中焦点\r\n     * @param broken \r\n     */\r\n    resetSelectedBroken(broken:BrokenObject){\r\n        this.selectedBrokenCodes=[];\r\n        this.selectedBrokenCodes.push(broken.Code);\r\n        this.selectedBroken=broken;\r\n        this.selectedBrokenList=[];\r\n        this.selectedBrokenList.push(this.selectedBroken);\r\n    }\r\n\r\n    /**\r\n     * 根据段类型（字符串）获取对应的段实体类\r\n     * @param brokenType \r\n     */\r\n    private getSegmentByBrokenType(brokenType: string,brokenCode:string,brokenName:string):ISegment {\r\n        switch (brokenType) {\r\n            case 'Constant':\r\n                let constantSegment: ConstantSegment = new ConstantSegment();\r\n                constantSegment.SegmentCode = brokenCode;\r\n                constantSegment.SegmentName=brokenName;\r\n                return constantSegment;\r\n            case 'SysVariable':\r\n                let sysVariableSegment: SysVariableSegment = new SysVariableSegment();\r\n                sysVariableSegment.SegmentCode =brokenCode;\r\n                sysVariableSegment.SegmentName=brokenName;\r\n                return sysVariableSegment;\r\n            case 'OutParam':\r\n                let outParamSegment: OutParamSegment = new OutParamSegment();\r\n                outParamSegment.SegmentCode = brokenCode;\r\n                outParamSegment.SegmentName=brokenName;\r\n                return outParamSegment;\r\n            case 'Sequence':\r\n                let sequenceSegment: SequenceSegment = new SequenceSegment();\r\n                sequenceSegment.SegmentCode = brokenCode;\r\n                sequenceSegment.SegmentName = brokenName;\r\n                return sequenceSegment;\r\n            default:\r\n                return null;;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据段类型（字符串）动态创建对应段类型的组件\r\n     */\r\n    private createComponentByBrokenType(brokenType: string,segment:ISegment) {\r\n        switch (brokenType) {\r\n            case 'Constant':\r\n                this.createComponent(segment, ConstantSegmentComponent);\r\n                break;\r\n            case 'SysVariable':\r\n                this.createComponent(segment, SysVariableSegmentComponent);\r\n                break;\r\n            case 'OutParam':\r\n                this.createComponent(segment, OutParamSegmentComponent);\r\n                this.dMBaseCodeRule.ExtensionInfo=this.dMBaseCodeRule.ExtensionInfo==null?new DMExtensionInfo():this.dMBaseCodeRule.ExtensionInfo;\r\n                this.dMBaseCodeRule.ExtensionInfo.Mappings=this.dMBaseCodeRule.ExtensionInfo.Mappings==null?new Array<ParamMapping>():this.dMBaseCodeRule.ExtensionInfo.Mappings;\r\n                if(this.dMBaseCodeRule.ExtensionInfo.Mappings.length>0){\r\n                    let tempIndex=this.dMBaseCodeRule.ExtensionInfo.Mappings.findIndex(mapping=>mapping.ParamCode==segment.SegmentCode);\r\n                    let temp=this.dMBaseCodeRule.ExtensionInfo.Mappings[tempIndex].Handler.getHandlerType();\r\n                    if(this.dMBaseCodeRule.ExtensionInfo.Mappings[tempIndex].Handler.getHandlerType()==HandlerType.Express){\r\n                        this.componentRef.instance.outParamExpress=(this.dMBaseCodeRule.ExtensionInfo.Mappings[tempIndex].Handler as ExpressHandler).Express;\r\n                    }\r\n                }\r\n                else{\r\n                    this.componentRef.instance.outParamExpress='';\r\n                }\r\n                break;\r\n            case 'Sequence':\r\n                this.createComponent(segment, SequenceSegmentComponent);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 动态创建段组件\r\n     * @param segment 段类型\r\n     * @param componentTemplate 组件模板\r\n     */\r\n    private createComponent(segment: ISegment, componentTemplate: any) {\r\n        this.container.clear();\r\n        const factory: any = this.resolver.resolveComponentFactory(componentTemplate);\r\n        this.componentRef = this.container.createComponent(factory);\r\n        this.componentRef.instance.segment = segment;\r\n    }\r\n\r\n    /**\r\n    * 组件销毁\r\n    */\r\n    ngOnDestroy() {\r\n        if(!isNullOrUndefined(this.componentRef)){\r\n            this.componentRef.destroy();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Kendo UI Grid行改变事件\r\n     * @param e \r\n     */\r\n    onSelectedBrokenChange(e) {\r\n        this.selectedBrokenList = [];\r\n        let len = this.selectedBrokenCodes.length;\r\n        if (len > 0) {\r\n            this.selectedBrokenCodes.forEach(code => {\r\n                if (this.brokenList && this.brokenList.length > 0) {\r\n                    let tempIndex = this.brokenList.findIndex(value => value.Code == code);\r\n                    if (tempIndex != (-1)) {\r\n                        this.selectedBrokenList.push(this.brokenList[tempIndex]);\r\n                    }\r\n                }\r\n            });\r\n            //单选情况加添加该语句\r\n            this.selectedBroken=this.selectedBrokenList[0];\r\n            this.createFocusedBrokenComponent();\r\n        }\r\n        if (len === 0) {\r\n            this.selectAllBrokenState = 'unchecked';\r\n        } else if (len > 0 && len < this.brokenList.length) {\r\n            this.selectAllBrokenState = 'indeterminate';\r\n        } else {\r\n            this.selectAllBrokenState = 'checked';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Kendo UI 列头CheckBox全选事件\r\n     * @param checkedState \r\n     */\r\n    onSelectAllBrokenChange(checkedState: SelectAllCheckboxState) {\r\n        if (checkedState === 'checked') {\r\n            this.selectedBrokenCodes = this.brokenList.map((item) => item.Code);\r\n            this.selectAllBrokenState = 'checked';\r\n        } else {\r\n            this.selectedBrokenCodes = [];\r\n            this.selectAllBrokenState = 'unchecked';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * cell点击事件处理\r\n     * @param param0 \r\n     */\r\n    cellClickHandler({ dataItem }) {\r\n        this.selectedBroken=dataItem;\r\n        this.createFocusedBrokenComponent();\r\n        this.resetRowSelectionFocus(dataItem);\r\n    }\r\n\r\n    /**\r\n     * 重置行选择焦点，Kendo UI Grid的行选择\r\n     * @param dataTtem \r\n     */\r\n    resetRowSelectionFocus(dataTtem: BrokenObject) {\r\n        this.selectedBrokenCodes = [];\r\n        this.selectedBrokenCodes.push(dataTtem.Code);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/dmbasecomponent/dmbase.component.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host {\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-direction: column;\\r\\n            flex-direction: column;\\r\\n    -webkit-box-flex: 1;\\r\\n        -ms-flex: 1;\\r\\n            flex: 1;\\r\\n}\\r\\n\\r\\n#bemain .k-content {\\r\\n    padding: 0 !important;\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-direction: column;\\r\\n            flex-direction: column;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/dmdynamiccomponent/dmdynamic.component.css\n// module id = ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/dmdynamiccomponent/dmdynamic.component.css\n// module chunks = coderulepackage.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/dmdynamiccomponent/dmdynamic.component.html\n// module id = ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/dmdynamiccomponent/dmdynamic.component.html\n// module chunks = coderulepackage.module","import { Component, Input, OnInit } from '@angular/core';\r\nimport { CodeRuleMetadata } from '../../coderulemetadata/coderulemetadata';\r\nimport { GSPMetadataService } from '../../../../../../../reference/metadata/metadata.ref';\r\n\r\n@Component({\r\n    selector: 'app-dmdynamiccoderule',\r\n    templateUrl: './dmdynamic.component.html',\r\n    styleUrls: ['./dmdynamic.component.css']\r\n})\r\n\r\nexport class DMDynamicCodeRuleComponent implements OnInit {\r\n    /**\r\n     * 编号规则元数据\r\n    */\r\n    @Input() codeRuleMetadata: CodeRuleMetadata;\r\n\r\n    constructor(private metadataService: GSPMetadataService) { }\r\n\r\n    ngOnInit(): void {\r\n        \r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/dmdynamiccomponent/dmdynamic.component.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host {\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-direction: column;\\r\\n            flex-direction: column;\\r\\n    -webkit-box-flex: 1;\\r\\n        -ms-flex: 1;\\r\\n            flex: 1;\\r\\n}\\r\\n\\r\\n#bemain .k-content {\\r\\n    padding: 0 !important;\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-direction: column;\\r\\n            flex-direction: column;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/dynamiccomponent/dynamic.component.css\n// module id = ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/dynamiccomponent/dynamic.component.css\n// module chunks = coderulepackage.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/dynamiccomponent/dynamic.component.html\n// module id = ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/dynamiccomponent/dynamic.component.html\n// module chunks = coderulepackage.module","import { Component, Input, OnInit } from '@angular/core';\r\nimport { CodeRuleMetadata } from '../../coderulemetadata/coderulemetadata';\r\nimport { GSPMetadataService } from '../../../../../../../reference/metadata/metadata.ref';\r\n\r\n@Component({\r\n    selector: 'app-dynamiccoderule',\r\n    templateUrl: './dynamic.component.html',\r\n    styleUrls: ['./dynamic.component.css']\r\n})\r\n\r\nexport class DynamicCodeRuleComponent implements OnInit {\r\n    /**\r\n     * 编号规则元数据\r\n    */\r\n    @Input() codeRuleMetadata: CodeRuleMetadata;\r\n\r\n    constructor(private metadataService: GSPMetadataService) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulecomponent/dynamiccomponent/dynamic.component.ts","import { IDataConvert } from \"../idataconvert\";\r\nimport { isNullOrUndefined } from \"util\";\r\n\r\nexport class AbstractionCodeRule implements IDataConvert {\r\n    \r\n    Id: string;\r\n    Code: string;\r\n    Name: string;\r\n    Description: string;\r\n\r\n    init(obj: object) {\r\n        if (!isNullOrUndefined(obj)) {\r\n            this.Id = obj[\"Id\"] == null ? null : obj[\"Id\"];\r\n            this.Code = obj[\"Code\"] == null ? null : obj[\"Code\"];\r\n            this.Name = obj[\"Name\"] == null ? null : obj[\"Name\"];\r\n            this.Description = obj[\"Description\"] == null ? null : obj[\"Description\"];\r\n        }\r\n    }\r\n\r\n    convertToJObject(): object {\r\n        let obj=new Object();\r\n        obj[\"Id\"]=this.Id;\r\n        obj[\"Code\"]=this.Code;\r\n        obj[\"Name\"]=this.Name;\r\n        obj[\"Description\"]=this.Description;\r\n        return obj;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/abstractioncoderule.ts","import { AbstractionCodeRule } from \"./abstractioncoderule\";\r\nimport { ISegment } from \"./segment/isegment\";\r\nimport { SegmentType } from \"./segment/segmenttype\";\r\nimport { SegmentFactory } from \"./segment/segmentfactory\";\r\nimport { isNullOrUndefined } from \"util\";\r\n\r\nexport class BaseCodeRule extends AbstractionCodeRule {\r\n\r\n    TYPE: string = \"Type\";\r\n    CONTENT: string = \"Content\";\r\n    Segments: Array<ISegment>=new Array<ISegment>();;\r\n    IsBrokenUse: boolean;\r\n    \r\n    init(obj: object) {\r\n        if(!isNullOrUndefined(obj)){\r\n            super.init(obj);\r\n            if (!isNullOrUndefined(obj[\"IsBrokenUse\"])) {\r\n                this.IsBrokenUse = obj[\"IsBrokenUse\"] as boolean;\r\n            }\r\n            if(!isNullOrUndefined(obj[\"Segments\"])){\r\n                obj[\"Segments\"].forEach(segmentObj => {\r\n                    let segmentType:SegmentType=segmentObj[this.TYPE] as number;\r\n                    let segment:ISegment=SegmentFactory.getEmptySegment(segmentType);\r\n                    let contentObj:object=segmentObj[this.CONTENT];\r\n                    segment.init(contentObj);\r\n                    this.Segments.push(segment);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    convertToJObject():Object{\r\n        //debugger;\r\n        let obj=super.convertToJObject();\r\n        obj[\"IsBrokenUse\"]=this.IsBrokenUse;\r\n        let segmentArray=new Array<Object>();\r\n        if(this.Segments.length>0){\r\n            this.Segments.forEach(segment => {\r\n                let segmentObj=new Object();\r\n                segmentObj[this.TYPE]=segment.getSegmentType() as number;\r\n                segmentObj[this.CONTENT]=segment.convertToJObject();\r\n                segmentArray.push(segmentObj);\r\n            });\r\n        }\r\n        obj[\"Segments\"]=segmentArray;\r\n        return obj;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/basecoderule.ts","import { IDataType } from \"./idatatype\";\r\nimport { DataTypeEnum } from \"./datatypeenum\";\r\nimport { isNullOrUndefined } from \"util\";\r\n\r\nexport class BasicType implements IDataType{\r\n   \r\n    ParamType:string;\r\n\r\n    getDescription(): string {\r\n        return this.ParamType;\r\n    }\r\n\r\n    getDataType(): DataTypeEnum {\r\n        return DataTypeEnum.BasicType;\r\n    }\r\n    \r\n    init(obj: object) {\r\n        if(!isNullOrUndefined(obj)){\r\n            this.ParamType=obj[\"ParamType\"]==null?null:obj[\"ParamType\"];\r\n        }\r\n    }\r\n\r\n    convertToJObject(): object {\r\n        let obj=new Object();\r\n        obj[\"ParamType\"]=this.ParamType;\r\n        return obj;\r\n    }\r\n}   \n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/dynamic/datatype/basictype.ts","import { IDataType } from \"./idatatype\";\r\nimport { DataTypeEnum } from \"./datatypeenum\";\r\nimport { isNullOrUndefined } from \"util\";\r\n\r\nexport class ComplexType implements IDataType{\r\n   \r\n    \r\n    ModelId:string;\r\n    ModelName:string;\r\n\r\n    getDescription(): string {\r\n        return this.ModelName;\r\n    }\r\n\r\n    getDataType(): DataTypeEnum {\r\n        return DataTypeEnum.ComplexType;\r\n    }\r\n\r\n    init(obj: object) {\r\n        if(!isNullOrUndefined(obj)){\r\n            this.ModelId=obj[\"ModelId\"]==null?null:obj[\"ModelId\"];\r\n            this.ModelId=obj[\"ModelName\"]==null?null:obj[\"ModelName\"];\r\n        }\r\n    }\r\n\r\n    convertToJObject(): object {\r\n        let obj=new Object();\r\n        obj[\"ModelId\"]=this.ModelId;\r\n        obj[\"ModelName\"]=this.ModelName;\r\n        return obj;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/dynamic/datatype/complextype.ts","export enum DataTypeEnum{\r\n    BasicType = 0,\r\n    ComplexType = 1\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/dynamic/datatype/datatypeenum.ts","import { DataTypeEnum } from \"./datatypeenum\";\r\nimport { IDataType } from \"./idatatype\";\r\nimport { BasicType } from \"./basictype\";\r\nimport { ComplexType } from \"./complextype\";\r\n\r\nexport class DataTypeFactory{\r\n    public static getEmptyDataType(dtEnum:DataTypeEnum):IDataType{\r\n        let dataType:IDataType;\r\n        if (dtEnum == DataTypeEnum.BasicType)\r\n        {\r\n            dataType = new BasicType();\r\n        }\r\n        else if (dtEnum == DataTypeEnum.ComplexType)\r\n        {\r\n            dataType = new ComplexType();\r\n        }\r\n        return dataType;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/dynamic/datatype/datatypefactory.ts","import { AbstractionCodeRule } from \"../abstractioncoderule\";\r\nimport { InputParameter } from \"./inputparameter\";\r\nimport { Selector } from \"./selector\";\r\nimport { isNullOrUndefined } from \"util\";\r\n\r\nexport class DynamicCodeRule extends AbstractionCodeRule{\r\n    Params:Array<InputParameter>;\r\n    Selectors:Array<Selector>;\r\n    init(obj:object){\r\n        super.init(obj);\r\n        this.Params=new Array<InputParameter>();\r\n        if(!isNullOrUndefined(obj[\"Params\"])){\r\n            obj[\"Params\"].forEach(paramObj => {\r\n                let param=new InputParameter();\r\n                param.init(paramObj);\r\n                this.Params.push(param);\r\n            });\r\n        }\r\n        this.Selectors=new Array<Selector>();\r\n        if(!isNullOrUndefined(obj[\"Selectors\"])){\r\n            obj[\"Selectors\"].forEach(selectorObj => {\r\n                let selector=new Selector();\r\n                selector.init(selectorObj);\r\n                this.Selectors.push(selector);\r\n            });\r\n        }\r\n    }\r\n\r\n    convertToJObject():Object{\r\n        let obj=super.convertToJObject();\r\n        let paramObjArray=new Array<Object>();\r\n        if(this.Params!=null&&this.Params.length>0){\r\n            this.Params.forEach(param => {\r\n                let paramObj=new Object();\r\n                paramObjArray.push(param.convertToJObject());\r\n            });\r\n        }\r\n        obj[\"Params\"]=paramObjArray;\r\n        let selectorObjArray=new Array<Object>();\r\n        if(this.Selectors!=null&&this.Selectors.length>0){\r\n            this.Selectors.forEach(selector => {\r\n                selectorObjArray.push(selector)\r\n            });\r\n        }\r\n        obj[\"Selectors\"]=selectorObjArray;\r\n        return obj;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/dynamic/dynamiccoderule.ts","import { IDataConvert } from \"../../idataconvert\";\r\nimport { IDataType } from \"./datatype/idatatype\";\r\nimport { isNullOrUndefined } from \"util\";\r\nimport { DataTypeEnum } from \"./datatype/datatypeenum\";\r\nimport { DataTypeFactory } from \"./datatype/datatypefactory\";\r\n\r\nexport class InputParameter implements IDataConvert{\r\n    \r\n    Code:string;\r\n    Name:string;\r\n    DataType:IDataType;\r\n    \r\n    init(obj: object) {\r\n        if(!isNullOrUndefined(obj)){\r\n            this.Code=obj[\"Code\"]==null?null:obj[\"Code\"];\r\n            this.Name=obj[\"Name\"]==null?null:obj[\"Name\"];\r\n            let dataTypeObj=obj[\"DataType\"];\r\n            if(!isNullOrUndefined(dataTypeObj)){\r\n                let dataTypeInt:number=dataTypeObj[\"Type\"] as number;\r\n                let dtEnum:DataTypeEnum=dataTypeInt as DataTypeEnum;\r\n                this.DataType = DataTypeFactory.getEmptyDataType(dtEnum);\r\n                this.DataType.init(dataTypeObj[\"Content\"]);\r\n            }\r\n        }\r\n    }\r\n\r\n    convertToJObject(): object {\r\n        let obj=new Object();\r\n        obj[\"Code\"]=this.Code;\r\n        obj[\"Name\"]=this.Code;\r\n        let dataTypeObj=new Object();\r\n        let type:DataTypeEnum=this.DataType.getDataType();\r\n        dataTypeObj[\"Type\"]=type as number;\r\n        dataTypeObj[\"Content\"]=this.DataType.convertToJObject();\r\n        obj[\"DataType\"]=dataTypeObj;\r\n        return obj;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/dynamic/inputparameter.ts","import { IDataHandler } from \"../../datahandler/idatahandler\";\r\nimport { IDataConvert } from \"../../idataconvert\";\r\nimport { HandlerSerializer } from \"../../datahandler/handlerserializer\";\r\nimport { CodeRuleRefering } from \"./coderulerefering\";\r\n\r\nexport class Selector implements IDataConvert{\r\n    \r\n    Condition:IDataHandler;\r\n    Refering:CodeRuleRefering;\r\n\r\n    init(obj: object) {\r\n        this.Condition = HandlerSerializer.deSerializer(obj[\"Condition\"]);\r\n    }\r\n\r\n    convertToJObject(): object {\r\n        let obj=new Object();\r\n        let conditionJobj=HandlerSerializer.serializer(this.Condition);\r\n        obj[\"Condition\"]=conditionJobj;\r\n        obj[\"Refering\"]=this.Refering.convertToJObject();\r\n        return obj;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/dynamic/selector.ts","import { ISegment } from \"./isegment\";\r\nimport { SegmentType } from \"./segmenttype\";\r\nimport { isNullOrUndefined } from \"util\";\r\n\r\nexport class ConstantSegment implements ISegment{\r\n    SegmentCode:string;\r\n    SegmentName: string;\r\n    Value:string;\r\n    IsUseShow:boolean;\r\n    IsDimension:boolean;\r\n\r\n    getSegmentType(): SegmentType {\r\n        return SegmentType.Constant;\r\n    }\r\n\r\n    init(obj: object) {\r\n        if(!isNullOrUndefined(obj)){\r\n            this.SegmentCode=obj[\"SegmentCode\"]==null?null:obj[\"SegmentCode\"];\r\n            this.SegmentName=obj[\"SegmentName\"]==null?null:obj[\"SegmentName\"];\r\n            this.Value=obj[\"Value\"]==null?null:obj[\"Value\"];\r\n            if(!isNullOrUndefined(obj[\"IsUseShow\"])){\r\n                this.IsUseShow=obj[\"IsUseShow\"] as boolean;\r\n            }\r\n            if(!isNullOrUndefined(obj[\"IsDimension\"])){\r\n                this.IsDimension=obj[\"IsDimension\"] as boolean;\r\n            }\r\n        }\r\n    }\r\n\r\n    convertToJObject(): object {\r\n        //debugger;\r\n        let obj=new Object();\r\n        obj[\"SegmentCode\"]=this.SegmentCode;\r\n        obj[\"SegmentName\"]=this.SegmentName;\r\n        obj[\"Value\"]=this.Value;\r\n        obj[\"IsUseShow\"]=this.IsUseShow;\r\n        obj[\"IsDimension\"]=this.IsDimension;\r\n        return obj;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/segment/constantsegment.ts","import { ISegment } from \"./isegment\";\r\nimport { SegmentType } from \"./segmenttype\";\r\nimport { isNullOrUndefined } from \"util\";\r\n\r\nexport class OutParamSegment implements ISegment{\r\n    SegmentCode:string;\r\n    SegmentName: string;\r\n    IsUseShow:boolean;\r\n    IsDimension:boolean;\r\n    ParamCode:string;\r\n\r\n    getSegmentType(): SegmentType {\r\n        return SegmentType.OutParam;\r\n    }\r\n    \r\n    init(obj: object) {\r\n        if(!isNullOrUndefined(obj)){\r\n            this.SegmentCode=obj[\"SegmentCode\"]==null?null:obj[\"SegmentCode\"];\r\n            this.SegmentName=obj[\"SegmentName\"]==null?null:obj[\"SegmentName\"];\r\n            this.ParamCode=obj[\"ParamCode\"]==null?null:obj[\"ParamCode\"];\r\n            if(!isNullOrUndefined(obj[\"IsUseShow\"])){\r\n                this.IsUseShow=obj[\"IsUseShow\"] as boolean;\r\n            }\r\n            if(!isNullOrUndefined(obj[\"IsDimension\"])){\r\n                this.IsDimension=obj[\"IsDimension\"] as boolean;\r\n            }\r\n        }\r\n    }\r\n\r\n    convertToJObject(): object {\r\n        let obj=new Object();\r\n        obj[\"SegmentCode\"]=this.SegmentCode;\r\n        obj[\"IsUseShow\"]=this.IsUseShow;\r\n        obj[\"IsDimension\"]=this.IsDimension;\r\n        obj[\"SegmentName\"]=this.SegmentName;\r\n        obj[\"ParamCode\"]=this.ParamCode;\r\n        return obj;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/segment/outparamsegment.ts","import { ISegment } from \"./isegment\";\r\nimport { SegmentType } from \"./segmenttype\";\r\nimport { ConstantSegment } from \"./constantsegment\";\r\nimport { OutParamSegment } from \"./outparamsegment\";\r\nimport { SequenceSegment } from \"./sequencesegment\";\r\nimport { SysVariableSegment } from \"./sysvariablesegment\";\r\n\r\nexport class SegmentFactory {\r\n    public static getEmptySegment(segmentType: SegmentType): ISegment {\r\n        let segment: ISegment;\r\n        if (segmentType == SegmentType.Constant) {\r\n            segment = new ConstantSegment();\r\n        }\r\n        else if (segmentType == SegmentType.OutParam) {\r\n            segment = new OutParamSegment();\r\n        }\r\n        else if (segmentType == SegmentType.Sequence) {\r\n            segment = new SequenceSegment();\r\n        }\r\n        else {\r\n            segment = new SysVariableSegment();\r\n        }\r\n        return segment;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/segment/segmentfactory.ts","export enum SegmentType {\r\n    Constant = 0,\r\n    SysVariable = 1,\r\n    Sequence = 2,\r\n    OutParam = 3\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/segment/segmenttype.ts","import { ISegment } from \"./isegment\";\r\nimport { SegmentType } from \"./segmenttype\";\r\nimport { isNullOrUndefined } from \"util\";\r\n\r\nexport class SequenceSegment implements ISegment{\r\n    SegmentName: string;\r\n    SegmentCode:string;\r\n    IsUseShow:boolean;\r\n    IsDimension:boolean;\r\n    Start:Number;\r\n    Step:number;\r\n    Length:number;\r\n\r\n    getSegmentType(): SegmentType {\r\n        return SegmentType.Sequence;\r\n    }   \r\n\r\n    init(obj: object) {\r\n        if(!isNullOrUndefined(obj)){\r\n            if(!isNullOrUndefined(obj[\"IsUseShow\"])){\r\n                this.IsUseShow=obj[\"IsUseShow\"] as boolean;\r\n            }\r\n            if(!isNullOrUndefined(obj[\"IsDimension\"])){\r\n                this.IsDimension=obj[\"IsDimension\"] as boolean;\r\n            }\r\n            if(!isNullOrUndefined(obj[\"Start\"])){\r\n                this.Start=obj[\"Start\"] as number;\r\n            }\r\n            if(!isNullOrUndefined(obj[\"Step\"])){\r\n                this.Step=obj[\"Step\"] as number;\r\n            }\r\n            if(!isNullOrUndefined(obj[\"Length\"])){\r\n                this.Length=obj[\"Length\"] as number;\r\n            }\r\n            this.SegmentCode=obj[\"SegmentCode\"];\r\n            this.SegmentName=obj[\"SegmentName\"];\r\n        }\r\n    }\r\n\r\n    convertToJObject(): object {\r\n        let obj=new Object();\r\n        obj[\"SegmentCode\"]=this.SegmentCode;\r\n        obj[\"SegmentName\"]=this.SegmentName;\r\n        obj[\"IsUseShow\"]=this.IsUseShow;\r\n        obj[\"IsDimension\"]=this.IsDimension;\r\n        obj[\"Start\"]=this.Start;\r\n        obj[\"Step\"]=this.Step;\r\n        obj[\"Length\"]=this.Length;\r\n        return obj;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/segment/sequencesegment.ts","import { ISegment } from \"./isegment\";\r\nimport { SegmentType } from \"./segmenttype\";\r\nimport { isNullOrUndefined } from \"util\";\r\n\r\nexport class SysVariableSegment implements ISegment {\r\n    SegmentName: string;\r\n    SegmentCode:string;\r\n    IsUseShow: boolean;\r\n    IsDimension: boolean;\r\n    Name: string;\r\n    Express: string;\r\n\r\n    getSegmentType(): SegmentType {\r\n        return SegmentType.SysVariable;\r\n    }\r\n\r\n    init(obj: object) {\r\n        if (!isNullOrUndefined(obj)) {\r\n            if (!isNullOrUndefined(obj[\"IsUseShow\"])) {\r\n                this.IsUseShow = obj[\"IsUseShow\"] as boolean;\r\n            }\r\n            if (!isNullOrUndefined(obj[\"IsDimension\"] )) {\r\n                this.IsDimension = obj[\"IsDimension\"] as boolean;\r\n            }\r\n            this.SegmentName = obj[\"SegmentName\"] == null ? null : obj[\"SegmentName\"];\r\n            this.SegmentCode = obj[\"SegmentCode\"] == null ? null : obj[\"SegmentCode\"];\r\n            this.Express = obj[\"Express\"] == null ? null : obj[\"Express\"];\r\n        }\r\n    }\r\n\r\n    convertToJObject(): object {\r\n        let obj=new Object();\r\n        obj[\"IsUseShow\"]=this.IsUseShow;\r\n        obj[\"IsDimension\"]=this.IsDimension;\r\n        obj[\"SegmentName\"]=this.SegmentName;\r\n        obj[\"SegmentCode\"]=this.SegmentCode;\r\n        obj[\"Express\"]=this.Express;\r\n        return obj;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/base/segment/sysvariablesegment.ts","import { CodeRuleType } from \"./coderuletype\";\r\nimport { BaseCodeRule } from \"./base/basecoderule\";\r\nimport { AbstractionCodeRule } from \"./base/abstractioncoderule\";\r\nimport { DMBaseCodeRule } from \"./extension/dmbasecoderule\";\r\nimport { DMDynamicCodeRule } from \"./extension/dmdynamiccoderule\";\r\nimport { DynamicCodeRule } from \"./base/dynamic/dynamiccoderule\";\r\n\r\nexport class CodeRuleFactory {\r\n    public static getEmptyCodeRule(type: CodeRuleType): AbstractionCodeRule {\r\n        let codeRule: AbstractionCodeRule;\r\n        if (type == CodeRuleType.Base) {\r\n            codeRule = new BaseCodeRule();\r\n        }\r\n        else if (type == CodeRuleType.DMBase) {\r\n            codeRule = new DMBaseCodeRule();\r\n        }\r\n        else if (type == CodeRuleType.Dynamic) {\r\n            codeRule = new DynamicCodeRule();\r\n        }\r\n        else {\r\n            codeRule = new DMDynamicCodeRule();\r\n        }\r\n        return codeRule;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/coderulefactory.ts","import { IDataConvert } from \"./idataconvert\";\r\nimport { CodeRuleType } from \"./coderuletype\";\r\nimport { AbstractionCodeRule } from \"./base/abstractioncoderule\";\r\nimport { isNullOrUndefined } from \"util\";\r\nimport { CodeRuleFactory } from \"./coderulefactory\";\r\n\r\n/**\r\n * 编号规则元数据抽象类\r\n */\r\nexport  class CodeRuleMetadata implements IDataConvert {\r\n\r\n    Id: string;\r\n    Code: string;\r\n    Name: string;\r\n    Description: string;\r\n    RuleType: CodeRuleType;\r\n    CodeRule: AbstractionCodeRule;\r\n\r\n    /**\r\n     * 初始化\r\n     * @param obj 编号规则元数据对象\r\n     */\r\n    init(obj: Object) {\r\n        if (!isNullOrUndefined(obj)) {\r\n            this.Id = obj[\"Id\"] == null ? null : obj[\"Id\"];\r\n            this.Code = obj[\"Code\"] == null ? null : obj[\"Code\"];\r\n            this.Name = obj[\"Name\"] == null ? null : obj[\"Name\"];\r\n            this.Description = obj[\"Description\"] == null ? null : obj[\"Description\"];\r\n            this.RuleType = obj[\"RuleType\"] == null ? null : obj[\"RuleType\"] as number;\r\n            this.CodeRule=CodeRuleFactory.getEmptyCodeRule(this.RuleType);\r\n            this.CodeRule.init(obj[\"CodeRule\"]);\r\n        }\r\n    }\r\n\r\n    convertToJObject():Object{\r\n        let obj=new Object();\r\n        obj[\"Id\"]=this.Id;\r\n        obj[\"Code\"]=this.Code;\r\n        obj[\"Name\"]=this.Name;\r\n        obj[\"Description\"]=this.Description;\r\n        obj[\"RuleType\"]=this.RuleType;\r\n        obj[\"CodeRule\"]=this.CodeRule.convertToJObject();\r\n        return obj;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/coderulemetadata.ts","/**\r\n * 编号规则类型\r\n */\r\nexport enum  CodeRuleType{\r\n    Base = 0,\r\n    DMBase = 1,\r\n    Dynamic = 2,\r\n    DMDynamic = 3\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/coderuletype.ts","import { IDataHandler } from \"./idatahandler\";\r\nimport { HandlerType } from \"./handlertype\";\r\nimport { isNullOrUndefined } from \"util\";\r\n\r\nexport class ComponentHandler implements IDataHandler{\r\n\r\n    ComponentId:string;\r\n    ComponentCode:string;\r\n    ComponentName:string;\r\n    Path:string;\r\n\r\n    init(obj: object) {\r\n        if(!isNullOrUndefined(obj)){\r\n            this.ComponentId=obj[\"ComponentId\"]==null?null:obj[\"ComponentId\"];\r\n            this.ComponentCode=obj[\"ComponentCode\"]==null?null:obj[\"ComponentCode\"];\r\n            this.ComponentName=obj[\"ComponentName\"]==null?null:obj[\"ComponentName\"];\r\n            this.Path=obj[\"Path\"]==null?null:obj[\"Path\"];\r\n        }\r\n    }\r\n\r\n    getHandlerType(): HandlerType {\r\n        return HandlerType.Component;\r\n    }\r\n\r\n    convertToJObject(): object {\r\n        let obj=new Object();\r\n        obj[\"ComponentId\"]=this.ComponentId;\r\n        obj[\"ComponentCode\"]=this.ComponentCode;\r\n        obj[\"ComponentName\"]=this.ComponentName;\r\n        obj[\"Path\"]=this.Path;\r\n        return obj;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/datahandler/componenthandler.ts","import { HandlerType } from \"./handlertype\";\r\nimport { IDataHandler } from \"./idatahandler\";\r\nimport { ExpressHandler } from \"./expresshandler\";\r\nimport { ComponentHandler } from \"./componenthandler\";\r\n\r\nexport class DataHandlerFactory{\r\n    public static getEmptyHandler(handlerType:HandlerType){\r\n        //debugger;\r\n        let handler:IDataHandler;\r\n        if (handlerType == HandlerType.Express)\r\n            {\r\n                handler = new ExpressHandler();\r\n            }\r\n            else\r\n            {\r\n                handler = new ComponentHandler();\r\n            }\r\n            return handler;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/datahandler/datahandlerfactory.ts","import { IDataHandler } from \"./idatahandler\";\r\nimport { HandlerType } from \"./handlertype\";\r\nimport { isNullOrUndefined } from \"util\";\r\n\r\nexport class ExpressHandler implements IDataHandler{\r\n   \r\n    Express:string;\r\n\r\n    getHandlerType(): HandlerType {\r\n        //debugger;\r\n        return HandlerType.Express;\r\n    }\r\n    \r\n    init(obj: object) {\r\n        if(!isNullOrUndefined(obj)){\r\n            this.Express=obj[\"Express\"]==null?null:obj[\"Express\"];\r\n        }\r\n    }\r\n\r\n    convertToJObject(): object {\r\n        let obj=new Object();\r\n        obj[\"Express\"]=this.Express;\r\n        return obj;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/datahandler/expresshandler.ts","import { IDataHandler } from \"./idatahandler\";\r\nimport { isNullOrUndefined } from \"util\";\r\nimport { HandlerType } from \"./handlertype\";\r\nimport { DataHandlerFactory } from \"./datahandlerfactory\";\r\n\r\nexport class HandlerSerializer {\r\n    public static deSerializer(handlerObj: Object): IDataHandler {\r\n        if (handlerObj == null) {\r\n            return null;\r\n        }\r\n        //debugger;\r\n        let typeInt: number = handlerObj[\"Type\"];\r\n        let handlerType: HandlerType = typeInt as HandlerType;\r\n        let handler: IDataHandler = DataHandlerFactory.getEmptyHandler(handlerType);\r\n        let handlerContentObj = handlerObj[\"Content\"];\r\n        handler.init(handlerContentObj);\r\n        return handler;\r\n    }\r\n\r\n    public static serializer(handler: IDataHandler): Object {\r\n        let handlerJObj = new Object();\r\n        handlerJObj[\"Type\"] = handler.getHandlerType();\r\n        handlerJObj[\"Content\"] = handler.convertToJObject();\r\n        return handlerJObj;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/datahandler/handlerserializer.ts","export enum HandlerType{\r\n    Express=0,\r\n    Component=1\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/datahandler/handlertype.ts","import { BaseCodeRule } from \"../base/basecoderule\";\r\nimport { isNullOrUndefined } from \"util\";\r\nimport { DMExtensionInfo } from \"./dmextensioninfo\";\r\n\r\nexport class DMBaseCodeRule extends BaseCodeRule{\r\n    ExtensionInfo:DMExtensionInfo;\r\n    init(obj:Object){\r\n        if(!isNullOrUndefined(obj)){\r\n            super.init(obj);\r\n            let extensionObj= obj[\"ExtensionInfo\"];\r\n            if(!isNullOrUndefined(extensionObj)){\r\n                this.ExtensionInfo = new DMExtensionInfo();\r\n                this.ExtensionInfo.init(extensionObj);\r\n            }\r\n        }\r\n    }\r\n\r\n    convertToJObject():Object{\r\n        let obj=super.convertToJObject();\r\n        if(this.ExtensionInfo!=null){\r\n            obj[\"ExtensionInfo\"]=this.ExtensionInfo.convertToJObject();\r\n        }\r\n        return obj;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/extension/dmbasecoderule.ts","import { DMExtensionInfo } from \"./dmextensioninfo\";\r\nimport { DynamicCodeRule } from \"../base/dynamic/dynamiccoderule\";\r\nimport { isNullOrUndefined } from \"util\";\r\n\r\nexport class DMDynamicCodeRule extends DynamicCodeRule{\r\n    ExtensionInfo:DMExtensionInfo;\r\n    init(obj:object){\r\n        if(!isNullOrUndefined(obj)){\r\n            super.init(obj);\r\n            let extensionObj=obj[\"ExtensionInfo\"];\r\n            if (extensionObj != null)\r\n            {\r\n                this.ExtensionInfo = new DMExtensionInfo();\r\n                this.ExtensionInfo.init(extensionObj);\r\n            }\r\n        }\r\n    }\r\n\r\n    convertToJObject():Object{\r\n        let obj=super.convertToJObject();\r\n        if(this.ExtensionInfo!=null){\r\n            obj[\"ExtensionInfo\"]=this.ExtensionInfo;\r\n        }\r\n        return obj;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/extension/dmdynamiccoderule.ts","import { IDataConvert } from \"../idataconvert\";\r\nimport { isNullOrUndefined } from \"util\";\r\nimport { ParamMapping } from \"./parammapping\";\r\n\r\nexport class DMExtensionInfo implements IDataConvert {\r\n    \r\n    ModelId: string;\r\n    ModelCode: string;\r\n    ModelName: string;\r\n    ModelPath: string;\r\n    Mappings: Array<ParamMapping>;\r\n    \r\n    init(obj: object) {\r\n        if (!isNullOrUndefined(obj)) {\r\n            this.ModelId = obj[\"ModelId\"] == null ? null : obj[\"ModelId\"];\r\n            this.ModelCode = obj[\"ModelCode\"] == null ? null : obj[\"ModelCode\"];\r\n            this.ModelName = obj[\"ModelName\"] == null ? null : obj[\"ModelName\"];\r\n            this.ModelPath = obj[\"ModelPath\"] == null ? null : obj[\"ModelPath\"];\r\n            let mappingArray = new Array<ParamMapping>();\r\n            if (!isNullOrUndefined(obj[\"Mappings\"])) {\r\n                obj[\"Mappings\"].forEach(mappingObj => {\r\n                    let mapping = new ParamMapping();\r\n                    mapping.init(mappingObj);\r\n                    mappingArray.push(mapping);\r\n                });\r\n            }\r\n            this.Mappings=mappingArray;\r\n        }\r\n    }\r\n\r\n    convertToJObject(): object {\r\n        let obj=new Object();\r\n        obj[\"ModelId\"]=this.ModelId;\r\n        obj[\"ModelCode\"]=this.ModelCode;\r\n        obj[\"ModelName\"]=this.ModelName;\r\n        obj[\"ModelPath\"]=this.ModelPath;\r\n        let mappingObjArray=new Array<Object>();\r\n        if(this.Mappings!=null&&this.Mappings.length>0){\r\n            this.Mappings.forEach(mapping => {\r\n                mappingObjArray.push(mapping.convertToJObject());\r\n            });\r\n        }\r\n        obj[\"Mappings\"]=mappingObjArray;\r\n        return obj;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/extension/dmextensioninfo.ts","import { IDataConvert } from \"../idataconvert\";\r\nimport { IDataHandler } from \"../datahandler/idatahandler\";\r\nimport { isNullOrUndefined } from \"util\";\r\nimport { HandlerSerializer } from \"../datahandler/handlerserializer\";\r\n\r\nexport class ParamMapping implements IDataConvert{\r\n    \r\n    ParamCode:string;\r\n    Handler:IDataHandler;\r\n\r\n    init(obj: object) {\r\n        if(!isNullOrUndefined(obj)){\r\n            this.ParamCode=obj[\"ParamCode\"]==null?null:obj[\"ParamCode\"];\r\n            let handleObj=obj[\"Handler\"];\r\n            let handler:IDataHandler=HandlerSerializer.deSerializer(handleObj);\r\n            this.Handler = handler;\r\n        }\r\n    }\r\n\r\n    convertToJObject(): object {\r\n        let obj=new Object();\r\n        obj[\"ParamCode\"]=this.ParamCode;\r\n        let handlerJObj = HandlerSerializer.serializer(this.Handler);\r\n        obj[\"Handler\"]=handlerJObj;\r\n        return obj;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulemetadata/extension/parammapping.ts","import { Injectable } from '@angular/core';\r\nimport { SegmentType } from '../coderulemetadata/base/segment/segmenttype';\r\n\r\n@Injectable()\r\n\r\nexport class CodeRuleService {\r\n    \r\n    /**\r\n     * Guid生成Id\r\n     */\r\n    getGuid() {\r\n        return (this.s4() + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + this.s4() + this.s4());\r\n    }\r\n\r\n    /**\r\n     * 动态生成4位数\r\n     */\r\n    private s4() {\r\n        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    }\r\n\r\n    //删除指定元素\r\n    deleteSpecifiedElement(inputArray: Array<any>, element: any) {\r\n        let tempIndex = inputArray.findIndex(value => value == element);\r\n        if (tempIndex != (-1)) {\r\n            inputArray.splice(tempIndex, 1);\r\n        }\r\n    }\r\n\r\n    //获取选择项列表\r\n    getSelectedList(value: any, input: any, inputArray: Array<any>) {\r\n        if (value==true) {\r\n            inputArray.push(input);\r\n        }\r\n        else {\r\n            let tempIndex = inputArray.findIndex(value => value == input);\r\n            if (tempIndex != (-1)) {\r\n                inputArray.splice(tempIndex, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    //根据id替换指定元素\r\n    replaceSpecifiedElementById(inputArray: Array<any>, element: any) {\r\n        let tempIndex = inputArray.findIndex(value => value.id == element.id);\r\n        if (tempIndex != (-1)) {\r\n            inputArray.splice(tempIndex, 1, element);\r\n        }\r\n    }\r\n\r\n    replaceSpecifiedElementByCode(inputArray: Array<any>, element: any) {\r\n        let tempIndex = inputArray.findIndex(value => value.Code == element.Code);\r\n        if (tempIndex != (-1)) {\r\n            inputArray.splice(tempIndex, 1, element);\r\n        }\r\n    }\r\n\r\n\r\n    //根据Code删除指定元素\r\n    deleteSpecifiedElementByCode(inputArray: Array<any>, element: any) {\r\n        let tempIndex = inputArray.findIndex(value => value.Code == element.Code);\r\n        if (tempIndex != (-1)) {\r\n            inputArray.splice(tempIndex, 1);\r\n        }\r\n    }\r\n\r\n        /**\r\n     * 根据段类型获取段类型的字符串\r\n     * @param segmentType 段类型，枚举\r\n     */\r\n    getSegmentTypeToString(segmentType:SegmentType):string{\r\n        switch(segmentType){\r\n            case SegmentType.Constant:\r\n            return 'Constant';\r\n            case SegmentType.OutParam:\r\n            return 'OutParam';\r\n            case SegmentType.Sequence:\r\n            return 'Sequence';\r\n            case SegmentType.SysVariable:\r\n            return 'SysVariable';\r\n            default:\r\n            return null;\r\n        }\r\n    }\r\n\r\n     /**\r\n     * 获取段类型的描述信息\r\n     * @param segmentType 段类型，字符串\r\n     */\r\n    getSegmentTypeDesc(segmentType:string):string{\r\n        switch(segmentType){\r\n            case 'Constant':\r\n            return '常量';\r\n            case 'OutParam':\r\n            return '外部参数';\r\n            case 'Sequence':\r\n            return '顺序号';\r\n            case 'SysVariable':\r\n            return '系统变量';\r\n            default:\r\n            return null;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderuleservice/coderuleservice.ts","import {Component,Injectable,EventEmitter} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class EventBusService {\r\n    public eventbus: EventEmitter<any> = new EventEmitter<any>();\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderuleservice/eventBusService.ts","module.exports = \"<div style=\\\"height: 100%;\\\">\\r\\n    <form class=\\\"k-form-inline\\\" style=\\\"padding: 16px;\\\">\\r\\n        <span style=\\\"width: 5%;min-width: 75px;\\\">选择类型</span>\\r\\n        <kendo-dropdownlist [data]=\\\"codeRuleTypeList\\\" class=\\\"dropListWidth\\\" style=\\\"width: 83%;\\\" textField=\\\"text\\\" valueField=\\\"value\\\"\\r\\n            [valuePrimitive]=\\\"true\\\" [(ngModel)]=\\\"selectedCodeRuleType\\\" name=\\\"selectedCodeRuleType\\\">\\r\\n        </kendo-dropdownlist>\\r\\n    </form>\\r\\n    <!-- <div class=\\\"card\\\" style=\\\"background-color: #f6f6f6;padding: 16px;  margin-left: 16px;margin-right: 16px;height: 70%;\\\">\\r\\n        <div class=\\\"card-block\\\">\\r\\n            <ng-template>\\r\\n                <pre>{{getCodeRuleTypeDescription()}}</pre>\\r\\n            </ng-template>\\r\\n        </div>\\r\\n    </div> -->\\r\\n    <ng-template #btn>\\r\\n        <button (click)=\\\"cancel()\\\">取消</button>\\r\\n        <button (click)=\\\"commit()\\\">确定</button>\\r\\n    </ng-template>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulewizard/coderulewizard.component.html\n// module id = ./src/packages/coderuledesigner/views/coderuledesigner/coderulewizard/coderulewizard.component.html\n// module chunks = coderulepackage.module","import { Component, ViewChild, TemplateRef, EventEmitter } from '@angular/core';\r\nimport { Item } from '../commonobject/commonobject';\r\nimport { codeRuleTypes } from '../commonobject/const';\r\nimport { MetadataDto, GSPMetadataService } from '../../../../../../reference/metadata/metadata.ref';\r\nimport { isNullOrUndefined } from 'util';\r\nimport { CodeRuleMetadata } from '../coderulemetadata/coderulemetadata';\r\nimport { CodeRuleType } from '../coderulemetadata/coderuletype';\r\n\r\n\r\n@Component({\r\n    selector: 'app-coderulewizard',\r\n    templateUrl: './coderulewizard.component.html'\r\n})\r\n\r\nexport class CodeRuleWizardComponent {\r\n\r\n    /**\r\n    * 编号规则类型列表\r\n    */\r\n    private codeRuleTypeList: Array<Item> = codeRuleTypes;\r\n\r\n    /**\r\n    * 已选择的编号规则类型 \r\n    */\r\n    private selectedCodeRuleType: string;\r\n\r\n    /**\r\n    * 向导完成，新建元数据\r\n    */\r\n    createMetadataEvent: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    createMetadataSuccess: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    /**\r\n    * 关闭窗口事件\r\n    */\r\n    closeModal = new EventEmitter<any>();\r\n\r\n    /**\r\n    * 元数据加载\r\n    */\r\n    _metadataContnet: MetadataDto;\r\n\r\n    set metadataContent(metadataContent: any) {\r\n        this._metadataContnet = metadataContent;\r\n    }\r\n\r\n\r\n    @ViewChild('btn') btns: TemplateRef<any>;\r\n\r\n    constructor(private gspMetadataService: GSPMetadataService) {\r\n        this.createMetadataEvent = new EventEmitter<any>();\r\n    }\r\n\r\n    /**\r\n   * 确认\r\n   */\r\n    commit() {\r\n        if (isNullOrUndefined(this.selectedCodeRuleType)) {\r\n            alert('请选择编号规则类型。');\r\n            return;\r\n        }\r\n        else if (this.selectedCodeRuleType != 'Base'&&this.selectedCodeRuleType != 'DMBase') {\r\n            alert('暂未开发');\r\n            return;\r\n        }\r\n        this.closeWindow();\r\n        this.createCodeRule();\r\n    }\r\n\r\n    /**\r\n     * 创建编号规则元数据\r\n     */\r\n    createCodeRule() {\r\n        const metadatadto = this._metadataContnet;\r\n        this.gspMetadataService.InitializeMetadataEntity(metadatadto).subscribe(response => {\r\n            metadatadto.id = response.id;\r\n            let codeRuleMetadata = new CodeRuleMetadata;\r\n            let jsonObj = JSON.parse(response.content);\r\n            codeRuleMetadata.init(jsonObj);\r\n            codeRuleMetadata.RuleType = this.getCodeRuleType(this.selectedCodeRuleType);\r\n            metadatadto.content = JSON.stringify(codeRuleMetadata);\r\n            this.gspMetadataService.CreateMetadata(metadatadto).subscribe(saveResponse => {\r\n                this.createMetadataSuccess.emit({\r\n                    action: '1',\r\n                    node: {\r\n                      nodeID: metadatadto.fileName,\r\n                      nodeName: metadatadto.fileName,\r\n                      nodePath: metadatadto.relativePath,\r\n                      nodeType: 'file'\r\n                    }\r\n                  });\r\n                this.createMetadataEvent.emit(metadatadto);\r\n            })\r\n        })\r\n    }\r\n\r\n    getCodeRuleType(typeString: string): CodeRuleType {\r\n        switch (typeString) {\r\n            case 'Base':\r\n                return CodeRuleType.Base;\r\n            case 'DMBase':\r\n                return CodeRuleType.DMBase;\r\n            case 'Dynamic':\r\n                return CodeRuleType.Dynamic;\r\n            case 'DMDynamic':\r\n                return CodeRuleType.DMDynamic;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n   * 取消\r\n   */\r\n    cancel() {\r\n        this.closeWindow();\r\n    }\r\n\r\n    /**\r\n     * 关闭\r\n     */\r\n    closeWindow() {\r\n        this.closeModal.emit();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/coderulewizard/coderulewizard.component.ts","export class Item{\r\n    text:any;\r\n    value:any\r\n}\r\n\r\nexport class BrokenObject{\r\n    Code:string;\r\n    Type:string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/commonobject/commonobject.ts","import { Item } from \"./commonobject\";\r\n\r\n/**\r\n * 编号规则类型\r\n */\r\nexport const codeRuleTypes:Array<Item>=[\r\n    {text:'Base',value:'Base'},\r\n    {text:'DMBase',value:'DMBase'},\r\n    {text:'Dynamic',value:'Dynamic'},\r\n    {text:'DMDynamic',value:'DMDynamic'}\r\n]\r\n\r\nexport const brokenTypes:Array<Item>= [\r\n    {text:'常量',value:'Constant'}, \r\n    {text:'系统变量',value:'SysVariable'}, \r\n    {text:'外部参数',value:'OutParam'},\r\n     {text:'顺序号',value:'Sequence'}\r\n];\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/coderuledesigner/commonobject/const.ts","import { PackageView } from '@farris/ide-devkit';\r\nimport { ComponentFactoryResolver, Injector } from '@angular/core';\r\nimport { CodeRuleDesignerComponent } from './coderuledesigner/coderule.component';\r\nimport { CodeRuleDesignerModule } from './coderuledesigner/coderule.module';\r\nimport { CodeRuleWizardComponent } from './coderuledesigner/coderulewizard/coderulewizard.component';\r\nexport class CodeRuleDesignerPackageView extends PackageView {\r\n\r\n  constructor(serializedState: any,\r\n    private cfr: ComponentFactoryResolver,\r\n    private injector: Injector) {\r\n    super(serializedState);\r\n    const componentFactory = this.cfr.resolveComponentFactory(CodeRuleDesignerComponent);\r\n    const moduleRef = this.injector.get(CodeRuleDesignerModule) as CodeRuleDesignerModule;\r\n    console.log(moduleRef);\r\n    this.element = componentFactory.create(this.injector);\r\n  }\r\n}\r\n\r\nexport class CodeRuleWizardPackageView extends PackageView {\r\n\r\n  constructor(serializedState: any,\r\n    private cfr: ComponentFactoryResolver,\r\n    private injector: Injector) {\r\n    super(serializedState);\r\n    const componentFactory = this.cfr.resolveComponentFactory(CodeRuleWizardComponent);\r\n    const moduleRef = this.injector.get(CodeRuleDesignerModule) as CodeRuleDesignerModule;\r\n    console.log(moduleRef);\r\n    this.element = componentFactory.create(this.injector);\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/packages/coderuledesigner/views/index.ts"],"sourceRoot":"webpack:///"}