{"version":3,"sources":["./node_modules/@progress/kendo-angular-upload/dist/es/dropzone.directive.js","./node_modules/@progress/kendo-angular-upload/dist/es/file-info.js","./node_modules/@progress/kendo-angular-upload/dist/es/file-list-item-action-button.component.js","./node_modules/@progress/kendo-angular-upload/dist/es/file-list-item-base.js","./node_modules/@progress/kendo-angular-upload/dist/es/file-list-item.js","./node_modules/@progress/kendo-angular-upload/dist/es/file-list-multiple-items.component.js","./node_modules/@progress/kendo-angular-upload/dist/es/file-list-single-item.component.js","./node_modules/@progress/kendo-angular-upload/dist/es/file-list.component.js","./node_modules/@progress/kendo-angular-upload/dist/es/file-map.js","./node_modules/@progress/kendo-angular-upload/dist/es/file-select.directive.js","./node_modules/@progress/kendo-angular-upload/dist/es/index.js","./node_modules/@progress/kendo-angular-upload/dist/es/localization/custom-messages.component.js","./node_modules/@progress/kendo-angular-upload/dist/es/localization/localized-messages.directive.js","./node_modules/@progress/kendo-angular-upload/dist/es/localization/messages.js","./node_modules/@progress/kendo-angular-upload/dist/es/main.js","./node_modules/@progress/kendo-angular-upload/dist/es/navigation.service.js","./node_modules/@progress/kendo-angular-upload/dist/es/templates/file-template.directive.js","./node_modules/@progress/kendo-angular-upload/dist/es/templates/template-context.directive.js","./node_modules/@progress/kendo-angular-upload/dist/es/upload-action-buttons.component.js","./node_modules/@progress/kendo-angular-upload/dist/es/upload-events.js","./node_modules/@progress/kendo-angular-upload/dist/es/upload-status-total.component.js","./node_modules/@progress/kendo-angular-upload/dist/es/upload.component.js","./node_modules/@progress/kendo-angular-upload/dist/es/upload.module.js","./node_modules/@progress/kendo-angular-upload/dist/es/upload.service.js","./node_modules/@progress/kendo-angular-upload/dist/es/util.js","./node_modules/@progress/kendo-angular-upload/dist/es/validation-util.js","./src/packages/resource-metadata-designer/package.ts","./src/packages/resource-metadata-designer/rspackage.module.js","./src/packages/resource-metadata-designer/views/index.ts","./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/baseinfo/baseinfo.component.css","./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/baseinfo/baseinfo.component.html","./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/baseinfo/baseinfo.component.ts","./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/birgrid/birgrid.component.css","./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/birgrid/birgrid.component.html","./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/birgrid/birgrid.component.ts","./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/birgrid/bitresources.service.ts","./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/resourcemetadata.component.css","./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/resourcemetadata.component.html","./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/resourcemetadata.component.ts","./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/resourcemetadata.module.ts","./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/resourcemetadata/resourcemetadata.ts","./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/textgrid/textgrid.component.css","./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/textgrid/textgrid.component.html","./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/textgrid/textgrid.component.ts","./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/textgrid/textresources.service.ts"],"names":[],"mappings":";;;;;;;;;;;AAAqF;AAC7D;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6GAA6G,oCAAoC,EAAE;AACnJ,2GAA2G,mCAAmC,EAAE;AAChJ,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD;AACpD,SAAS,mEAAoB;AAC7B,SAAS,wEAAuB;AAChC,SAAS,+DAAgB;AACzB,SAAS,kEAAmB;AAC5B,MAAM;AACN;AACA,mBAAmB,6DAAc;AACjC,sBAAsB,6DAAc;AACpC,sBAAsB,6DAAc;AACpC,0BAA0B,6DAAc;AACxC,wCAAwC,0FAA2C;AACnF,uCAAuC,yFAA0C;AACjF,4BAA4B,iGAAkD;AAC9E,8BAA8B,gGAAiD;AAC/E;AACA;AACA,CAAC;AACO;;;;;;;;;ACvKR;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;;;;;;;;;;;;;;ACzBO;AAClB;AACI;AACM;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,wJAAwJ,UAAU;AAClK,iBAAiB,IAAI;AACrB;AACA;AACA,oEAAoE;AACpE,SAAS,wEAAuB;AAChC,SAAS,2FAA6B;AACtC,MAAM;AACN;AACA,kBAAkB,6DAAc;AAChC,mBAAmB,6DAAc;AACjC,sBAAsB,6DAAc;AACpC,sBAAsB,6DAAc;AACpC,yBAAyB,yFAA0C;AACnE,0BAA0B,0FAA2C;AACrE;AACA;AACA,CAAC;AACO;;;;;;;;;;;ACvGR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;;;;;;;;;;;;;;ACpC0D;AAC9C;AACQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,wDAAwD;AACxD,SAAS,mEAAoB;AAC7B,SAAS,gFAA2B;AACpC,MAAM;AACN;AACA,mBAAmB,6DAAc;AACjC,mBAAmB,6DAAc;AACjC,uBAAuB,4FAA6C;AACpE,0BAA0B,6FAA8C;AACxE,sBAAsB,6FAA8C;AACpE,wBAAwB,kGAAmD;AAC3E,0BAA0B,oGAAqD;AAC/E,2BAA2B,qGAAsD;AACjF,0BAA0B,oGAAqD;AAC/E,2BAA2B,qGAAsD;AACjF,qBAAqB,sFAAuC;AAC5D,oBAAoB,qFAAsC;AAC1D,qBAAqB,kGAAmD;AACxE;AACA;AACA,CAAC;AACO;;;;;;;;;;;;;;;;;AC1GR;AAC2B;AAC0B;AACjC;AACO;AACG;AACN;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,6KAAmD,aAAa;AAChE,+KAAqD,aAAa;AAClE,0LAAgE,aAAa;AAC7E,8LAAoE,aAAa;AACjF;AACA;AACA;AACA;AACA,kpBAAkpB,WAAW,uGAAuG,gBAAgB,UAAU,mCAAmC,uFAAuF,4BAA4B;AACp7B,iBAAiB,IAAI;AACrB;AACA;AACA,iEAAiE;AACjE,SAAS,2FAA6B;AACtC,SAAS,wEAAuB;AAChC,MAAM;AACN;AACA,sBAAsB,6DAAc;AACpC,mBAAmB,6DAAc;AACjC,mBAAmB,6DAAc;AACjC;AACA;AACA,CAAC;AACO;;;;;;;;;;;;;;;;;ACvER;AAC2B;AAC0B;AACjC;AACO;AACG;AACN;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS;AACT;AACA;AACA,6KAAmD,aAAa;AAChE,+KAAqD,aAAa;AAClE,0LAAgE,aAAa;AAC7E,8LAAoE,aAAa;AACjF;AACA;AACA;AACA;AACA,uiBAAuiB,aAAa,+DAA+D,kCAAkC,2OAA2O,0BAA0B,2LAA2L,aAAa,iDAAiD,oCAAoC;AACvrC,iBAAiB,IAAI;AACrB;AACA;AACA,8DAA8D;AAC9D,SAAS,2FAA6B;AACtC,SAAS,wEAAuB;AAChC,MAAM;AACN;AACA,sBAAsB,6DAAc;AACpC,kBAAkB,6DAAc;AAChC,mBAAmB,6DAAc;AACjC;AACA;AACA,CAAC;AACO;;;;;;;;;;;;;;ACvER;AAAA;AACyC;AACrB;AACY;AACE;AACV;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,s1BAAs1B,mJAAmJ;AACz+B,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD;AACpD,SAAS,wEAAuB;AAChC,SAAS,gFAA2B;AACpC,MAAM;AACN;AACA,mBAAmB,6DAAc;AACjC,sBAAsB,6DAAc;AACpC,sBAAsB,6DAAc;AACpC,0BAA0B,6DAAc;AACxC,2BAA2B,qJAAqD;AAChF;AACA;AACA,CAAC;AACO;;;;;;;;;;;AC/EY;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qBAAqB;AAC9D;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,4BAA4B;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,+DAA+D,4BAA4B;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;;;;;;;;;;;;;;;ACzI0D;AAC1C;AACI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD;AACtD,SAAS,wEAAuB;AAChC,SAAS,gFAA2B;AACpC,SAAS,mEAAoB;AAC7B,MAAM;AACN;AACA,mBAAmB,6DAAc;AACjC,iBAAiB,6DAAc;AAC/B,sBAAsB,6DAAc;AACpC,sBAAsB,6DAAc;AACpC,0BAA0B,6DAAc;AACxC,kBAAkB,yFAA0C;AAC5D,0BAA0B,iGAAkD;AAC5E,sBAAsB,6FAA8C;AACpE,2BAA2B,yFAA0C;AACrE,+BAA+B,6FAA8C;AAC7E,0BAA0B,wFAAyC;AACnE,+BAA+B,6FAA8C;AAC7E,2BAA2B,mGAAoD;AAC/E;AACA;AACA,CAAC;AACO;;;;;;;;;;;;;;;;;;;;;;;;;;ACnGR;AAAA;AACA;AACA;AACA;AACsC;AACL;AACU;AAClB;AACS;AACD;AACK;AACR;;;;;;;;;;;;;;ACX9B;AACgC;AACb;AACW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS;AACT;AACA;AACA;AACA,wHAAiE,gCAAgC,EAAE;AACnG;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,0DAA0D;AAC1D,SAAS,2FAA6B;AACtC,MAAM;AACN;AACA,CAAC;AACO;;;;;;;;;;;;;;ACvCR;AACgC;AACb;AACW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,wHAAiE,mCAAmC,EAAE;AACtG;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,6DAA6D;AAC7D,SAAS,2FAA6B;AACtC,MAAM;AACN;AACA,CAAC;AACO;;;;;;;;;;;;;AC/BR;AACgB;AACY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6DAAc;AAClC,gCAAgC,6DAAc;AAC9C,2BAA2B,6DAAc;AACzC,kCAAkC,6DAAc;AAChD,mCAAmC,6DAAc;AACjD,kCAAkC,6DAAc;AAChD,0BAA0B,6DAAc;AACxC,gCAAgC,6DAAc;AAC9C,gCAAgC,6DAAc;AAC9C,oBAAoB,6DAAc;AAClC,mBAAmB,6DAAc;AACjC,oBAAoB,6DAAc;AAClC,iCAAiC,6DAAc;AAC/C;AACA;AACA,CAAC;AACO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5Be;AACG;AACI;AACF;AACU;AACM;AACH;AACT;AACG;AACE;AACE;AACnB;AACQ;AACM;AACsF;;;;;;;;;;;;;ACdrF;AACX;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oBAAoB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,0CAA0C,4BAA4B,EAAE;AACxE,wCAAwC,6BAA6B,EAAE;AACvE,2CAA2C,6BAA6B,EAAE;AAC1E,+CAA+C,iCAAiC,EAAE;AAClF,uCAAuC,yBAAyB,EAAE;AAClE,yCAAyC,2BAA2B,EAAE;AACtE,iFAAiF,2BAA2B,EAAE;AAC9G,iFAAikEAAmB;AAC5B;AACA;AACA,oDAAoD;AACpD,SAAS,wEAAuB;AAChC,MAAM;AACN;AACA,CAAC;AACO;;;;;;;;;;;AClLyB;AACjC;AACA,4EAA4E,0BAA0B;AACtG;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,wDAAwD;AACxD,SAAS,oEAAqB;AAC9B,MAAM;AACN;AACA,CAAC;AACO;;;;;;;;;;;ACnBqC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,2DAA2D;AAC3D,SAAS,yEAA0B;AACnC,MAAM;AACN;AACA,6BAA6B,6DAAc;AAC3C;AACA;AACA,CAAC;AACO;;;;;;;;;;;;;;ACnC2C;AAC3B;AACM;AACF;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS;AACT;AACA,sNAAsN,+BAA+B,yNAAyN,gCAAgC;AAC9e,iBAAiB,IAAI;AACrB;AACA;AACA,+DAA+D;AAC/D,SAAS,wEAAuB;AAChC,SAAS,2FAA6B;AACtC,SAAS,gFAA2B;AACpC,MAAM;AACN;AACA,mBAAmB,6DAAc;AACjC,sBAAsB,6DAAc;AACpC,sBAAsB,6DAAc;AACpC,yBAAyB,yFAA0C;AACnE,0BAA0B,0FAA2C;AACrE,uBAAuB,qFAAsC;AAC7D;AACA;AACA,CAAC;AACO;;;;;;;;;;;;;;;;;;;ACnFR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gCAAgC;AAChC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gCAAgC;AAChC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gCAAgC;AAChC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gCAAgC;AAChC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gCAAgC;AAChC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gCAAgC;AAChC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gCAAgC;AAChC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gCAAgC;AAChC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;;;;;;;;;;;;;AC9VmB;AACP;AACU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oLAAoL,YAAY;AAChM,iBAAiB,IAAI;AACrB;AACA;AACA,6DAA6D;AAC7D,SAAS,2FAA6B;AACtC,MAAM;AACN;AACA,sBAAsB,6DAAc;AACpC;AACA;AACA,CAAC;AACO;;;;;;;;;;;;;;;;;;;;;;;;;AC7CR;AAAA;AACqI;AACzG;AACN;AACF;AACH;AACD;AACQ;AACJ;AACY;AACE;AACS;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAyC,wBAAwB,EAAE;AACnoCAAoC,oCAAoC,EAAE;AAC1E;AACA;AACA,KAAK;AACL;AACA,0BAA0B,yBAAyB,EAAE;AACrD;AACA;AACA;AACA;AACA,+BAA+B,0BAA0B,EAAE;AAC3D;AACA;AACA,KAAK;AACL;AACA,0BAA0B,mCAAmC,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA,8BAA8B,gCAAgC;AAC9D;AACA,yCAAyC,8CAA8C,EAAE;AACzF;AACA;AACA,KAAK;AACL;AACA,0BAA0B,6BAA6B,EAAE;AACzD;AACA;AACA;AACA;AACA,mCAAmC,kCAAkC,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA,0BAA0B,+BAA+B,EAAE;AAC3D;AACA;AACA;AACA;AACA,qCAAqC,sCAAsC,EAAE;AAC7E;AACA;AACA,KAAK;AACL;AACA,0BAA0B,8BAA8B,EAAE;AAC1D;AACA;AACA;AACA;AACA,oCAAoC,oCAAoC,EAAE;AAC1E;AACA;AACA,KAAK;AACL;AACA,0BAA0B,2BAA2B,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA,iCAAiC,8BAA8B,EAAE;AACjE;AACA;AACA,KAAK;AACL;AACA,0BAA0B,gCAAgC,EAAE;AAC5D;AACA;AACA;AACA;AACA;AACA,sCAAsC,wCAAwC,EAAE;AAChF;AACA;AACA,KAAK;AACL;AACA,0BAA0B,+BAA+B,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA,qCAAqC,sCAAsC,EAAE;AAC7E;AACA;AACA,KAAK;AACL;AACA,0BAA0B,iCAAiC,EAAE;AAC7D;AACA;AACA;AACA;AACA,uCAAuC,0CAA0C,EAAE;AACnF;AACA;AACA,KAAK;AACL;AACA,0BAA0B,gCAAgC,EAAE;AAC5D;AACA;AACA;AACA;AACA,sCAAsC,wCAAwC,EAAE;AAChF;AACA;AACA,KAAK;AACL;AACA,0BAA0B,6BAA6B,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA,mCAAmC,kCAAkC,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mEAAmE,qCAAqC;AACxG;AACA;AACA,qDAAqD;AACraAAa;AACbaAAa;AACb,8KAA+G;AAC/G;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE,EAAE;AACjB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8rFAA8rF,mBAAmB,kEAAkE,0BAA0B;AAC7yF,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD;AAClD,SAAS,wEAAuB;AAChC,SAAS,4FAA6B;AACtC,SAAS,gFAA2B;AACpC,SAAS,+DAAgB;AACzB,SAAS,mEAAoB;AAC7B,MAAM;AACN;AACA,wBAAwB,6DAAc;AACtC,mBAAmB,6DAAc;AACjC,6BAA6B,6DAAc;AAC3C,uBAAuB,6DAAc;AACrC,yBAAyB,6DAAc;AACvC,wBAAwB,6DAAc;AACtC,qBAAqB,6DAAc;AACnC,0BAA0B,6DAAc;AACxC,yBAAyB,6DAAc;AACvC,2BAA2B,6DAAc;AACzC,0BAA0B,6DAAc;AACxC,uBAAuB,6DAAc;AACrC,sBAAsB,6DAAc;AACpC,sBAAsB,6DAAc;AACpC,0BAA0B,6DAAc;AACxC,sBAAsB,6DAAc;AACpC,oBAAoB,6DAAc;AAClC,0BAA0B,6DAAc;AACxC,yBAAyB,6DAAc;AACvC,0BAA0B,wKAAqD;AAC/E,wBAAwB,wFAAyC;AACjE,8BAA8B,8FAA+C;AAC7E,kBAAkB,8DAAe;AACjC,oBAAoB,8DAAe;AACnC,mBAAmB,8DAAe;AAClC,sBAAsB,8DAAe;AACrC,mBAAmB,8DAAe;AAClC,mBAAmB,8DAAe;AAClC,oBAAoB,8DAAe;AACnC,oBAAoB,8DAAe;AACnC,qBAAqB,8DAAe;AACpC,oBAAoB,8DAAe;AACnC,4BAA4B,8DAAe;AAC3C,yBAAyB,8DAAe;AACxC,iBAAiB,wFAAyC;AAC1D,gCAAgC,8FAA+C,GAAG,8FAA+C,GAAG,8FAA+C;AACnL,+BAA+B,sGAAuD;AACtF,2BAA2B,oGAAqD;AAChF;AACA;AACA,CAAC;AACO;;;;;;;;;;;;;;;;;;;;;;;;;;AC1pBW;AACI;AACG;AACE;AACA;AACI;AACM;AACG;AACG;AACZ;AACF;AACS;AACF;AACF;AACE;AACH;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA,CAAC;AACO;;;;;;;;;;;;;;;;ACjD2B;AACf;AACF;AAC0D;AAC4C;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,qBAAqB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,6BAA6B;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,wBAAwB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qBAAqB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,yBAAyB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kEAAmB;AAC5B;AACA;AACA,gDAAgD;AAChD,SAAS,0EAAoB;AAC7B,MAAM;AACN;AACA,CAAC;AACO;;;;;;;;;ACpPR;AAAA;AACoB;AACpB;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD,gCAAgC;AAChC,gCAAgC;AAChC,qCAAqC;AACrC,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,6CAA6C;AACtF;AACA;AACA,6EAA6E,0CAA0C,EAAE;AACzH;AACA;AACA,qCAAqC,wBAAwB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC9CkD;AAGI;AAEtD;IAA6C,2CAAO;IAClD,iCACE,GAAQ,EACA,GAA6B,EAC7B,QAAkB;QAH5B,YAKE,kBAAM,GAAG,CAAC,SACX;QAJS,SAAG,GAAH,GAAG,CAA0B;QAC7B,cAAQ,GAAR,QAAQ,CAAU;;IAG5B,CAAC;IAED,0CAAQ,GAAR,UAAS,KAAK;QAAd,iBAaC;QAZC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,UAAC,GAAW,IAAK,YAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;QAEhE,2BAA2B;QAC3B,kFAAkF;QAClF,8GAA8G;QAE9G,0FAA0F;QAC1F,0BAA0B;QAC1B,kD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","file":"rspackage.module.chunk.js","sourcesContent":["import { Directive, ElementRef, HostBinding, HostListener, Input, NgZone, Renderer2 } from '@angular/core';\nimport { UploadService } from './upload.service';\nimport util from \"./util\";\nimport validationUtil from \"./validation-util\";\n/**\n * @hidden\n */\nvar DropZoneDirective = /** @class */ (function () {\n    function DropZoneDirective(element, uploadService, _ngZone, renderer) {\n        var _this = this;\n        this.element = element;\n        this.uploadService = uploadService;\n        this._ngZone = _ngZone;\n        this.renderer = renderer;\n        this.hideIntervalDocument = null;\n        this.hideIntervalElement = null;\n        this.state = {\n            active: \"k-dropzone k-dropzone-active\",\n            hovered: \"k-dropzone k-dropzone-active k-dropzone-hovered\",\n            inactive: \"k-dropzone\"\n        };\n        this.element = element;\n        this.setClasses(this.state.inactive);\n        if (!util.isDocumentAvailable()) {\n            return;\n        }\n        this._ngZone.runOutsideAngular(function () {\n            _this.unsubscribeDocumentDragEnter = _this.renderer.listen('document', 'dragenter', function () { return _this.onDocumentDragEnter(); });\n            _this.unsubscribeDocumentDragOver = _this.renderer.listen('document', 'dragover', function () { return _this.onDocumentDragOver(); });\n        });\n    }\n    DropZoneDirective.prototype.ngOnDestroy = function () {\n        var _this = this;\n        this._ngZone.runOutsideAngular(function () {\n            if (_this.unsubscribeDocumentDragEnter) {\n                _this.unsubscribeDocumentDragEnter();\n            }\n            if (_this.unsubscribeDocumentDragOver) {\n                _this.unsubscribeDocumentDragOver();\n            }\n        });\n    };\n    /**\n     * @hidden\n     */\n    DropZoneDirective.prototype.onDocumentDragEnter = function () {\n        var _this = this;\n        if (this.lastDragElement) {\n            if (this.calculateTimeDiff(this.lastDragElement) > 100) {\n                this.setClasses(this.state.active);\n            }\n        }\n        else {\n            this.setClasses(this.state.active);\n        }\n        this.lastDragDocument = new Date();\n        if (!this.hideIntervalDocument) {\n            this.hideIntervalDocument = setInterval(function () {\n                if (_this.calculateTimeDiff(_this.lastDragDocument) < 100) {\n                    return;\n                }\n                _this.setClasses(_this.state.inactive);\n                clearInterval(_this.hideIntervalDocument);\n                _this.hideIntervalDocument = null;\n            }, 100);\n        }\n        return false;\n    };\n    /**\n     * @hidden\n     */\n    DropZoneDirective.prototype.onDocumentDragOver = function () {\n        this.lastDragDocument = new Date();\n        return false;\n    };\n    /**\n     * @hidden\n     */\n    DropZoneDirective.prototype.onElementDragEnterListener = function () {\n        var _this = this;\n        this.setClasses(this.state.hovered);\n        this.lastDragElement = new Date();\n        if (!this.hideIntervalElement) {\n            this.hideIntervalElement = setInterval(function () {\n                if (_this.calculateTimeDiff(_this.lastDragElement) < 100) {\n                    return;\n                }\n                if (_this.lastDrop) {\n                    var diff = _this.calculateTimeDiff(_this.lastDrop);\n                    _this.setClasses(diff > 200 ? _this.state.active : _this.state.inactive);\n                }\n                else {\n                    _this.setClasses(_this.state.active);\n                }\n                clearInterval(_this.hideIntervalElement);\n                _this.hideIntervalElement = null;\n            }, 100);\n        }\n        return false;\n    };\n    /**\n     * @hidden\n     */\n    DropZoneDirective.prototype.onElementDragOverListener = function () {\n        this.lastDragElement = new Date();\n        return false;\n    };\n    /**\n     * @hidden\n     */\n    DropZoneDirective.prototype.onDropListener = function (event) {\n        this.lastDrop = new Date();\n        var droppedFiles = event.dataTransfer.files;\n        if (droppedFiles.length > 0 && !this.disabled) {\n            var files = util.getAllFileInfo(droppedFiles);\n            files = util.assignGuidToFiles(files, !this.async.batch);\n            if (!this.multiple) {\n                files.splice(1, files.length - 1);\n                this.uploadService.clearFiles();\n            }\n            validationUtil.validateFiles(files, this.restrictions);\n            this.uploadService.addFiles(files, this.async);\n        }\n        return false;\n    };\n    DropZoneDirective.prototype.calculateTimeDiff = function (prevEvent) {\n        return new Date().getTime() - prevEvent.getTime();\n    };\n    DropZoneDirective.prototype.setClasses = function (classes) {\n        if (!this.disabled) {\n            this.element.nativeElement.className = classes;\n        }\n    };\n    Object.defineProperty(DropZoneDirective.prototype, \"initialClassName\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DropZoneDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[kendoUploadDropzone]'\n                },] },\n    ];\n    /** @nocollapse */\n    DropZoneDirective.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: UploadService, },\n        { type: NgZone, },\n        { type: Renderer2, },\n    ]; };\n    DropZoneDirective.propDecorators = {\n        'async': [{ type: Input },],\n        'disabled': [{ type: Input },],\n        'multiple': [{ type: Input },],\n        'restrictions': [{ type: Input },],\n        'onElementDragEnterListener': [{ type: HostListener, args: ['dragenter',] },],\n        'onElementDragOverListener': [{ type: HostListener, args: ['dragover',] },],\n        'onDropListener': [{ type: HostListener, args: ['drop', ['$event'],] },],\n        'initialClassName': [{ type: HostBinding, args: ['class.k-dropzone',] },],\n    };\n    return DropZoneDirective;\n}());\nexport { DropZoneDirective };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-upload/dist/es/dropzone.directive.js\n// module id = ./node_modules/@progress/kendo-angular-upload/dist/es/dropzone.directive.js\n// module chunks = rspackage.module","/**\n * Lists the possible states of a file.\n */\nexport var FileState;\n(function (FileState) {\n    /**\n     * The file upload process has failed.\n     */\n    FileState[FileState[\"Failed\"] = 0] = \"Failed\";\n    /**\n     * An initially selected fake file without a set state.\n     */\n    FileState[FileState[\"Initial\"] = 1] = \"Initial\";\n    /**\n     * The file is selected.\n     */\n    FileState[FileState[\"Selected\"] = 2] = \"Selected\";\n    /**\n     * The file is successfully uploaded.\n     */\n    FileState[FileState[\"Uploaded\"] = 3] = \"Uploaded\";\n    /**\n     * The file is in the process of uploading.\n     */\n    FileState[FileState[\"Uploading\"] = 4] = \"Uploading\";\n})(FileState || (FileState = {}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-upload/dist/es/file-info.js\n// module id = ./node_modules/@progress/kendo-angular-upload/dist/es/file-info.js\n// module chunks = rspackage.module","import { Input, Component, ViewChild } from '@angular/core';\nimport { FileState } from './file-info';\nimport { UploadService } from './upload.service';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\n/**\n * @hidden\n */\nvar FileListItemActionButtonComponent = /** @class */ (function () {\n    function FileListItemActionButtonComponent(uploadService, localization) {\n        this.uploadService = uploadService;\n        this.localization = localization;\n        this.retryFocused = false;\n        this.actionFocused = false;\n    }\n    FileListItemActionButtonComponent.prototype.setButtonClasses = function (type) {\n        return {\n            'k-button k-upload-action': true,\n            'k-state-focused': (this.actionFocused && type === 'action') ||\n                (this.retryFocused && type === 'retry')\n        };\n    };\n    FileListItemActionButtonComponent.prototype.setActionButtonClasses = function (file) {\n        /* tslint:disable:object-literal-sort-keys */\n        return {\n            'k-icon': true,\n            'k-cancel k-i-deny': file.state === FileState.Uploading,\n            'k-delete k-i-x': file.state !== FileState.Uploading\n        };\n    };\n    FileListItemActionButtonComponent.prototype.setActionButtonTitle = function (file) {\n        if (file.state === FileState.Uploading) {\n            return this.localization.get('cancel');\n        }\n        return this.localization.get('remove');\n    };\n    FileListItemActionButtonComponent.prototype.setRetryButtonTitle = function () {\n        return this.localization.get('retry');\n    };\n    FileListItemActionButtonComponent.prototype.onFocus = function (type) {\n        if (type === 'retry') {\n            this.retryFocused = true;\n        }\n        if (type === 'action') {\n            this.actionFocused = true;\n        }\n    };\n    FileListItemActionButtonComponent.prototype.onBlur = function (type) {\n        if (type === 'retry') {\n            this.retryFocused = false;\n        }\n        if (type === 'action') {\n            this.actionFocused = false;\n        }\n    };\n    FileListItemActionButtonComponent.prototype.onClick = function (uid, type, _event) {\n        var element = (type === 'retry') ? this.retryButton : this.actionButton;\n        var classes = element.nativeElement.className.split(\" \");\n        if (this.disabled) {\n            return;\n        }\n        if (classes.indexOf('k-delete') >= 0) {\n            this.uploadService.removeFiles(uid, this.async);\n        }\n        else if (classes.indexOf('k-cancel') >= 0) {\n            this.uploadService.cancelFiles(uid);\n        }\n        else if (classes.indexOf('k-retry') >= 0) {\n            this.uploadService.retryFiles(uid, this.async);\n        }\n    };\n    FileListItemActionButtonComponent.prototype.isVisible = function (file, type) {\n        if (type === 'retry') {\n            return file.state === FileState.Failed ? true : false;\n        }\n        if (type === 'progress') {\n            return file.state === FileState.Uploading;\n        }\n        if ((file.state === FileState.Uploaded || file.state === FileState.Initial) && !this.async.removeUrl) {\n            return false;\n        }\n        return true;\n    };\n    FileListItemActionButtonComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'kendo-upload-file-list-item-action-button',\n                    template: \"\\n      <strong class=\\\"k-upload-status\\\">\\n        <span class=\\\"k-upload-pct\\\" *ngIf=\\\"isVisible(file, 'progress')\\\">{{progress}}%</span>\\n        <button type=\\\"button\\\"\\n          *ngIf=\\\"isVisible(file, 'retry')\\\"\\n          [attr.tabIndex]=\\\"-1\\\"\\n          [ngClass]=\\\"setButtonClasses('retry')\\\"\\n          (focus)=\\\"onFocus('retry')\\\"\\n          (blur)=\\\"onBlur('retry')\\\"\\n          (click)=\\\"onClick(file.uid, 'retry', $event)\\\">\\n          <span #retryButton\\n            [attr.aria-label]=\\\"setRetryButtonTitle()\\\"\\n            [attr.title]=\\\"setRetryButtonTitle()\\\"\\n            class=\\\"k-icon k-retry k-i-refresh-sm\\\">\\n          </span>\\n        </button>\\n        <button type=\\\"button\\\"\\n          *ngIf=\\\"isVisible(file, 'action')\\\"\\n          [attr.tabIndex]=\\\"-1\\\"\\n          [ngClass]=\\\"setButtonClasses('action')\\\"\\n          (focus)=\\\"onFocus('action')\\\"\\n          (blur)=\\\"onBlur('action')\\\"\\n          (click)=\\\"onClick(file.uid, 'action', $event)\\\">\\n          <span #actionButton\\n            [attr.aria-label]='setActionButtonTitle(file)'\\n            [attr.title]='setActionButtonTitle(file)'\\n            [ngClass]='setActionButtonClasses(file)'>\\n          </span>\\n        </button>\\n      </strong>\\n    \"\n                },] },\n    ];\n    /** @nocollapse */\n    FileListItemActionButtonComponent.ctorParameters = function () { return [\n        { type: UploadService, },\n        { type: LocalizationService, },\n    ]; };\n    FileListItemActionButtonComponent.propDecorators = {\n        'file': [{ type: Input },],\n        'async': [{ type: Input },],\n        'disabled': [{ type: Input },],\n        'progress': [{ type: Input },],\n        'retryButton': [{ type: ViewChild, args: [\"retryButton\",] },],\n        'actionButton': [{ type: ViewChild, args: [\"actionButton\",] },],\n    };\n    return FileListItemActionButtonComponent;\n}());\nexport { FileListItemActionButtonComponent };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-upload/dist/es/file-list-item-action-button.component.js\n// module id = ./node_modules/@progress/kendo-angular-upload/dist/es/file-list-item-action-button.component.js\n// module chunks = rspackage.module","import util from \"./util\";\n/**\n * @hidden\n */\nvar FileListItemBase = /** @class */ (function () {\n    function FileListItemBase(uploadService) {\n        this.uploadService = uploadService;\n        this.progressComplete = 0;\n    }\n    FileListItemBase.prototype.subscribeUploadProgress = function (uploadProgressHandler) {\n        this.uploadProgressSubscription = this.uploadService.uploadProgressEvent.subscribe(uploadProgressHandler);\n    };\n    FileListItemBase.prototype.fileHasValidationErrors = function (file) {\n        return util.fileHasValidationErrors(file);\n    };\n    FileListItemBase.prototype.filesHaveValidationErrors = function (files) {\n        return util.filesHaveValidationErrors(files);\n    };\n    FileListItemBase.prototype.ngOnDestroy = function () {\n        this.uploadProgressSubscription.unsubscribe();\n    };\n    FileListItemBase.prototype.getFileValidationMessage = function (file) {\n        var validationMessage;\n        if (file.validationErrors && file.validationErrors.length > 0) {\n            validationMessage = this.localization.get(file.validationErrors[0]);\n        }\n        return validationMessage;\n    };\n    FileListItemBase.prototype.getInvalidFilesMessage = function () {\n        return this.localization.get('invalidFiles');\n    };\n    FileListItemBase.prototype.getTotalFilesSizeMessage = function (files) {\n        return util.getTotalFilesSizeMessage(files);\n    };\n    return FileListItemBase;\n}());\nexport { FileListItemBase };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-upload/dist/es/file-list-item-base.js\n// module id = ./node_modules/@progress/kendo-angular-upload/dist/es/file-list-item-base.js\n// module chunks = rspackage.module","import { Directive, ElementRef, HostBinding, HostListener, Input } from '@angular/core';\nimport { FileState } from './file-info';\nimport { NavigationService } from './navigation.service';\nimport util from \"./util\";\n/**\n * @hidden\n */\nvar FileListItemDirective = /** @class */ (function () {\n    function FileListItemDirective(el, navigationService) {\n        this.navigationService = navigationService;\n        this.fileClass = true;\n        this.focused = false;\n        this.element = el;\n    }\n    FileListItemDirective.prototype.focus = function () {\n        this.element.nativeElement.focus();\n    };\n    Object.defineProperty(FileListItemDirective.prototype, \"uidAttribute\", {\n        get: function () {\n            return this.files[0].uid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FileListItemDirective.prototype, \"tabIndex\", {\n        get: function () {\n            return \"-1\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FileListItemDirective.prototype, \"kFileError\", {\n        get: function () {\n            return this.files[0].state === FileState.Failed;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FileListItemDirective.prototype, \"kFileInvalid\", {\n        get: function () {\n            return util.filesHaveValidationErrors(this.files);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FileListItemDirective.prototype, \"kFileProgress\", {\n        get: function () {\n            return this.files[0].state === FileState.Uploading;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FileListItemDirective.prototype, \"kFileSuccess\", {\n        get: function () {\n            return this.files[0].state === FileState.Uploaded ||\n                this.files[0].state === FileState.Initial;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FileListItemDirective.prototype, \"kStateFocused\", {\n        get: function () {\n            return this.focused;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FileListItemDirective.prototype.onFocus = function () {\n        this.focused = true;\n    };\n    FileListItemDirective.prototype.onBlur = function () {\n        this.focused = false;\n    };\n    FileListItemDirective.prototype.onClick = function (event) {\n        event.preventDefault();\n        if (!util.isFocusable(event.target) && !util.hasClasses(event.target, util.IGNORE_TARGET_CLASSSES)) {\n            this.navigationService.focusedIndex = this.index;\n        }\n    };\n    FileListItemDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[kendoUploadFileListItem]'\n                },] },\n    ];\n    /** @nocollapse */\n    FileListItemDirective.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: NavigationService, },\n    ]; };\n    FileListItemDirective.propDecorators = {\n        'files': [{ type: Input },],\n        'index': [{ type: Input },],\n        'fileClass': [{ type: HostBinding, args: ['class.k-file',] },],\n        'uidAttribute': [{ type: HostBinding, args: ['attr.data-uid',] },],\n        'tabIndex': [{ type: HostBinding, args: ['attr.tabIndex',] },],\n        'kFileError': [{ type: HostBinding, args: ['class.k-file-error',] },],\n        'kFileInvalid': [{ type: HostBinding, args: ['class.k-file-invalid',] },],\n        'kFileProgress': [{ type: HostBinding, args: ['class.k-file-progress',] },],\n        'kFileSuccess': [{ type: HostBinding, args: ['class.k-file-success',] },],\n        'kStateFocused': [{ type: HostBinding, args: ['class.k-state-focused',] },],\n        'onFocus': [{ type: HostListener, args: [\"focus\",] },],\n        'onBlur': [{ type: HostListener, args: [\"blur\",] },],\n        'onClick': [{ type: HostListener, args: ['click', ['$event'],] },],\n    };\n    return FileListItemDirective;\n}());\nexport { FileListItemDirective };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-upload/dist/es/file-list-item.js\n// module id = ./node_modules/@progress/kendo-angular-upload/dist/es/file-list-item.js\n// module chunks = rspackage.module","import * as tslib_1 from \"tslib\";\nimport { Input, Component } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { FileState } from './file-info';\nimport { FileListItemBase } from './file-list-item-base';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\nimport { UploadService } from './upload.service';\n/**\n * @hidden\n */\nvar FileListMultipleItemsComponent = /** @class */ (function (_super) {\n    tslib_1.__extends(FileListMultipleItemsComponent, _super);\n    function FileListMultipleItemsComponent(localization, uploadService) {\n        var _this = _super.call(this, uploadService) || this;\n        _this.localization = localization;\n        _this.subscribeUploadProgress(function (args) {\n            if (args.files[0].uid === _this.files[0].uid) {\n                _this.progressComplete = args.percentComplete;\n            }\n        });\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    FileListMultipleItemsComponent.prototype.setFileNameClasses = function (file) {\n        return {\n            \"k-file-name\": true,\n            \"k-file-name-invalid\": _super.prototype.fileHasValidationErrors.call(this, file)\n        };\n    };\n    Object.defineProperty(FileListMultipleItemsComponent.prototype, \"showProgress\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return (this.files[0].state === FileState.Uploading) ? 'active' : 'inactive';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FileListMultipleItemsComponent.prototype.ngOnInit = function () {\n        this.filesHaveErrors = _super.prototype.filesHaveValidationErrors.call(this, this.files);\n    };\n    FileListMultipleItemsComponent.decorators = [\n        { type: Component, args: [{\n                    animations: [\n                        trigger('progressState', [\n                            state('active', style({ opacity: 1 })),\n                            state('inactive', style({ opacity: 0 })),\n                            transition('void => active', style({ opacity: 0 })),\n                            transition('inactive => active', style({ opacity: 1 })),\n                            transition('active => inactive', animate('1s 2s ease-out'))\n                        ])\n                    ],\n                    selector: 'kendo-upload-file-list-multiple-items',\n                    template: \"\\n      <span class=\\\"k-progress\\\" [style.width]=\\\"progressComplete + '%'\\\" [@progressState]=\\\"showProgress\\\"></span>\\n      <span *ngIf=\\\"!filesHaveErrors\\\" class=\\\"k-multiple-files-extension-wrapper\\\">\\n        <span class=\\\"k-file-state\\\"></span>\\n      </span>\\n      <span *ngIf=\\\"filesHaveErrors\\\" class=\\\"k-multiple-files-invalid-extension-wrapper\\\">\\n        <span class='k-file-invalid-icon'>!</span>\\n        <span class=\\\"k-file-state\\\"></span>\\n      </span>\\n      <span class=\\\"k-file-name-size-wrapper\\\">\\n        <span *ngFor=\\\"let file of files\\\" [ngClass]=\\\"setFileNameClasses(file)\\\" [title]=\\\"file.name\\\">{{file.name}}</span>\\n        <span *ngIf=\\\"!filesHaveErrors\\\"\\n              class=\\\"k-file-information\\\">Total: {{ files.length }} files, {{ getTotalFilesSizeMessage(files) }}</span>\\n        <span *ngIf=\\\"filesHaveErrors\\\" class=\\\"k-file-validation-message\\\">{{ getInvalidFilesMessage() }}</span>\\n      </span>\\n      <kendo-upload-file-list-item-action-button\\n        [file]='files[0]'\\n        [disabled]='disabled'\\n        [async]='async'\\n        [progress]='progressComplete'>\\n      </kendo-upload-file-list-item-action-button>\\n    \"\n                },] },\n    ];\n    /** @nocollapse */\n    FileListMultipleItemsComponent.ctorParameters = function () { return [\n        { type: LocalizationService, },\n        { type: UploadService, },\n    ]; };\n    FileListMultipleItemsComponent.propDecorators = {\n        'disabled': [{ type: Input },],\n        'files': [{ type: Input },],\n        'async': [{ type: Input },],\n    };\n    return FileListMultipleItemsComponent;\n}(FileListItemBase));\nexport { FileListMultipleItemsComponent };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-upload/dist/es/file-list-multiple-items.component.js\n// module id = ./node_modules/@progress/kendo-angular-upload/dist/es/file-list-multiple-items.component.js\n// module chunks = rspackage.module","import * as tslib_1 from \"tslib\";\nimport { Input, Component } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { FileState } from './file-info';\nimport { FileListItemBase } from './file-list-item-base';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\nimport { UploadService } from './upload.service';\n/**\n * @hidden\n */\nvar FileListSingleItemComponent = /** @class */ (function (_super) {\n    tslib_1.__extends(FileListSingleItemComponent, _super);\n    function FileListSingleItemComponent(localization, uploadService) {\n        var _this = _super.call(this, uploadService) || this;\n        _this.localization = localization;\n        _this.subscribeUploadProgress(function (args) {\n            if (args.files[0].uid === _this.file.uid) {\n                _this.progressComplete = args.percentComplete;\n            }\n        });\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    FileListSingleItemComponent.prototype.textFor = function (key) {\n        return this.localization.get(key);\n    };\n    /**\n     * @hidden\n     */\n    FileListSingleItemComponent.prototype.getFileExtension = function (file) {\n        return file.extension ? file.extension.substring(1) : '';\n    };\n    Object.defineProperty(FileListSingleItemComponent.prototype, \"showProgress\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return (this.file.state === FileState.Uploading) ? 'active' : 'inactive';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FileListSingleItemComponent.decorators = [\n        { type: Component, args: [{\n                    animations: [\n                        trigger('progressState', [\n                            state('active', style({ opacity: 1 })),\n                            state('inactive', style({ opacity: 0 })),\n                            transition('void => active', style({ opacity: 0 })),\n                            transition('inactive => active', style({ opacity: 1 })),\n                            transition('active => inactive', animate('1s 2s ease-out'))\n                        ])\n                    ],\n                    selector: 'kendo-upload-file-list-single-item',\n                    template: \"\\n      <span class=\\\"k-progress\\\" [style.width]=\\\"progressComplete + '%'\\\" [@progressState]=\\\"showProgress\\\"></span>\\n      <ng-template [ngIf]='file.validationErrors && file.validationErrors.length > 0'>\\n        <span class=\\\"k-file-invalid-extension-wrapper\\\">\\n          <span class=\\\"k-file-invalid-icon\\\">!</span>\\n          <span class=\\\"k-file-state\\\"></span>\\n        </span>\\n        <span class=\\\"k-file-name-size-wrapper\\\">\\n          <span class=\\\"k-file-name k-file-name-invalid\\\" [title]=\\\"file.name\\\">{{ file.name }}</span>\\n          <span class=\\\"k-file-validation-message\\\">{{ getFileValidationMessage(file) }}</span>\\n        </span>\\n      </ng-template>\\n      <ng-template [ngIf]='!file.validationErrors || file.validationErrors.length === 0'>\\n        <span class=\\\"k-file-extension-wrapper\\\">\\n          <span class=\\\"k-file-extension\\\">{{ getFileExtension(file) }}</span>\\n          <span class=\\\"k-file-state\\\"></span>\\n        </span>\\n        <span class=\\\"k-file-name-size-wrapper\\\">\\n          <span class=\\\"k-file-name\\\" [title]=\\\"file.name\\\">{{ file.name }}</span>\\n          <span class=\\\"k-file-size\\\">{{ getTotalFilesSizeMessage([file]) }}</span>\\n        </span>\\n      </ng-template>\\n      <kendo-upload-file-list-item-action-button\\n        [file]='file'\\n        [disabled]='disabled'\\n        [async]='async'\\n        [progress]='progressComplete'>\\n      </kendo-upload-file-list-item-action-button>\\n    \"\n                },] },\n    ];\n    /** @nocollapse */\n    FileListSingleItemComponent.ctorParameters = function () { return [\n        { type: LocalizationService, },\n        { type: UploadService, },\n    ]; };\n    FileListSingleItemComponent.propDecorators = {\n        'disabled': [{ type: Input },],\n        'file': [{ type: Input },],\n        'async': [{ type: Input },],\n    };\n    return FileListSingleItemComponent;\n}(FileListItemBase));\nexport { FileListSingleItemComponent };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-upload/dist/es/file-list-single-item.component.js\n// module id = ./node_modules/@progress/kendo-angular-upload/dist/es/file-list-single-item.component.js\n// module chunks = rspackage.module","/* tslint:disable:component-selector */\nimport { Input, Component, ViewChildren } from '@angular/core';\nimport { FileState } from './file-info';\nimport { FileListItemDirective } from './file-list-item';\nimport { Keys, NavigationService } from './navigation.service';\nimport { UploadService } from './upload.service';\n/**\n * @hidden\n */\nvar FileListComponent = /** @class */ (function () {\n    function FileListComponent(uploadService, navigation) {\n        this.uploadService = uploadService;\n        this.navigation = navigation;\n        this.onItemFocus();\n        this.onItemAction();\n    }\n    FileListComponent.prototype.onItemFocus = function () {\n        var _this = this;\n        this.focusSubscription = this.navigation.onFileFocus.subscribe(function (index) {\n            _this.fileListItems.toArray()[index].focus();\n        });\n    };\n    FileListComponent.prototype.onItemAction = function () {\n        var _this = this;\n        this.actionSubscription = this.navigation.onFileAction.subscribe(function (key) {\n            _this.itemActionHandler(key);\n        });\n    };\n    FileListComponent.prototype.itemActionHandler = function (key) {\n        var index = this.navigation.focusedIndex;\n        var item = this.fileListItems.toArray()[index];\n        var uid = item.uidAttribute;\n        var files = this.uploadService.files.get(uid);\n        if (key === Keys.esc && files[0].state === FileState.Uploading) {\n            this.uploadService.cancelFiles(uid);\n            this.navigation.focusSelectButton();\n            return;\n        }\n        if (key === Keys.enter && files[0].state === FileState.Failed) {\n            this.uploadService.retryFiles(uid, this.async);\n            return;\n        }\n        if (key === Keys.delete) {\n            if (files[0].state === FileState.Uploading) {\n                this.uploadService.cancelFiles(uid);\n            }\n            else if (this.hasDelete(item)) {\n                this.uploadService.removeFiles(uid, this.async);\n            }\n            this.navigation.focusSelectButton();\n        }\n    };\n    FileListComponent.prototype.hasDelete = function (item) {\n        return item.element.nativeElement.getElementsByClassName('k-delete').length > 0;\n    };\n    FileListComponent.prototype.ngOnDestroy = function () {\n        this.focusSubscription.unsubscribe();\n        this.actionSubscription.unsubscribe();\n    };\n    FileListComponent.decorators = [\n        { type: Component, args: [{\n                    selector: '[kendo-upload-file-list]',\n                    template: \"\\n    <ng-template ngFor\\n      [ngForOf]=\\\"fileList\\\"\\n      let-files\\n      let-index=\\\"index\\\">\\n      <li kendoUploadFileListItem [files]='files' [index]='index'>\\n          <kendo-upload-file-list-single-item\\n            class='k-file-single'\\n            *ngIf='files.length === 1 && !fileTemplate'\\n            [disabled]='disabled'\\n            [file]='files[0]'\\n            [async]='async'>\\n          </kendo-upload-file-list-single-item>\\n          <kendo-upload-file-list-multiple-items\\n            class='k-file-multiple'\\n            *ngIf='files.length > 1 && !fileTemplate'\\n            [disabled]='disabled'\\n            [files]='files'\\n            [async]='async'>\\n          </kendo-upload-file-list-multiple-items>\\n          <ng-template *ngIf=\\\"fileTemplate\\\"\\n              [templateContext]=\\\"{\\n                templateRef: fileTemplate.templateRef,\\n                state: files[0].state,\\n                $implicit: files\\n              }\\\"></ng-template>\\n      </li>\\n    </ng-template>\\n    \"\n                },] },\n    ];\n    /** @nocollapse */\n    FileListComponent.ctorParameters = function () { return [\n        { type: UploadService, },\n        { type: NavigationService, },\n    ]; };\n    FileListComponent.propDecorators = {\n        'async': [{ type: Input },],\n        'disabled': [{ type: Input },],\n        'fileList': [{ type: Input },],\n        'fileTemplate': [{ type: Input },],\n        'fileListItems': [{ type: ViewChildren, args: [FileListItemDirective,] },],\n    };\n    return FileListComponent;\n}());\nexport { FileListComponent };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-upload/dist/es/file-list.component.js\n// module id = ./node_modules/@progress/kendo-angular-upload/dist/es/file-list.component.js\n// module chunks = rspackage.module","import { FileState } from './file-info';\n/**\n * @hidden\n */\nvar FileMap = /** @class */ (function () {\n    function FileMap() {\n        this._files = {};\n    }\n    FileMap.prototype.add = function (file) {\n        var uid = file.uid;\n        if (this.has(uid)) {\n            if (file.validationErrors && file.validationErrors.length > 0) {\n                this._files[uid].unshift(file);\n            }\n            else {\n                this._files[uid].push(file);\n            }\n        }\n        else {\n            this._files[uid] = [file];\n        }\n    };\n    FileMap.prototype.remove = function (uid) {\n        if (this.has(uid)) {\n            this._files[uid] = null;\n            delete this._files[uid];\n        }\n    };\n    FileMap.prototype.clear = function () {\n        var allFiles = this._files;\n        for (var uid in allFiles) {\n            if (allFiles.hasOwnProperty(uid)) {\n                for (var _i = 0, _a = allFiles[uid]; _i < _a.length; _i++) {\n                    var file = _a[_i];\n                    if (file.httpSubscription) {\n                        file.httpSubscription.unsubscribe();\n                    }\n                }\n                allFiles[uid] = null;\n                delete allFiles[uid];\n            }\n        }\n    };\n    FileMap.prototype.has = function (uid) {\n        return uid in this._files;\n    };\n    FileMap.prototype.get = function (uid) {\n        return this._files[uid];\n    };\n    FileMap.prototype.setFilesState = function (files, state) {\n        for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {\n            var file = files_1[_i];\n            this.get(file.uid).forEach(function (f) {\n                f.state = state;\n            });\n        }\n    };\n    Object.defineProperty(FileMap.prototype, \"count\", {\n        get: function () {\n            return Object.getOwnPropertyNames(this._files).length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FileMap.prototype, \"files\", {\n        get: function () {\n            var initial = this._files;\n            var transformed = [];\n            for (var uid in initial) {\n                if (initial.hasOwnProperty(uid)) {\n                    transformed.push(initial[uid]);\n                }\n            }\n            return transformed;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FileMap.prototype, \"filesFlat\", {\n        get: function () {\n            var initial = this._files;\n            var transformed = [];\n            for (var uid in initial) {\n                if (initial.hasOwnProperty(uid)) {\n                    var current = initial[uid];\n                    current.forEach(function (file) {\n                        transformed.push(file);\n                    });\n                }\n            }\n            return transformed;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FileMap.prototype, \"filesToUpload\", {\n        get: function () {\n            var files = this._files;\n            var notUploaded = [];\n            for (var uid in files) {\n                if (files.hasOwnProperty(uid)) {\n                    var currentFiles = files[uid];\n                    var currentFilesValid = true;\n                    for (var _i = 0, currentFiles_1 = currentFiles; _i < currentFiles_1.length; _i++) {\n                        var file = currentFiles_1[_i];\n                        if (file.state !== FileState.Selected ||\n                            (file.validationErrors && file.validationErrors.length > 0)) {\n                            currentFilesValid = false;\n                        }\n                    }\n                    if (currentFilesValid) {\n                        notUploaded.push(currentFiles);\n                    }\n                }\n            }\n            return notUploaded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FileMap.prototype.hasFileWithState = function (fileStates) {\n        var files = this._files;\n        for (var uid in files) {\n            if (files.hasOwnProperty(uid)) {\n                var currentFiles = files[uid];\n                for (var _i = 0, currentFiles_2 = currentFiles; _i < currentFiles_2.length; _i++) {\n                    var file = currentFiles_2[_i];\n                    if (fileStates.indexOf(file.state) >= 0) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    return FileMap;\n}());\nexport { FileMap };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-upload/dist/es/file-map.js\n// module id = ./node_modules/@progress/kendo-angular-upload/dist/es/file-map.js\n// module chunks = rspackage.module","import { Directive, ElementRef, HostBinding, HostListener, Input } from '@angular/core';\nimport { UploadService } from './upload.service';\nimport { NavigationService } from './navigation.service';\nimport util from \"./util\";\nimport validationUtil from \"./validation-util\";\n/**\n * @hidden\n */\nvar FileSelectDirective = /** @class */ (function () {\n    function FileSelectDirective(uploadService, navigation, el) {\n        this.uploadService = uploadService;\n        this.navigation = navigation;\n        this.type = \"file\";\n        this.autocomplete = \"off\";\n        this.tabIndex = -1;\n        this.element = el;\n    }\n    Object.defineProperty(FileSelectDirective.prototype, \"nameAttribute\", {\n        get: function () {\n            return this.async.saveField;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FileSelectDirective.prototype, \"multipleAttribute\", {\n        get: function () {\n            return this.multiple ? \"multiple\" : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FileSelectDirective.prototype, \"dirAttribute\", {\n        get: function () {\n            return this.dir;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FileSelectDirective.prototype, \"disabledAttribute\", {\n        get: function () {\n            return this.disabled ? \"true\" : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FileSelectDirective.prototype.onInputChange = function (event) {\n        var _this = this;\n        var ua = navigator.userAgent;\n        var chrome = /(chrome)[ \\/]([\\w.]+)/i;\n        var safari = /(webkit)[ \\/]([\\w.]+)/i;\n        var selectedFiles = util.inputFiles(event.target);\n        selectedFiles = util.assignGuidToFiles(selectedFiles, !this.async.batch);\n        validationUtil.validateFiles(selectedFiles, this.restrictions);\n        if (!this.multiple) {\n            this.uploadService.clearFiles();\n        }\n        this.uploadService.addFiles(selectedFiles, this.async);\n        /*\n        Chrome and Internet Explorer do not trigger a `change` event\n        when a file with the same name is selected a number of consecutive times.\n        As a workaround, clear the input value after handling the file.\n        */\n        var native = this.element.nativeElement;\n        if (!(!ua.match(chrome) && ua.match(safari))) {\n            native.type = \"\";\n            native.type = \"file\";\n        }\n        setTimeout(function () {\n            _this.navigation.focusedIndex = -1;\n        });\n    };\n    FileSelectDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[kendoFileSelect]'\n                },] },\n    ];\n    /** @nocollapse */\n    FileSelectDirective.ctorParameters = function () { return [\n        { type: UploadService, },\n        { type: NavigationService, },\n        { type: ElementRef, },\n    ]; };\n    FileSelectDirective.propDecorators = {\n        'async': [{ type: Input },],\n        'dir': [{ type: Input },],\n        'disabled': [{ type: Input },],\n        'multiple': [{ type: Input },],\n        'restrictions': [{ type: Input },],\n        'type': [{ type: HostBinding, args: [\"attr.type\",] },],\n        'autocomplete': [{ type: HostBinding, args: [\"attr.autocomplete\",] },],\n        'tabIndex': [{ type: HostBinding, args: [\"attr.tabIndex\",] },],\n        'nameAttribute': [{ type: HostBinding, args: [\"attr.name\",] },],\n        'multipleAttribute': [{ type: HostBinding, args: [\"attr.multiple\",] },],\n        'dirAttribute': [{ type: HostBinding, args: [\"attr.dir\",] },],\n        'disabledAttribute': [{ type: HostBinding, args: [\"attr.disabled\",] },],\n        'onInputChange': [{ type: HostListener, args: [\"change\", [\"$event\"],] },],\n    };\n    return FileSelectDirective;\n}());\nexport { FileSelectDirective };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-upload/dist/es/file-select.directive.js\n// module id = ./node_modules/@progress/kendo-angular-upload/dist/es/file-select.directive.js\n// module chunks = rspackage.module","/**\n * Generated bundle index. Do not edit.\n */\nexport * from './main';\nexport { FileListItemDirective as ɵe } from './file-list-item';\nexport { FileListItemBase as ɵg } from './file-list-item-base';\nexport { LocalizedMessagesDirective as ɵh } from './localization/localized-messages.directive';\nexport { Messages as ɵc } from './localization/messages';\nexport { NavigationService as ɵf } from './navigation.service';\nexport { PreventableEvent as ɵb } from './upload-events';\nexport { UPLOAD_VALUE_ACCESSOR as ɵa } from './upload.component';\nexport { UploadService as ɵd } from './upload.service';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-upload/dist/es/index.js\n// module id = ./node_modules/@progress/kendo-angular-upload/dist/es/index.js\n// module chunks = rspackage.module","import * as tslib_1 from \"tslib\";\nimport { Component, forwardRef } from '@angular/core';\nimport { Messages } from './messages';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\n/**\n * Custom component messages override default component messages.\n */\nvar CustomMessagesComponent = /** @class */ (function (_super) {\n    tslib_1.__extends(CustomMessagesComponent, _super);\n    function CustomMessagesComponent(service) {\n        var _this = _super.call(this) || this;\n        _this.service = service;\n        return _this;\n    }\n    Object.defineProperty(CustomMessagesComponent.prototype, \"override\", {\n        get: function () {\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CustomMessagesComponent.decorators = [\n        { type: Component, args: [{\n                    providers: [\n                        {\n                            provide: Messages,\n                            useExisting: forwardRef(function () { return CustomMessagesComponent; }) // tslint:disable-line:no-forward-ref\n                        }\n                    ],\n                    selector: 'kendo-upload-messages',\n                    template: \"\"\n                },] },\n    ];\n    /** @nocollapse */\n    CustomMessagesComponent.ctorParameters = function () { return [\n        { type: LocalizationService, },\n    ]; };\n    return CustomMessagesComponent;\n}(Messages));\nexport { CustomMessagesComponent };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-upload/dist/es/localization/custom-messages.component.js\n// module id = ./node_modules/@progress/kendo-angular-upload/dist/es/localization/custom-messages.component.js\n// module chunks = rspackage.module","import * as tslib_1 from \"tslib\";\nimport { Directive, forwardRef } from '@angular/core';\nimport { Messages } from './messages';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\n/**\n * @hidden\n */\nvar LocalizedMessagesDirective = /** @class */ (function (_super) {\n    tslib_1.__extends(LocalizedMessagesDirective, _super);\n    function LocalizedMessagesDirective(service) {\n        var _this = _super.call(this) || this;\n        _this.service = service;\n        return _this;\n    }\n    LocalizedMessagesDirective.decorators = [\n        { type: Directive, args: [{\n                    providers: [\n                        {\n                            provide: Messages,\n                            useExisting: forwardRef(function () { return LocalizedMessagesDirective; }) // tslint:disable-line:no-forward-ref\n                        }\n                    ],\n                    selector: '[kendoUploadLocalizedMessages]'\n                },] },\n    ];\n    /** @nocollapse */\n    LocalizedMessagesDirective.ctorParameters = function () { return [\n        { type: LocalizationService, },\n    ]; };\n    return LocalizedMessagesDirective;\n}(Messages));\nexport { LocalizedMessagesDirective };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-upload/dist/es/localization/localized-messages.directive.js\n// module id = ./node_modules/@progress/kendo-angular-upload/dist/es/localization/localized-messages.directive.js\n// module chunks = rspackage.module","import * as tslib_1 from \"tslib\";\nimport { Input } from '@angular/core';\nimport { ComponentMessages } from '@progress/kendo-angular-l10n';\n/**\n * @hidden\n */\nvar Messages = /** @class */ (function (_super) {\n    tslib_1.__extends(Messages, _super);\n    function Messages() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Messages.propDecorators = {\n        'cancel': [{ type: Input },],\n        'clearSelectedFiles': [{ type: Input },],\n        'dropFilesHere': [{ type: Input },],\n        'headerStatusUploaded': [{ type: Input },],\n        'headerStatusUploading': [{ type: Input },],\n        'invalidFileExtension': [{ type: Input },],\n        'invalidFiles': [{ type: Input },],\n        'invalidMaxFileSize': [{ type: Input },],\n        'invalidMinFileSize': [{ type: Input },],\n        'remove': [{ type: Input },],\n        'retry': [{ type: Input },],\n        'select': [{ type: Input },],\n        'uploadSelectedFiles': [{ type: Input },],\n    };\n    return Messages;\n}(ComponentMessages));\nexport { Messages };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-upload/dist/es/localization/messages.js\n// module id = ./node_modules/@progress/kendo-angular-upload/dist/es/localization/messages.js\n// module chunks = rspackage.module","export { UploadModule } from './upload.module';\nexport { UploadComponent } from './upload.component';\nexport { FileSelectDirective } from './file-select.directive';\nexport { FileListComponent } from './file-list.component';\nexport { FileListSingleItemComponent } from './file-list-single-item.component';\nexport { FileListItemActionButtonComponent } from './file-list-item-action-button.component';\nexport { FileListMultipleItemsComponent } from './file-list-multiple-items.component';\nexport { FileTemplateDirective } from './templates/file-template.directive';\nexport { TemplateContextDirective } from './templates/template-context.directive';\nexport { UploadStatusTotalComponent } from './upload-status-total.component';\nexport { UploadActionButtonsComponent } from './upload-action-buttons.component';\nexport { FileState } from './file-info';\nexport { DropZoneDirective } from './dropzone.directive';\nexport { CustomMessagesComponent } from './localization/custom-messages.component';\nexport { CancelEvent, ClearEvent, ErrorEvent, RemoveEvent, SelectEvent, SuccessEvent, UploadEvent, UploadProgressEvent } from './upload-events';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-upload/dist/es/main.js\n// module id = ./node_modules/@progress/kendo-angular-upload/dist/es/main.js\n// module chunks = rspackage.module","import { Injectable, EventEmitter } from '@angular/core';\nimport { UploadService } from './upload.service';\n/**\n * @hidden\n */\nexport var Keys;\n(function (Keys) {\n    Keys[Keys[\"esc\"] = 27] = \"esc\";\n    Keys[Keys[\"tab\"] = 9] = \"tab\";\n    Keys[Keys[\"enter\"] = 13] = \"enter\";\n    Keys[Keys[\"space\"] = 32] = \"space\";\n    Keys[Keys[\"shift\"] = 16] = \"shift\";\n    Keys[Keys[\"delete\"] = 46] = \"delete\";\n    Keys[Keys[\"left\"] = 37] = \"left\";\n    Keys[Keys[\"up\"] = 38] = \"up\";\n    Keys[Keys[\"right\"] = 39] = \"right\";\n    Keys[Keys[\"down\"] = 40] = \"down\";\n})(Keys || (Keys = {}));\n/**\n * @hidden\n */\nvar NavigationService = /** @class */ (function () {\n    function NavigationService(uploadService) {\n        this.uploadService = uploadService;\n        this.onActionButtonAction = new EventEmitter();\n        this.onActionButtonFocus = new EventEmitter();\n        this.onFileAction = new EventEmitter();\n        this.onFileFocus = new EventEmitter();\n        this.onTab = new EventEmitter();\n        this.onWrapperFocus = new EventEmitter();\n        this.onSelectButtonFocus = new EventEmitter();\n        this.actionButtonsVisible = false;\n        this.focused = false;\n        this._focusedIndex = -1;\n    }\n    NavigationService.prototype.action = function (event) {\n        var key = event.keyCode;\n        return this.keyBindings[key];\n    };\n    NavigationService.prototype.process = function (event) {\n        var handler = this.action(event);\n        if (handler) {\n            handler(event.shiftKey);\n        }\n    };\n    NavigationService.prototype.computeKeys = function (direction) {\n        var _this = this;\n        this.keyBindings = (_a = {},\n            _a[Keys.enter] = function () { return _this.handleEnter(); },\n            _a[Keys.esc] = function () { return _this.handleEscape(); },\n            _a[Keys.delete] = function () { return _this.handleDelete(); },\n            _a[Keys.tab] = function (shifted) { return _this.handleTab(shifted); },\n            _a[Keys.up] = function () { return _this.handleUp(); },\n            _a[Keys.down] = function () { return _this.handleDown(); },\n            _a[this.invertKeys(direction, Keys.left, Keys.right)] = function () { return _this.handleLeft(); },\n            _a[this.invertKeys(direction, Keys.right, Keys.left)] = function () { return _this.handleRight(); },\n            _a);\n        var _a;\n    };\n    NavigationService.prototype.invertKeys = function (direction, original, inverted) {\n        return direction === 'rtl' ? inverted : original;\n    };\n    NavigationService.prototype.focusSelectButton = function () {\n        this.focused = true;\n        this._focusedIndex = -1;\n        this.onSelectButtonFocus.emit();\n    };\n    NavigationService.prototype.handleEnter = function () {\n        if (this.lastIndex >= 0) {\n            if (this.focusedIndex <= this.lastFileIndex) {\n                this.onFileAction.emit(Keys.enter);\n                return;\n            }\n            if (this.actionButtonsVisible && this.focusedIndex <= this.lastIndex) {\n                this.onActionButtonAction.emit(this.focusedIndex < this.lastIndex ? \"clear\" : \"upload\");\n            }\n        }\n    };\n    NavigationService.prototype.handleDelete = function () {\n        if (this.focusedIndex >= 0 && this.focusedIndex <= this.lastFileIndex) {\n            this.onFileAction.emit(Keys.delete);\n        }\n    };\n    NavigationService.prototype.handleEscape = function () {\n        if (this.focusedIndex >= 0 && this.focusedIndex <= this.lastFileIndex) {\n            this.onFileAction.emit(Keys.esc);\n        }\n    };\n    NavigationService.prototype.handleLeft = function () {\n        if (this.actionButtonsVisible && this.focusedIndex === this.lastIndex) {\n            this.focusedIndex -= 1;\n            this.onActionButtonFocus.emit(\"clear\");\n        }\n    };\n    NavigationService.prototype.handleRight = function () {\n        if (this.actionButtonsVisible && this.focusedIndex === this.lastIndex - 1) {\n            this.focusedIndex += 1;\n            this.onActionButtonFocus.emit(\"upload\");\n        }\n    };\n    NavigationService.prototype.handleTab = function (shifted) {\n        if (this.focusedIndex >= 0 && shifted) {\n            this.focusedIndex = -1;\n            return;\n        }\n        this.onTab.emit();\n    };\n    NavigationService.prototype.handleDown = function () {\n        if (this.lastIndex >= 0 && this.focusedIndex < this.lastIndex) {\n            if (this.focusedIndex < this.lastFileIndex) {\n                this.focusedIndex += 1;\n                this.onFileFocus.emit(this.focusedIndex);\n                return;\n            }\n            if (this.actionButtonsVisible && this.focusedIndex === this.lastFileIndex) {\n                this.focusedIndex += 1;\n                this.onActionButtonFocus.emit(\"clear\");\n            }\n        }\n    };\n    NavigationService.prototype.handleUp = function () {\n        if (this.lastIndex >= 0 && this.focusedIndex > -1) {\n            this.focusedIndex -= 1;\n            if (this.focusedIndex === -1) {\n                this.onSelectButtonFocus.emit();\n                return;\n            }\n            if (this.focusedIndex <= this.lastFileIndex) {\n                this.onFileFocus.emit(this.focusedIndex);\n                return;\n            }\n            if (this.actionButtonsVisible && this.focusedIndex <= this.lastIndex) {\n                this.focusedIndex = this.lastFileIndex;\n                this.onFileFocus.emit(this.focusedIndex);\n            }\n        }\n    };\n    Object.defineProperty(NavigationService.prototype, \"focusedIndex\", {\n        get: function () {\n            return this._focusedIndex;\n        },\n        set: function (index) {\n            if (!this.focused) {\n                this.onWrapperFocus.emit();\n            }\n            this._focusedIndex = index;\n            this.focused = true;\n            if (this._focusedIndex >= 0 && this._focusedIndex <= this.lastFileIndex) {\n                this.onFileFocus.emit(index);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NavigationService.prototype, \"lastFileIndex\", {\n        get: function () {\n            return this.actionButtonsVisible ? this.lastIndex - 2 : this.lastIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NavigationService.prototype, \"lastIndex\", {\n        get: function () {\n            var fileCount = this.uploadService.files.count;\n            return this.actionButtonsVisible ? fileCount + 1 : fileCount - 1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NavigationService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NavigationService.ctorParameters = function () { return [\n        { type: UploadService, },\n    ]; };\n    return NavigationService;\n}());\nexport { NavigationService };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-upload/dist/es/navigation.service.js\n// module id = ./node_modules/@progress/kendo-angular-upload/dist/es/navigation.service.js\n// module chunks = rspackage.module","import { Directive, TemplateRef } from '@angular/core';\n/**\n * Used to customize the rendering of the files in the list ([see example]({% slug templates_upload %})).\n */\nvar FileTemplateDirective = /** @class */ (function () {\n    function FileTemplateDirective(templateRef) {\n        this.templateRef = templateRef;\n    }\n    FileTemplateDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[kendoUploadFileTemplate]' // tslint:disable-line:directive-selector-prefix\n                },] },\n    ];\n    /** @nocollapse */\n    FileTemplateDirective.ctorParameters = function () { return [\n        { type: TemplateRef, },\n    ]; };\n    return FileTemplateDirective;\n}());\nexport { FileTemplateDirective };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-upload/dist/es/templates/file-template.directive.js\n// module id = ./node_modules/@progress/kendo-angular-upload/dist/es/templates/file-template.directive.js\n// module chunks = rspackage.module","import { Directive, ViewContainerRef, Input } from '@angular/core';\n/**\n * @hidden\n */\nvar TemplateContextDirective = /** @class */ (function () {\n    function TemplateContextDirective(viewContainerRef) {\n        this.viewContainerRef = viewContainerRef;\n    }\n    Object.defineProperty(TemplateContextDirective.prototype, \"templateContext\", {\n        set: function (context) {\n            if (this.insertedViewRef) {\n                this.viewContainerRef.remove(this.viewContainerRef.indexOf(this.insertedViewRef));\n                this.insertedViewRef = undefined;\n            }\n            if (context.templateRef) {\n                this.insertedViewRef = this.viewContainerRef.createEmbeddedView(context.templateRef, context);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TemplateContextDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[templateContext]' // tslint:disable-line:directive-selector\n                },] },\n    ];\n    /** @nocollapse */\n    TemplateContextDirective.ctorParameters = function () { return [\n        { type: ViewContainerRef, },\n    ]; };\n    TemplateContextDirective.propDecorators = {\n        'templateContext': [{ type: Input },],\n    };\n    return TemplateContextDirective;\n}());\nexport { TemplateContextDirective };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-upload/dist/es/templates/template-context.directive.js\n// module id = ./node_modules/@progress/kendo-angular-upload/dist/es/templates/template-context.directive.js\n// module chunks = rspackage.module","import { Component, Input, HostBinding, ViewChild } from '@angular/core';\nimport { UploadService } from './upload.service';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\nimport { NavigationService } from './navigation.service';\n/**\n * @hidden\n */\nvar UploadActionButtonsComponent = /** @class */ (function () {\n    function UploadActionButtonsComponent(uploadService, localization, navigation) {\n        this.uploadService = uploadService;\n        this.localization = localization;\n        this.navigation = navigation;\n        this.onAction();\n        this.onFocus();\n    }\n    UploadActionButtonsComponent.prototype.onAction = function () {\n        var _this = this;\n        this.actionSubscription = this.navigation.onActionButtonAction.subscribe(function (button) {\n            if (button === \"clear\") {\n                _this.clearFiles();\n            }\n            else {\n                _this.performUpload();\n            }\n            _this.navigation.focusSelectButton();\n        });\n    };\n    UploadActionButtonsComponent.prototype.onFocus = function () {\n        var _this = this;\n        this.focusSubscription = this.navigation.onActionButtonFocus.subscribe(function (button) {\n            _this.focusButton(button);\n        });\n    };\n    UploadActionButtonsComponent.prototype.focusButton = function (button) {\n        var el = (button === \"clear\") ? this.clearButton : this.uploadButton;\n        el.nativeElement.focus();\n    };\n    UploadActionButtonsComponent.prototype.ngOnDestroy = function () {\n        this.actionSubscription.unsubscribe();\n        this.focusSubscription.unsubscribe();\n    };\n    UploadActionButtonsComponent.prototype.performUpload = function (_event) {\n        if (!this.disabled) {\n            this.uploadService.uploadFiles(this.async);\n        }\n    };\n    UploadActionButtonsComponent.prototype.clearFiles = function (_event) {\n        if (!this.disabled) {\n            this.uploadService.clearFiles();\n        }\n    };\n    UploadActionButtonsComponent.prototype.textFor = function (key) {\n        return this.localization.get(key);\n    };\n    Object.defineProperty(UploadActionButtonsComponent.prototype, \"className\", {\n        get: function () {\n            return 'k-action-buttons';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    UploadActionButtonsComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'kendo-upload-action-buttons',\n                    template: \"\\n        <button #clearButton type=\\\"button\\\" class=\\\"k-button k-clear-selected\\\"\\n            [attr.tabIndex]=\\\"-1\\\"\\n            (click)=\\\"clearFiles($event)\\\">\\n                {{textFor('clearSelectedFiles')}}\\n        </button>\\n        <button #uploadButton type=\\\"button\\\" class=\\\"k-button k-primary k-upload-selected\\\"\\n            [attr.tabIndex]=\\\"-1\\\"\\n            (click)=\\\"performUpload($event)\\\">\\n                {{textFor('uploadSelectedFiles')}}\\n        </button>\\n    \"\n                },] },\n    ];\n    /** @nocollapse */\n    UploadActionButtonsComponent.ctorParameters = function () { return [\n        { type: UploadService, },\n        { type: LocalizationService, },\n        { type: NavigationService, },\n    ]; };\n    UploadActionButtonsComponent.propDecorators = {\n        'async': [{ type: Input },],\n        'disabled': [{ type: Input },],\n        'fileList': [{ type: Input },],\n        'clearButton': [{ type: ViewChild, args: ['clearButton',] },],\n        'uploadButton': [{ type: ViewChild, args: ['uploadButton',] },],\n        'className': [{ type: HostBinding, args: ['class',] },],\n    };\n    return UploadActionButtonsComponent;\n}());\nexport { UploadActionButtonsComponent };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-upload/dist/es/upload-action-buttons.component.js\n// module id = ./node_modules/@progress/kendo-angular-upload/dist/es/upload-action-buttons.component.js\n// module chunks = rspackage.module","import * as tslib_1 from \"tslib\";\n/**\n * @hidden\n */\nvar PreventableEvent = /** @class */ (function () {\n    function PreventableEvent() {\n        this.prevented = false;\n    }\n    /**\n     * Prevents the default action for a specified event.\n     * In this way, the source component suppresses the built-in behavior that follows the event.\n     */\n    PreventableEvent.prototype.preventDefault = function () {\n        this.prevented = true;\n    };\n    /**\n     * If the event is prevented by any of its subscribers, returns `true`.\n     *\n     * @returns `true` if the default action was prevented. Otherwise, returns `false`.\n     */\n    PreventableEvent.prototype.isDefaultPrevented = function () {\n        return this.prevented;\n    };\n    return PreventableEvent;\n}());\nexport { PreventableEvent };\n/**\n * Fires when the user cancels the process of uploading a file or a batch of files.\n *\n * ```ts-no-run\n *  @Component({\n *    selector: 'my-upload',\n *    template: `\n *    <p>Click the <span class='k-icon k-i-cancel'></span> icon during upload to trigger the event</p>\n *    <kendo-upload\n *      [saveUrl]=\"uploadSaveUrl\"\n *      [removeUrl]=\"uploadRemoveUrl\"\n *      (cancel)=\"cancelEventHandler($event)\">\n *    </kendo-upload>\n *    `\n *  })\n *  export class UploadComponent {\n *    uploadSaveUrl = 'saveUrl'; // should represent an actual API endpoint\n *    uploadRemoveUrl = 'removeUrl'; // should represent an actual API endpoint\n *\n *    cancelEventHandler(e: CancelEvent) {\n *      console.log('Canceling file upload', e.files);\n *    }\n *  }\n * ```\n *\n * Arguments for the `cancel` event:\n */\nvar CancelEvent = /** @class */ (function () {\n    /**\n     * Constructs the event arguments for the `cancel` event.\n     * @param files - The list of the files that were going to be uploaded.\n     */\n    function CancelEvent(files) {\n        this.files = files;\n    }\n    return CancelEvent;\n}());\nexport { CancelEvent };\n/**\n * Fires when the **Clear** button is clicked. At this point, the selected files are about to be cleared.\n *\n * ```ts-no-run\n *  @Component({\n *    selector: 'my-upload',\n *    template: `\n *    <kendo-upload\n *      [autoUpload]=\"false\"\n *      [saveUrl]=\"uploadSaveUrl\"\n *      [removeUrl]=\"uploadRemoveUrl\"\n *      (clear)=\"clearEventHandler($event)\">\n *    </kendo-upload>\n *    `\n *  })\n *  export class UploadComponent {\n *    uploadSaveUrl = 'saveUrl'; // should represent an actual API endpoint\n *    uploadRemoveUrl = 'removeUrl'; // should represent an actual API endpoint\n *\n *    clearEventHandler(e: ClearEvent) {\n *      console.log('Clearing the file upload');\n *    }\n *  }\n * ```\n *\n */\nvar ClearEvent = /** @class */ (function (_super) {\n    tslib_1.__extends(ClearEvent, _super);\n    /**\n     * Constructs the event arguments for the `clear` event.\n     */\n    function ClearEvent() {\n        return _super.call(this) || this;\n    }\n    return ClearEvent;\n}(PreventableEvent));\nexport { ClearEvent };\n/**\n * Fires when an `upload` or `remove` operation fails.\n *\n * ```ts-no-run\n *  @Component({\n *    selector: 'my-upload',\n *    template: `\n *    <kendo-upload\n *      [saveUrl]=\"uploadSaveUrl\"\n *      [removeUrl]=\"uploadRemoveUrl\"\n *      (error)=\"errorEventHandler($event)\">\n *    </kendo-upload>\n *    `\n *  })\n *  export class UploadComponent {\n *    uploadSaveUrl = 'saveUrl'; // should represent an actual API endpoint\n *    uploadRemoveUrl = 'removeUrl'; // should represent an actual API endpoint\n *\n *    errorEventHandler(e: ErrorEvent) {\n *      console.log('An error occurred');\n *    }\n *  }\n * ```\n *\n * Arguments for the `error` event:\n */\nvar ErrorEvent = /** @class */ (function () {\n    /**\n     * Constructs the event arguments for the `error` event.\n     *\n     * @param files - The list of the files that failed to be uploaded or removed.\n     * @param operation - The operation type (`upload` or `remove`).\n     * @param response - The response object returned by the server.\n     */\n    function ErrorEvent(files, operation, response) {\n        this.files = files;\n        this.operation = operation;\n        this.response = response;\n    }\n    return ErrorEvent;\n}());\nexport { ErrorEvent };\n/**\n * Fires when an uploaded or selected file will be removed. If you cancel the event, the removal is prevented.\n *\n * ```ts-no-run\n *  @Component({\n *    selector: 'my-upload',\n *    template: `\n *    <kendo-upload\n *      [saveUrl]=\"uploadSaveUrl\"\n *      [removeUrl]=\"uploadRemoveUrl\"\n *      (remove)=\"removeEventHandler($event)\">\n *    </kendo-upload>\n *    `\n *  })\n *  export class UploadComponent {\n *    uploadSaveUrl = 'saveUrl'; // should represent an actual API endpoint\n *    uploadRemoveUrl = 'removeUrl'; // should represent an actual API endpoint\n *\n *    removeEventHandler(e: RemoveEvent) {\n *      console.log('Removing a file');\n *    }\n *  }\n * ```\n *\n * Arguments for the `remove` event:\n */\nvar RemoveEvent = /** @class */ (function (_super) {\n    tslib_1.__extends(RemoveEvent, _super);\n    /**\n     * Constructs the event arguments for the `remove` event.\n     * @param files - The list of the files that will be removed.\n     * @param headers - The headers of the request.\n     */\n    function RemoveEvent(files, headers) {\n        var _this = _super.call(this) || this;\n        _this.files = files;\n        _this.headers = headers;\n        return _this;\n    }\n    return RemoveEvent;\n}(PreventableEvent));\nexport { RemoveEvent };\n/**\n * Fires when the user selects a file or multiple files for upload. If you cancel the event, the selection is prevented.\n *\n * ```ts-no-run\n *  @Component({\n *    selector: 'my-upload',\n *    template: `\n *    <kendo-upload\n *      [saveUrl]=\"uploadSaveUrl\"\n *      [removeUrl]=\"uploadRemoveUrl\"\n *      (select)=\"selectEventHandler($event)\">\n *    </kendo-upload>\n *    `\n *  })\n *  export class UploadComponent {\n *    uploadSaveUrl = 'saveUrl'; // should represent an actual API endpoint\n *    uploadRemoveUrl = 'removeUrl'; // should represent an actual API endpoint\n *\n *    selectEventHandler(e: SelectEvent) {\n *      console.log('File selected');\n *    }\n *  }\n * ```\n *\n * Arguments for the `select` event:\n */\nvar SelectEvent = /** @class */ (function (_super) {\n    tslib_1.__extends(SelectEvent, _super);\n    /**\n     * Constructs the event arguments for the `select` event.\n     * @param files - The list of the selected files.\n     */\n    function SelectEvent(files) {\n        var _this = _super.call(this) || this;\n        _this.files = files;\n        return _this;\n    }\n    return SelectEvent;\n}(PreventableEvent));\nexport { SelectEvent };\n/**\n * Fires when the selected files are successfully uploaded or removed.\n *\n * ```ts-no-run\n *  @Component({\n *    selector: 'my-upload',\n *    template: `\n *    <kendo-upload\n *      [saveUrl]=\"uploadSaveUrl\"\n *      [removeUrl]=\"uploadRemoveUrl\"\n *      (success)=\"successEventHandler($event)\">\n *    </kendo-upload>\n *    `\n *  })\n *  export class UploadComponent {\n *    uploadSaveUrl = 'saveUrl'; // should represent an actual API endpoint\n *    uploadRemoveUrl = 'removeUrl'; // should represent an actual API endpoint\n *\n *    successEventHandler(e: SuccessEvent) {\n *      console.log('The ' + e.operation + ' was successful!');\n *    }\n *  }\n * ```\n *\n * Arguments for the `success` event:\n */\nvar SuccessEvent = /** @class */ (function (_super) {\n    tslib_1.__extends(SuccessEvent, _super);\n    /**\n     * Constructs the event arguments for the `success` event.\n     * @param files - The list of the files that were uploaded or removed.\n     * @param operation - The operation type (`upload` or `remove`).\n     * @param response - The response object returned by the server.\n     */\n    function SuccessEvent(files, operation, response) {\n        var _this = _super.call(this) || this;\n        _this.files = files;\n        _this.operation = operation;\n        _this.response = response;\n        return _this;\n    }\n    return SuccessEvent;\n}(PreventableEvent));\nexport { SuccessEvent };\n/**\n * Fires when one or more files will be uploaded. If you cancel the event, the upload is prevented.\n * You can add headers to the request.\n *\n * ```ts-no-run\n *  @Component({\n *    selector: 'my-upload',\n *    template: `\n *    <kendo-upload\n *      [saveUrl]=\"uploadSaveUrl\"\n *      [removeUrl]=\"uploadRemoveUrl\"\n *      (upload)=\"uploadEventHandler($event)\">\n *    </kendo-upload>\n *    `\n *  })\n *  export class UploadComponent {\n *    uploadSaveUrl = 'saveUrl'; // should represent an actual API endpoint\n *    uploadRemoveUrl = 'removeUrl'; // should represent an actual API endpoint\n *\n *    uploadEventHandler(e: UploadEvent) {\n *      e.headers = e.headers.append('X-Foo', 'Bar');\n *    }\n *  }\n * ```\n *\n * Arguments for the `upload` event:\n */\nvar UploadEvent = /** @class */ (function (_super) {\n    tslib_1.__extends(UploadEvent, _super);\n    /**\n     * Constructs the event arguments for the `upload` event.\n     * @param files - The list of the files that will be uploaded.\n     * @param headers - The headers of the request.\n     */\n    function UploadEvent(files, headers) {\n        var _this = _super.call(this) || this;\n        _this.files = files;\n        _this.headers = headers;\n        return _this;\n    }\n    return UploadEvent;\n}(PreventableEvent));\nexport { UploadEvent };\n/**\n * Fires while the files are being upload.\n *\n * ```ts-no-run\n *  @Component({\n *    selector: 'my-upload',\n *    template: `\n *    <kendo-upload\n *      [saveUrl]=\"uploadSaveUrl\"\n *      [removeUrl]=\"uploadRemoveUrl\"\n *      (uploadProgress)=\"uploadProgressEventHandler($event)\">\n *    </kendo-upload>\n *    `\n *  })\n *  export class UploadComponent {\n *    uploadSaveUrl = 'saveUrl'; // should represent an actual API endpoint\n *    uploadRemoveUrl = 'removeUrl'; // should represent an actual API endpoint\n *\n *    uploadProgressEventHandler(e: UploadProgressEvent) {\n *      console.log(e.files[0].name + ' is ' + e.percentComplete + ' uploaded');\n *    }\n *  }\n * ```\n *\n * Arguments for the `uploadprogress` event:\n */\nvar UploadProgressEvent = /** @class */ (function () {\n    /**\n     * Constructs the event arguments for the `uploadprogress` event.\n     * @param files - The list of files that are being uploaded.\n     * @param percentComplete - The portion that has been uploaded.\n     */\n    function UploadProgressEvent(files, percentComplete) {\n        this.files = files;\n        this.percentComplete = percentComplete;\n    }\n    return UploadProgressEvent;\n}());\nexport { UploadProgressEvent };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-upload/dist/es/upload-events.js\n// module id = ./node_modules/@progress/kendo-angular-upload/dist/es/upload-events.js\n// module chunks = rspackage.module","import { Component, Input } from '@angular/core';\nimport { FileState } from './file-info';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\n/**\n * @hidden\n */\nvar UploadStatusTotalComponent = /** @class */ (function () {\n    function UploadStatusTotalComponent(localization) {\n        this.localization = localization;\n    }\n    UploadStatusTotalComponent.prototype.ngDoCheck = function () {\n        var currentlyUploading = this.fileList.hasFileWithState([FileState.Uploading]);\n        if (this.isUploading !== currentlyUploading) {\n            this.isUploading = currentlyUploading;\n            this.isFailed = this.fileList.hasFileWithState([FileState.Failed]);\n            this.statusText = this.isUploading ? this.localization.get('headerStatusUploading')\n                : this.localization.get('headerStatusUploaded');\n        }\n    };\n    /**\n     * @hidden\n     */\n    UploadStatusTotalComponent.prototype.setStatusClasses = function () {\n        return {\n            \"k-i-checkmark\": !this.isUploading && !this.isFailed,\n            \"k-i-exception\": !this.isUploading && this.isFailed,\n            \"k-i-loading\": this.isUploading,\n            \"k-icon\": true\n        };\n    };\n    UploadStatusTotalComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'kendo-upload-status-total',\n                    template: \"\\n        <strong\\n          class=\\\"k-upload-status k-upload-status-total\\\">\\n          <span [ngClass]=\\\"setStatusClasses()\\\"></span>\\n          {{statusText}}\\n        </strong>\\n    \"\n                },] },\n    ];\n    /** @nocollapse */\n    UploadStatusTotalComponent.ctorParameters = function () { return [\n        { type: LocalizationService, },\n    ]; };\n    UploadStatusTotalComponent.propDecorators = {\n        'fileList': [{ type: Input },],\n    };\n    return UploadStatusTotalComponent;\n}());\nexport { UploadStatusTotalComponent };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-upload/dist/es/upload-status-total.component.js\n// module id = ./node_modules/@progress/kendo-angular-upload/dist/es/upload-status-total.component.js\n// module chunks = rspackage.module","/* tslint:disable: no-use-before-declare */\nimport { Component, Input, Output, EventEmitter, forwardRef, HostBinding, HostListener, ContentChild, ViewChild, ElementRef, NgZone } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { HttpHeaders } from '@angular/common/http';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { filter } from 'rxjs/operators/filter';\nimport { merge } from 'rxjs/observable/merge';\nimport { UploadService } from './upload.service';\nimport { FileState } from './file-info';\nimport { FileTemplateDirective } from './templates/file-template.directive';\nimport { Keys, NavigationService } from './navigation.service';\nimport { L10N_PREFIX, LocalizationService } from '@progress/kendo-angular-l10n';\nimport util from \"./util\";\n/**\n * @hidden\n */\nexport var UPLOAD_VALUE_ACCESSOR = {\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return UploadComponent; })\n};\n/**\n * Represents the Kendo UI Upload component for Angular.\n */\nvar UploadComponent = /** @class */ (function () {\n    function UploadComponent(uploadService, localization, navigation, _ngZone, wrapper) {\n        var _this = this;\n        this.uploadService = uploadService;\n        this.localization = localization;\n        this.navigation = navigation;\n        this._ngZone = _ngZone;\n        /**\n         * Enables the selection of multiple files.\n         * If set to `false`, only one file can be selected at a time.\n         */\n        this.multiple = true;\n        /**\n         * Disables the Upload. The default value is `false`.\n         */\n        this.disabled = false;\n        /**\n         * Toggles the visibility of the file list.\n         */\n        this.showFileList = true;\n        /**\n         * Specifies the [`tabIndex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n         */\n        this.tabIndex = 0;\n        /**\n         * @hidden\n         */\n        this.focusableId = \"k-\" + util.guid();\n        /**\n         * Fires when the user navigates outside the component.\n         */\n        this.blur = new EventEmitter();\n        /**\n         * Fires when the upload is canceled while in progress.\n         */\n        this.cancel = new EventEmitter();\n        /**\n         * Fires when the file list is about to be cleared. If prevented, the files will not be cleared.\n         */\n        this.clear = new EventEmitter();\n        /**\n         * Fires when all active uploads are completed either successfully or with errors.\n         */\n        this.complete = new EventEmitter();\n        /**\n         * Fires when an `upload` or `remove` operation has failed.\n         */\n        this.error = new EventEmitter();\n        /**\n         * Fires when the component is focused.\n         */\n        this.focus = new EventEmitter();\n        /**\n         * Fires when an uploaded file is about to be removed. If prevented, the files will remain in the list.\n         */\n        this.remove = new EventEmitter();\n        /**\n         * Fires when files are selected. If prevented, the selected files will not be added to the list.\n         */\n        this.select = new EventEmitter();\n        /**\n         * Fires when an `upload` or `remove` operation is successfully completed.\n         */\n        this.success = new EventEmitter();\n        /**\n         * Fires when one or more files are about to be uploaded. If prevented, the files will neither be uploaded, nor added to the file list.\n         */\n        this.upload = new EventEmitter();\n        /**\n         * Fires when one or more files are being uploaded.\n         */\n        this.uploadProgress = new EventEmitter();\n        /**\n         * Fires when the value of the component has changed as a result of a successful `upload`, `remove` or `clear` operation.\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.async = {\n            autoUpload: true,\n            batch: false,\n            removeField: \"fileNames\",\n            removeHeaders: new HttpHeaders(),\n            removeMethod: \"POST\",\n            removeUrl: \"\",\n            responseType: \"json\",\n            saveField: \"files\",\n            saveHeaders: new HttpHeaders(),\n            saveMethod: \"POST\",\n            saveUrl: \"\",\n            withCredentials: true\n        };\n        /**\n         * @hidden\n         */\n        this._restrictions = {\n            allowedExtensions: [],\n            maxFileSize: 0,\n            minFileSize: 0\n        };\n        this.onTouchedCallback = function (_) { };\n        this.onChangeCallback = function (_) { };\n        this.fileList = this.uploadService.files;\n        this.localizationChangeSubscription = localization.changes.subscribe(function (_a) {\n            var rtl = _a.rtl;\n            _this.direction = rtl ? 'rtl' : 'ltr';\n            _this.navigation.computeKeys(_this.direction);\n        });\n        this.direction = localization.rtl ? 'rtl' : 'ltr';\n        this.navigation.computeKeys(this.direction);\n        this.wrapper = wrapper.nativeElement;\n        this.subscribeBlur();\n        this.subscribeFocus();\n        this.onCancel();\n        this.onChange();\n        this.onClear();\n        this.onComplete();\n        this.onError();\n        this.onRemove();\n        this.onSelect();\n        this.onSuccess();\n        this.onUpload();\n        this.onUploadProgress();\n    }\n    Object.defineProperty(UploadComponent.prototype, \"autoUpload\", {\n        get: function () { return this.async.autoUpload; },\n        /**\n         * By default, the selected files are immediately uploaded. To change this behavior, set `autoUpload` to `false`.\n         */\n        set: function (autoUpload) { this.async.autoUpload = autoUpload; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UploadComponent.prototype, \"batch\", {\n        get: function () { return this.async.batch; },\n        /**\n         * When enabled, all files in the selection are uploaded in one request.\n         * Any files that are selected one after the other are uploaded in separate requests.\n         */\n        set: function (batch) { this.async.batch = batch; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UploadComponent.prototype, \"withCredentials\", {\n        get: function () { return this.async.withCredentials; },\n        /**\n         * Configures whether credentials (cookies, headers) will be sent for cross-site requests.\n         * The default values is `true`.\n         * Setting `withCredentials` has no effect on same-site requests.\n         * To add credentials to the request, use the `saveHeaders` or `removeHeaders` property,\n         * or the [`upload`]({% slug api_upload_uploadevent %}) event.\n         */\n        set: function (withCredentials) { this.async.withCredentials = withCredentials; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UploadComponent.prototype, \"saveField\", {\n        get: function () { return this.async.saveField; },\n        /**\n         * Sets the [`FormData`](https://developer.mozilla.org/en-US/docs/Web/API/FormData) key which contains the files submitted to `saveUrl`.\n         * The default value is `files`.\n         */\n        set: function (saveField) { this.async.saveField = saveField; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UploadComponent.prototype, \"saveHeaders\", {\n        get: function () { return this.async.saveHeaders; },\n        /**\n         * Configures the [`HttpHeaders`](https://angular.io/api/common/http/HttpHeaders)\n         * that are attached to each upload request.\n         */\n        set: function (saveHeaders) { this.async.saveHeaders = saveHeaders; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UploadComponent.prototype, \"saveMethod\", {\n        get: function () { return this.async.saveMethod; },\n        /**\n         * Sets the [`RequestMethod`](https://angular.io/docs/ts/latest/api/http/index/RequestMethod-enum.html) of the upload request.\n         * The default value is `POST`.\n         */\n        set: function (saveMethod) { this.async.saveMethod = saveMethod; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UploadComponent.prototype, \"saveUrl\", {\n        get: function () { return this.async.saveUrl; },\n        /**\n         * Sets the URL of the endpoint for the upload request.\n         * The request [`FormData`](https://developer.mozilla.org/en-US/docs/Web/API/FormData) key is named after the `saveField` property.\n         * It contains the list of files to be uploaded.\n         */\n        set: function (saveUrl) { this.async.saveUrl = saveUrl; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UploadComponent.prototype, \"responseType\", {\n        get: function () { return this.async.responseType; },\n        /**\n         * Sets the expected [`response type`](https://angular.io/api/common/http/HttpRequest#responseType) of the server.\n         * It is used to parse the response appropriately.\n         * The default value is `json`.\n         */\n        set: function (responseType) { this.async.responseType = responseType; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UploadComponent.prototype, \"removeField\", {\n        get: function () { return this.async.removeField; },\n        /**\n         * Sets the [`FormData`](https://developer.mozilla.org/en-US/docs/Web/API/FormData) key\n         * which contains the list of file names that are submitted to `removeUrl`.\n         * The default value is `fileNames`.\n         */\n        set: function (removeField) { this.async.removeField = removeField; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UploadComponent.prototype, \"removeHeaders\", {\n        get: function () { return this.async.removeHeaders; },\n        /**\n         * Configures the [`HttpHeaders`](https://angular.io/api/common/http/HttpHeaders)\n         * that are attached to each `remove` request.\n         */\n        set: function (removeHeaders) { this.async.removeHeaders = removeHeaders; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UploadComponent.prototype, \"removeMethod\", {\n        get: function () { return this.async.removeMethod; },\n        /**\n         * Sets the [`RequestMethod`](https://angular.io/docs/ts/latest/api/http/index/RequestMethod-enum.html) of the `remove` request.\n         * The default value is `POST`.\n         */\n        set: function (removeMethod) { this.async.removeMethod = removeMethod; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UploadComponent.prototype, \"removeUrl\", {\n        get: function () { return this.async.removeUrl; },\n        /**\n         * Sets the URL of the endpoint for the `remove` request.\n         * The [`FormData`](https://developer.mozilla.org/en-US/docs/Web/API/FormData) request key is named after the `removeField` property.\n         * It contains the list of file names which will be removed.\n         */\n        set: function (removeUrl) { this.async.removeUrl = removeUrl; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UploadComponent.prototype, \"restrictions\", {\n        get: function () {\n            return this._restrictions;\n        },\n        /**\n         * Sets the restrictions for selected files. For more information,\n         * refer to the API documentation on [`FileRestrictions`]({% slug api_upload_filerestrictions %}).\n         */\n        set: function (restrictions) {\n            var parsedRestrictions = Object.assign({}, this._restrictions, restrictions);\n            this._restrictions = parsedRestrictions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UploadComponent.prototype, \"dir\", {\n        get: function () {\n            return this.direction;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UploadComponent.prototype, \"hostDefaultClasses\", {\n        get: function () {\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UploadComponent.prototype, \"hostDisabledClass\", {\n        get: function () {\n            return this.disabled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    UploadComponent.prototype.ngOnDestroy = function () {\n        this.fileList.clear();\n        if (this.blurSubscription) {\n            this.blurSubscription.unsubscribe();\n        }\n        if (this.wrapperFocusSubscription) {\n            this.wrapperFocusSubscription.unsubscribe();\n        }\n        if (this.selectButtonFocusSubscription) {\n            this.selectButtonFocusSubscription.unsubscribe();\n        }\n        if (this.cancelSubscription) {\n            this.cancelSubscription.unsubscribe();\n        }\n        if (this.changeSubscription) {\n            this.changeSubscription.unsubscribe();\n        }\n        if (this.clearSubscription) {\n            this.clearSubscription.unsubscribe();\n        }\n        if (this.completeSubscription) {\n            this.completeSubscription.unsubscribe();\n        }\n        if (this.errorSubscription) {\n            this.errorSubscription.unsubscribe();\n        }\n        if (this.removeSubscription) {\n            this.removeSubscription.unsubscribe();\n        }\n        if (this.selectSubscription) {\n            this.selectSubscription.unsubscribe();\n        }\n        if (this.successSubscription) {\n            this.successSubscription.unsubscribe();\n        }\n        if (this.successSubscription) {\n            this.uploadSubscription.unsubscribe();\n        }\n        if (this.uploadProgressSubscription) {\n            this.uploadProgressSubscription.unsubscribe();\n        }\n        if (this.localizationChangeSubscription) {\n            this.localizationChangeSubscription.unsubscribe();\n        }\n    };\n    /**\n     * @hidden\n     */\n    UploadComponent.prototype.handleKeydown = function (event) {\n        if (this.disabled) {\n            return;\n        }\n        if ((event.keyCode === Keys.enter || event.keyCode === Keys.space) &&\n            event.target === this.fileSelectButton.nativeElement) {\n            event.preventDefault();\n            this.fileSelect.nativeElement.click();\n            return;\n        }\n        if (util.hasClasses(event.target, util.UPLOAD_CLASSES) ||\n            (!util.isFocusable(event.target) && !util.hasClasses(event.target, util.IGNORE_TARGET_CLASSSES))) {\n            this.navigation.process(event);\n        }\n    };\n    /**\n     * @hidden\n     */\n    UploadComponent.prototype.writeValue = function (newValue) {\n        var isValid = true;\n        if (newValue instanceof Array) {\n            newValue.forEach(function (file) {\n                if (!util.validateInitialFileInfo(file)) {\n                    isValid = false;\n                }\n            });\n            if (isValid) {\n                this.uploadService.addInitialFiles(newValue);\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    UploadComponent.prototype.registerOnChange = function (fn) {\n        this.onChangeCallback = fn;\n    };\n    /**\n     * @hidden\n     */\n    UploadComponent.prototype.registerOnTouched = function (fn) {\n        this.onTouchedCallback = fn;\n    };\n    /**\n     * @hidden\n     */\n    UploadComponent.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    /**\n     * @hidden\n     */\n    UploadComponent.prototype.setSelectButtonClasses = function () {\n        return {\n            \"k-button\": true,\n            \"k-state-focused\": this.fileSelectButton.nativeElement.focused,\n            \"k-upload-button\": true\n        };\n    };\n    /**\n     * @hidden\n     */\n    UploadComponent.prototype.setSelectButtonTabIndex = function () {\n        return this.disabled ? undefined : this.tabIndex;\n    };\n    /**\n     * @hidden\n     */\n    UploadComponent.prototype.onFileSelectButtonFocus = function (_event) {\n        if (!this.navigation.focused) {\n            this.navigation.focusedIndex = -1;\n        }\n    };\n    /**\n     * @hidden\n     */\n    UploadComponent.prototype.showActionButtons = function () {\n        var areVisible = this.fileList.filesToUpload.length > 0 && !this.async.autoUpload;\n        this.navigation.actionButtonsVisible = areVisible;\n        return areVisible;\n    };\n    /**\n     * @hidden\n     */\n    UploadComponent.prototype.showTotalStatus = function () {\n        var states = [\n            FileState.Uploaded,\n            FileState.Uploading,\n            FileState.Failed\n        ];\n        if (this.fileList.count === 0) {\n            return false;\n        }\n        if (this.fileList.hasFileWithState(states)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @hidden\n     */\n    UploadComponent.prototype.textFor = function (key) {\n        return this.localization.get(key);\n    };\n    /**\n     * Focuses the underlying input element.\n     */\n    UploadComponent.prototype.focusComponent = function () {\n        var _this = this;\n        setTimeout(function () {\n            _this.fileSelectButton.nativeElement.focus();\n        });\n    };\n    /**\n     * Blurs the Upload if it was previously focused.\n     */\n    UploadComponent.prototype.blurComponent = function () {\n        if (this.navigation.focused) {\n            this.navigation.focused = false;\n            document.activeElement.blur();\n            this.blur.emit();\n        }\n    };\n    /**\n     * Triggers the removal of a file or a batch of files.\n     * @param uid - The `uid` of the file or a batch of files that will be removed.\n     */\n    UploadComponent.prototype.removeFilesByUid = function (uid) {\n        this.uploadService.removeFiles(uid, this.async);\n    };\n    /**\n     * Triggers another upload attempt of an unsuccessfully uploaded file or a batch of files.\n     * @param uid - The `uid` of the file or a batch of files to be retried.\n     */\n    UploadComponent.prototype.retryUploadByUid = function (uid) {\n        this.uploadService.retryFiles(uid, this.async);\n    };\n    /**\n     * Cancels the upload of a file or a batch of files.\n     * @param uid - The `uid` of the file or a batch of files that will be canceled.\n     */\n    UploadComponent.prototype.cancelUploadByUid = function (uid) {\n        this.uploadService.cancelFiles(uid);\n    };\n    /**\n     * Uploads the currently selected files which pass the set restrictions.\n     */\n    UploadComponent.prototype.uploadFiles = function () {\n        if (this.fileList.filesToUpload.length) {\n            this.uploadService.uploadFiles(this.async);\n        }\n    };\n    UploadComponent.prototype.subscribeBlur = function () {\n        var _this = this;\n        if (!util.isDocumentAvailable()) {\n            return;\n        }\n        this._ngZone.runOutsideAngular(function () {\n            _this.documentClick = fromEvent(document, 'click').pipe(filter(function (event) {\n                return !(_this.wrapper !== event.target && _this.wrapper.contains(event.target));\n            }));\n            _this.blurSubscription = merge(_this.documentClick, _this.navigation.onTab).subscribe(function () { return _this._ngZone.run(function () {\n                if (_this.navigation.focused) {\n                    _this.navigation.focused = false;\n                    _this.onTouchedCallback();\n                    _this.blur.emit();\n                }\n            }); });\n        });\n    };\n    UploadComponent.prototype.subscribeFocus = function () {\n        var _this = this;\n        this.wrapperFocusSubscription = this.navigation.onWrapperFocus.subscribe(function () {\n            _this.focus.emit();\n        });\n        this.selectButtonFocusSubscription = this.navigation.onSelectButtonFocus.subscribe(function () {\n            _this.fileSelectButton.nativeElement.focus();\n        });\n    };\n    UploadComponent.prototype.onCancel = function () {\n        var _this = this;\n        this.cancelSubscription = this.uploadService.cancelEvent.subscribe(function (args) {\n            _this.cancel.emit(args);\n        });\n    };\n    UploadComponent.prototype.onChange = function () {\n        var _this = this;\n        this.changeSubscription = this.uploadService.changeEvent.subscribe(function (files) {\n            _this.onChangeCallback(files);\n            _this.valueChange.emit(files);\n        });\n    };\n    UploadComponent.prototype.onClear = function () {\n        var _this = this;\n        this.clearSubscription = this.uploadService.clearEvent.subscribe(function (args) {\n            _this.clear.emit(args);\n        });\n    };\n    UploadComponent.prototype.onComplete = function () {\n        var _this = this;\n        this.completeSubscription = this.uploadService.completeEvent.subscribe(function () {\n            _this.complete.emit();\n        });\n    };\n    UploadComponent.prototype.onError = function () {\n        var _this = this;\n        this.errorSubscription = this.uploadService.errorEvent.subscribe(function (args) {\n            _this.error.emit(args);\n        });\n    };\n    UploadComponent.prototype.onRemove = function () {\n        var _this = this;\n        this.removeSubscription = this.uploadService.removeEvent.subscribe(function (args) {\n            _this.remove.emit(args);\n        });\n    };\n    UploadComponent.prototype.onSelect = function () {\n        var _this = this;\n        this.selectSubscription = this.uploadService.selectEvent.subscribe(function (args) {\n            _this.select.emit(args);\n        });\n    };\n    UploadComponent.prototype.onSuccess = function () {\n        var _this = this;\n        this.successSubscription = this.uploadService.successEvent.subscribe(function (args) {\n            _this.success.emit(args);\n        });\n    };\n    UploadComponent.prototype.onUpload = function () {\n        var _this = this;\n        this.uploadSubscription = this.uploadService.uploadEvent.subscribe(function (args) {\n            _this.upload.emit(args);\n        });\n    };\n    UploadComponent.prototype.onUploadProgress = function () {\n        var _this = this;\n        this.uploadProgressSubscription = this.uploadService.uploadProgressEvent.subscribe(function (args) {\n            _this.uploadProgress.emit(args);\n        });\n    };\n    UploadComponent.decorators = [\n        { type: Component, args: [{\n                    exportAs: 'kendoUpload',\n                    providers: [\n                        LocalizationService,\n                        NavigationService,\n                        UploadService,\n                        UPLOAD_VALUE_ACCESSOR,\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.upload'\n                        }\n                    ],\n                    selector: 'kendo-upload',\n                    template: \"\\n    <ng-container kendoUploadLocalizedMessages\\n      i18n-cancel=\\\"kendo.upload.cancel|The text for the Cancel button\\\"\\n      cancel=\\\"Cancel\\\"\\n\\n      i18n-clearSelectedFiles=\\\"kendo.upload.clearSelectedFiles|The text for the Clear button\\\"\\n      clearSelectedFiles=\\\"Clear\\\"\\n\\n      i18n-dropFilesHere=\\\"kendo.upload.dropFilesHere|The drop zone hint\\\"\\n      dropFilesHere=\\\"Drop files here to upload\\\"\\n\\n      i18n-headerStatusUploaded=\\\"kendo.upload.headerStatusUploaded|The header status message after file upload completion\\\"\\n      headerStatusUploaded=\\\"Done\\\"\\n\\n      i18n-headerStatusUploading=\\\"kendo.upload.headerStatusUploading|The header status message during file upload\\\"\\n      headerStatusUploading=\\\"Uploading...\\\"\\n\\n      i18n-invalidFileExtension=\\\"kendo.upload.invalidFileExtension|The text for the invalid allowed extensions restriction message\\\"\\n      invalidFileExtension=\\\"File type not allowed.\\\"\\n\\n      i18n-invalidFiles=\\\"kendo.upload.invalidFiles|The text for the invalid files message\\\"\\n      invalidFiles=\\\"Invalid file(s). Please check file upload requirements.\\\"\\n\\n      i18n-invalidMaxFileSize=\\\"kendo.upload.invalidMaxFileSize|The text for the invalid max file size restriction message\\\"\\n      invalidMaxFileSize=\\\"File size too large.\\\"\\n\\n      i18n-invalidMinFileSize=\\\"kendo.upload.invalidMinFileSize|The text for the invalid min file size restriction message\\\"\\n      invalidMinFileSize=\\\"File size too small.\\\"\\n\\n      i18n-remove=\\\"kendo.upload.remove|The text for the Remove button\\\"\\n      remove=\\\"Remove\\\"\\n\\n      i18n-retry=\\\"kendo.upload.retry|The text for the Retry button\\\"\\n      retry=\\\"Retry\\\"\\n\\n      i18n-select=\\\"kendo.upload.select|The text for the Select button\\\"\\n      select=\\\"Select files...\\\"\\n\\n      i18n-uploadSelectedFiles=\\\"kendo.upload.uploadSelectedFiles|The text for the Upload files button\\\"\\n      uploadSelectedFiles=\\\"Upload\\\"\\n    >\\n    </ng-container>\\n    <div kendoUploadDropzone\\n      [async]=\\\"async\\\"\\n      [restrictions]=\\\"restrictions\\\"\\n      [multiple]=\\\"multiple\\\"\\n      [disabled]=\\\"disabled\\\">\\n        <div role=\\\"button\\\" #fileSelectButton\\n             [id]=\\\"focusableId\\\"\\n             [ngClass]='setSelectButtonClasses()'\\n             [attr.aria-label]=\\\"textFor('select')\\\"\\n             [attr.tabIndex]=\\\"setSelectButtonTabIndex()\\\"\\n             (focus)=\\\"onFileSelectButtonFocus($event)\\\">\\n          <input #fileSelect kendoFileSelect\\n            [async]=\\\"async\\\"\\n            [attr.accept]=\\\"accept ? accept : null\\\"\\n            [dir]=\\\"direction\\\"\\n            [restrictions]=\\\"restrictions\\\"\\n            [multiple]=\\\"multiple\\\"\\n            [disabled]=\\\"disabled\\\" />\\n          <span>{{textFor('select')}}</span>\\n        </div>\\n        <div class=\\\"k-dropzone-hint\\\">{{textFor('dropFilesHere')}}</div>\\n        <kendo-upload-status-total\\n          *ngIf=\\\"showTotalStatus()\\\"\\n          [fileList]=\\\"fileList\\\">\\n        </kendo-upload-status-total>\\n    </div>\\n    <ul kendo-upload-file-list\\n        class=\\\"k-upload-files k-reset\\\"\\n        *ngIf=\\\"showFileList && fileList.count > 0\\\"\\n        [async]=\\\"async\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [fileList]=\\\"fileList.files\\\"\\n        [fileTemplate]=\\\"fileTemplate\\\">\\n    </ul>\\n    <kendo-upload-action-buttons\\n      *ngIf=\\\"showActionButtons()\\\"\\n      [async]=\\\"async\\\"\\n      [disabled]=\\\"disabled\\\"\\n      [fileList]=\\\"fileList\\\">\\n    </kendo-upload-action-buttons>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    UploadComponent.ctorParameters = function () { return [\n        { type: UploadService, },\n        { type: LocalizationService, },\n        { type: NavigationService, },\n        { type: NgZone, },\n        { type: ElementRef, },\n    ]; };\n    UploadComponent.propDecorators = {\n        'autoUpload': [{ type: Input },],\n        'batch': [{ type: Input },],\n        'withCredentials': [{ type: Input },],\n        'saveField': [{ type: Input },],\n        'saveHeaders': [{ type: Input },],\n        'saveMethod': [{ type: Input },],\n        'saveUrl': [{ type: Input },],\n        'responseType': [{ type: Input },],\n        'removeField': [{ type: Input },],\n        'removeHeaders': [{ type: Input },],\n        'removeMethod': [{ type: Input },],\n        'removeUrl': [{ type: Input },],\n        'multiple': [{ type: Input },],\n        'disabled': [{ type: Input },],\n        'showFileList': [{ type: Input },],\n        'tabIndex': [{ type: Input },],\n        'accept': [{ type: Input },],\n        'restrictions': [{ type: Input },],\n        'focusableId': [{ type: Input },],\n        'fileTemplate': [{ type: ContentChild, args: [FileTemplateDirective,] },],\n        'fileSelect': [{ type: ViewChild, args: ['fileSelect',] },],\n        'fileSelectButton': [{ type: ViewChild, args: ['fileSelectButton',] },],\n        'blur': [{ type: Output },],\n        'cancel': [{ type: Output },],\n        'clear': [{ type: Output },],\n        'complete': [{ type: Output },],\n        'error': [{ type: Output },],\n        'focus': [{ type: Output },],\n        'remove': [{ type: Output },],\n        'select': [{ type: Output },],\n        'success': [{ type: Output },],\n        'upload': [{ type: Output },],\n        'uploadProgress': [{ type: Output },],\n        'valueChange': [{ type: Output },],\n        'dir': [{ type: HostBinding, args: ['attr.dir',] },],\n        'hostDefaultClasses': [{ type: HostBinding, args: ['class.k-widget',] }, { type: HostBinding, args: ['class.k-upload',] }, { type: HostBinding, args: ['class.k-header',] },],\n        'hostDisabledClass': [{ type: HostBinding, args: ['class.k-state-disabled',] },],\n        'handleKeydown': [{ type: HostListener, args: ['keydown', ['$event'],] },],\n    };\n    return UploadComponent;\n}());\nexport { UploadComponent };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-upload/dist/es/upload.component.js\n// module id = ./node_modules/@progress/kendo-angular-upload/dist/es/upload.component.js\n// module chunks = rspackage.module","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UploadComponent } from './upload.component';\nimport { DropZoneDirective } from './dropzone.directive';\nimport { FileListComponent } from './file-list.component';\nimport { FileListItemDirective } from './file-list-item';\nimport { FileListSingleItemComponent } from './file-list-single-item.component';\nimport { FileListMultipleItemsComponent } from './file-list-multiple-items.component';\nimport { FileListItemActionButtonComponent } from './file-list-item-action-button.component';\nimport { FileTemplateDirective } from './templates/file-template.directive';\nimport { FileSelectDirective } from './file-select.directive';\nimport { UploadActionButtonsComponent } from './upload-action-buttons.component';\nimport { UploadStatusTotalComponent } from './upload-status-total.component';\nimport { TemplateContextDirective } from './templates/template-context.directive';\nimport { LocalizedMessagesDirective } from './localization/localized-messages.directive';\nimport { CustomMessagesComponent } from './localization/custom-messages.component';\nvar declarations = [\n    CustomMessagesComponent,\n    DropZoneDirective,\n    FileListComponent,\n    FileListItemDirective,\n    FileListItemActionButtonComponent,\n    FileListMultipleItemsComponent,\n    FileListSingleItemComponent,\n    FileSelectDirective,\n    FileTemplateDirective,\n    LocalizedMessagesDirective,\n    TemplateContextDirective,\n    UploadComponent,\n    UploadActionButtonsComponent,\n    UploadStatusTotalComponent\n];\n/**\n * Represents the [NgModule](https://angular.io/docs/ts/latest/guide/ngmodule.html) definition for the Upload component.\n */\nvar UploadModule = /** @class */ (function () {\n    function UploadModule() {\n    }\n    UploadModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [declarations],\n                    exports: [UploadComponent, FileTemplateDirective, CustomMessagesComponent],\n                    imports: [CommonModule]\n                },] },\n    ];\n    /** @nocollapse */\n    UploadModule.ctorParameters = function () { return []; };\n    return UploadModule;\n}());\nexport { UploadModule };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-upload/dist/es/upload.module.js\n// module id = ./node_modules/@progress/kendo-angular-upload/dist/es/upload.module.js\n// module chunks = rspackage.module","import { Injectable, EventEmitter } from '@angular/core';\nimport { FileState } from './file-info';\nimport { FileMap } from './file-map';\nimport { HttpClient, HttpRequest, HttpHeaders, HttpResponse, HttpEventType } from '@angular/common/http';\nimport { CancelEvent, ClearEvent, ErrorEvent, RemoveEvent, SelectEvent, SuccessEvent, UploadEvent, UploadProgressEvent } from './upload-events';\nimport util from \"./util\";\n/**\n * @hidden\n */\nvar UploadService = /** @class */ (function () {\n    function UploadService(http) {\n        this.http = http;\n        this.cancelEvent = new EventEmitter();\n        this.clearEvent = new EventEmitter();\n        this.completeEvent = new EventEmitter();\n        this.errorEvent = new EventEmitter();\n        this.removeEvent = new EventEmitter();\n        this.selectEvent = new EventEmitter();\n        this.successEvent = new EventEmitter();\n        this.uploadEvent = new EventEmitter();\n        this.uploadProgressEvent = new EventEmitter();\n        // Required for the `ControlValueAccessor` integration\n        this.changeEvent = new EventEmitter();\n        this.fileList = new FileMap();\n    }\n    Object.defineProperty(UploadService.prototype, \"files\", {\n        get: function () {\n            return this.fileList;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    UploadService.prototype.onChange = function () {\n        var files = this.fileList.filesFlat.filter(function (file) {\n            return file.state === FileState.Initial ||\n                file.state === FileState.Uploaded;\n        });\n        this.changeEvent.emit(files.length > 0 ? files : null);\n    };\n    UploadService.prototype.addFiles = function (files, async) {\n        var selectEventArgs = new SelectEvent(files);\n        this.selectEvent.emit(selectEventArgs);\n        if (!selectEventArgs.isDefaultPrevented()) {\n            for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {\n                var file = files_1[_i];\n                this.fileList.add(file);\n            }\n            if (async.autoUpload) {\n                this.uploadFiles(async);\n            }\n        }\n    };\n    UploadService.prototype.addInitialFiles = function (initialFiles) {\n        var _this = this;\n        this.fileList.clear();\n        initialFiles.forEach(function (file) {\n            var fakeFile = util.getInitialFileInfo(file);\n            _this.fileList.add(fakeFile);\n        });\n    };\n    UploadService.prototype.removeFiles = function (uid, async) {\n        var removedFiles = this.fileList.get(uid);\n        // Clone the Headers so that the default ones are not overridden\n        var removeEventArgs = new RemoveEvent(removedFiles, this.cloneRequestHeaders(async.removeHeaders));\n        this.removeEvent.emit(removeEventArgs);\n        if (!removeEventArgs.isDefaultPrevented()) {\n            if (removedFiles[0].state === FileState.Uploaded ||\n                removedFiles[0].state === FileState.Initial) {\n                this.performRemove(removedFiles, async, removeEventArgs);\n            }\n            else {\n                this.fileList.remove(uid);\n            }\n        }\n    };\n    UploadService.prototype.cancelFiles = function (uid) {\n        var canceledFiles = this.fileList.get(uid);\n        var cancelEventArgs = new CancelEvent(canceledFiles);\n        this.cancelEvent.emit(cancelEventArgs);\n        for (var _i = 0, canceledFiles_1 = canceledFiles; _i < canceledFiles_1.length; _i++) {\n            var file = canceledFiles_1[_i];\n            if (file.httpSubscription) {\n                file.httpSubscription.unsubscribe();\n            }\n        }\n        this.fileList.remove(uid);\n    };\n    UploadService.prototype.clearFiles = function () {\n        var clearEventArgs = new ClearEvent();\n        this.clearEvent.emit(clearEventArgs);\n        if (!clearEventArgs.isDefaultPrevented()) {\n            var triggerChange = this.fileList.hasFileWithState([FileState.Initial, FileState.Uploaded]);\n            this.fileList.clear();\n            if (triggerChange) {\n                this.onChange();\n            }\n        }\n    };\n    UploadService.prototype.uploadFiles = function (async) {\n        var allFilesToUpload = this.fileList.filesToUpload;\n        this._uploadFiles(allFilesToUpload, async);\n    };\n    UploadService.prototype.retryFiles = function (uid, async) {\n        var filesToRetry = [this.fileList.get(uid)];\n        this._uploadFiles(filesToRetry, async);\n    };\n    UploadService.prototype._uploadFiles = function (allFiles, async) {\n        var _loop_1 = function (filesToUpload) {\n            // Clone the Headers so that the default ones are not overridden\n            var uploadEventArgs = new UploadEvent(filesToUpload, this_1.cloneRequestHeaders(async.saveHeaders));\n            this_1.uploadEvent.emit(uploadEventArgs);\n            if (!uploadEventArgs.isDefaultPrevented()) {\n                this_1.fileList.setFilesState(filesToUpload, FileState.Uploading);\n                var httpSubcription_1 = this_1.performUpload(filesToUpload, async, uploadEventArgs);\n                filesToUpload.forEach(function (file) {\n                    file.httpSubscription = httpSubcription_1;\n                });\n            }\n            else {\n                this_1.fileList.remove(filesToUpload[0].uid);\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, allFiles_1 = allFiles; _i < allFiles_1.length; _i++) {\n            var filesToUpload = allFiles_1[_i];\n            _loop_1(filesToUpload);\n        }\n    };\n    UploadService.prototype.performRemove = function (files, async, removeEventArgs) {\n        var _this = this;\n        var fileNames = files.map(function (file) {\n            return file.name;\n        });\n        var formData = this.populateRemoveFormData(fileNames, async.removeField, removeEventArgs.data);\n        var options = this.populateRequestOptions(async, removeEventArgs.headers);\n        var removeRequest = new HttpRequest(async.removeMethod, async.removeUrl, formData, options);\n        this.http.request(removeRequest)\n            .subscribe(function (success) {\n            _this.onSuccess(success, files, \"remove\");\n        }, function (error) {\n            _this.onError(error, files, \"remove\");\n        });\n    };\n    UploadService.prototype.performUpload = function (files, async, uploadEventArgs) {\n        var _this = this;\n        var formData = this.populateUploadFormData(files, async.saveField, uploadEventArgs.data);\n        var options = this.populateRequestOptions(async, uploadEventArgs.headers);\n        var uploadRequest = new HttpRequest(async.saveMethod, async.saveUrl, formData, options);\n        var httpSubscription = this.http.request(uploadRequest)\n            .subscribe(function (event) {\n            if (event.type === HttpEventType.UploadProgress) {\n                _this.onProgress(event, files);\n            }\n            else if (event instanceof HttpResponse) {\n                _this.onSuccess(event, files, \"upload\");\n                _this.checkAllComplete();\n            }\n        }, function (error) {\n            _this.onError(error, files, \"upload\");\n            _this.checkAllComplete();\n        });\n        return httpSubscription;\n    };\n    UploadService.prototype.onSuccess = function (successResponse, files, operation) {\n        var successArgs = new SuccessEvent(files, operation, successResponse);\n        this.successEvent.emit(successArgs);\n        if (operation === \"upload\") {\n            this.fileList.setFilesState(files, successArgs.isDefaultPrevented() ? FileState.Failed : FileState.Uploaded);\n        }\n        else {\n            if (!successArgs.isDefaultPrevented()) {\n                this.fileList.remove(files[0].uid);\n            }\n        }\n        if (!successArgs.isDefaultPrevented()) {\n            this.onChange();\n        }\n    };\n    UploadService.prototype.onError = function (errorResponse, files, operation) {\n        var errorArgs = new ErrorEvent(files, operation, errorResponse);\n        this.errorEvent.emit(errorArgs);\n        if (operation === \"upload\") {\n            this.fileList.setFilesState(files, FileState.Failed);\n        }\n    };\n    UploadService.prototype.onProgress = function (event, files) {\n        var percentComplete = Math.round(100 * event.loaded / event.total);\n        var progressArgs = new UploadProgressEvent(files, percentComplete < 100 ? percentComplete : 100);\n        this.uploadProgressEvent.emit(progressArgs);\n    };\n    UploadService.prototype.checkAllComplete = function () {\n        if (!this.fileList.hasFileWithState([FileState.Selected, FileState.Uploading])) {\n            this.completeEvent.emit();\n        }\n    };\n    UploadService.prototype.cloneRequestHeaders = function (headers) {\n        var cloned = {};\n        headers.keys().forEach(function (key) {\n            cloned[key] = headers.get(key);\n        });\n        return new HttpHeaders(cloned);\n    };\n    UploadService.prototype.populateRequestOptions = function (async, headers) {\n        return {\n            headers: headers,\n            reportProgress: true,\n            responseType: async.responseType,\n            withCredentials: async.withCredentials\n        };\n    };\n    UploadService.prototype.populateUploadFormData = function (files, saveField, clientData) {\n        var data = new FormData();\n        this.populateClientFormData(data, clientData);\n        for (var _i = 0, files_2 = files; _i < files_2.length; _i++) {\n            var file = files_2[_i];\n            data.append(saveField, file.rawFile);\n        }\n        return data;\n    };\n    UploadService.prototype.populateRemoveFormData = function (fileNames, removeField, clientData) {\n        var data = new FormData();\n        this.populateClientFormData(data, clientData);\n        for (var _i = 0, fileNames_1 = fileNames; _i < fileNames_1.length; _i++) {\n            var fileName = fileNames_1[_i];\n            data.append(removeField, fileName);\n        }\n        return data;\n    };\n    UploadService.prototype.populateClientFormData = function (data, clientData) {\n        for (var key in clientData) {\n            if (clientData.hasOwnProperty(key)) {\n                data.append(key, clientData[key]);\n            }\n        }\n    };\n    UploadService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    UploadService.ctorParameters = function () { return [\n        { type: HttpClient, },\n    ]; };\n    return UploadService;\n}());\nexport { UploadService };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-upload/dist/es/upload.service.js\n// module id = ./node_modules/@progress/kendo-angular-upload/dist/es/upload.service.js\n// module chunks = rspackage.module","/* tslint:disable: no-bitwise */\nimport { FileState } from './file-info';\nvar guid = function () {\n    var id = \"\";\n    var i;\n    var random;\n    for (i = 0; i < 32; i++) {\n        random = Math.random() * 16 | 0;\n        if (i === 8 || i === 12 || i === 16 || i === 20) {\n            id += \"-\";\n        }\n        id += (i === 12 ? 4 : (i === 16 ? (random & 3 | 8) : random)).toString(16);\n    }\n    return id;\n};\nvar getTotalFilesSizeMessage = function (files) {\n    var totalSize = 0;\n    var i;\n    if (typeof files[0].size === \"number\") {\n        for (i = 0; i < files.length; i++) {\n            if (files[i].size) {\n                totalSize += files[i].size;\n            }\n        }\n    }\n    else {\n        return \"\";\n    }\n    totalSize /= 1024;\n    if (totalSize < 1024) {\n        return totalSize.toFixed(2) + \" KB\";\n    }\n    else {\n        return (totalSize / 1024).toFixed(2) + \" MB\";\n    }\n};\nvar stripPath = function (name) {\n    var slashIndex = name.lastIndexOf(\"\\\\\");\n    return (slashIndex !== -1) ? name.substr(slashIndex + 1) : name;\n};\nvar getFileExtension = function (fileName) {\n    var rFileExtension = /\\.([^\\.]+)$/;\n    var matches = fileName.match(rFileExtension);\n    return matches ? matches[0] : \"\";\n};\nvar ampRegExp = /&/g;\nvar ltRegExp = /</g;\nvar quoteRegExp = /\"/g;\nvar aposRegExp = /'/g;\nvar gtRegExp = />/g;\nvar htmlEncode = function (value) {\n    return (\"\" + value).replace(ampRegExp, \"&amp;\")\n        .replace(ltRegExp, \"&lt;\")\n        .replace(gtRegExp, \"&gt;\")\n        .replace(quoteRegExp, \"&quot;\")\n        .replace(aposRegExp, \"&#39;\");\n};\nvar validateInitialFileInfo = function (file) {\n    if (file instanceof Object && file.hasOwnProperty(\"name\")) {\n        return true;\n    }\n    return false;\n};\nvar getInitialFileInfo = function (fakeFile) {\n    fakeFile.extension = fakeFile.extension || getFileExtension(fakeFile.name);\n    fakeFile.name = htmlEncode(fakeFile.name);\n    fakeFile.size = fakeFile.size || 0;\n    if (!fakeFile.hasOwnProperty(\"state\")) {\n        fakeFile.state = FileState.Initial;\n    }\n    if (!fakeFile.hasOwnProperty(\"uid\")) {\n        fakeFile.uid = guid();\n    }\n    return fakeFile;\n};\nvar getFileInfo = function (rawFile) {\n    var fileName = rawFile.name;\n    var fileSize = rawFile.size;\n    return {\n        extension: getFileExtension(fileName),\n        name: htmlEncode(fileName),\n        rawFile: rawFile,\n        size: fileSize,\n        state: FileState.Selected\n    };\n};\nvar getAllFileInfo = function (rawFiles) {\n    var allFileInfo = new Array();\n    var i;\n    for (i = 0; i < rawFiles.length; i++) {\n        allFileInfo.push(getFileInfo(rawFiles[i]));\n    }\n    return allFileInfo;\n};\nvar fileHasValidationErrors = function (file) {\n    if (file.validationErrors && file.validationErrors.length > 0) {\n        return true;\n    }\n    return false;\n};\nvar filesHaveValidationErrors = function (files) {\n    for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {\n        var file = files_1[_i];\n        if (fileHasValidationErrors(file)) {\n            return true;\n        }\n    }\n    return false;\n};\nvar inputFiles = function (input) {\n    if (input.files) {\n        return getAllFileInfo(input.files);\n    }\n    else {\n        //Required for testing\n        var fileNames = input.value.split(\"|\").map(function (file, index) {\n            var fileName = file.trim();\n            return {\n                extension: getFileExtension(fileName),\n                name: stripPath(fileName),\n                rawFile: null,\n                size: (index + 1) * 1000,\n                state: FileState.Selected\n            };\n        });\n        return fileNames;\n    }\n};\nvar assignGuidToFiles = function (files, isUnique) {\n    var uid = guid();\n    return files.map(function (file) {\n        file.uid = isUnique ? guid() : uid;\n        return file;\n    });\n};\nvar supportsFormData = function () {\n    return typeof (FormData) !== \"undefined\";\n};\nvar userAgent = function () {\n    return navigator.userAgent;\n};\nvar isDocumentAvailable = function () {\n    return typeof document !== 'undefined';\n};\nvar focusableRegex = /^(?:a|input|select|textarea|button|object)$/i;\nvar IGNORE_TARGET_CLASSSES = 'k-icon k-select k-input';\nvar UPLOAD_CLASSES = 'k-upload-button k-clear-selected k-upload-selected k-upload-action';\nvar isVisible = function (element) {\n    var rect = element.getBoundingClientRect();\n    return !!(rect.width && rect.height) && window.getComputedStyle(element).visibility !== 'hidden';\n};\nvar toClassList = function (classNames) { return String(classNames).trim().split(' '); };\nvar hasClasses = function (element, classNames) {\n    var namesList = toClassList(classNames);\n    return Boolean(toClassList(element.className).find(function (className) { return namesList.indexOf(className) >= 0; }));\n};\nvar isFocusable = function (element, checkVisibility) {\n    if (checkVisibility === void 0) { checkVisibility = true; }\n    if (element.tagName) {\n        var tagName = element.tagName.toLowerCase();\n        var tabIndex = element.getAttribute('tabIndex');\n        var validTabIndex = tabIndex !== null && !isNaN(tabIndex) && tabIndex > -1;\n        var focusable = false;\n        if (focusableRegex.test(tagName)) {\n            focusable = !element.disabled;\n        }\n        else {\n            focusable = validTabIndex;\n        }\n        return focusable && (!checkVisibility || isVisible(element));\n    }\n    return false;\n};\nexport default {\n    IGNORE_TARGET_CLASSSES: IGNORE_TARGET_CLASSSES,\n    UPLOAD_CLASSES: UPLOAD_CLASSES,\n    assignGuidToFiles: assignGuidToFiles,\n    fileHasValidationErrors: fileHasValidationErrors,\n    filesHaveValidationErrors: filesHaveValidationErrors,\n    getAllFileInfo: getAllFileInfo,\n    getInitialFileInfo: getInitialFileInfo,\n    getTotalFilesSizeMessage: getTotalFilesSizeMessage,\n    guid: guid,\n    hasClasses: hasClasses,\n    inputFiles: inputFiles,\n    isDocumentAvailable: isDocumentAvailable,\n    isFocusable: isFocusable,\n    supportsFormData: supportsFormData,\n    userAgent: userAgent,\n    validateInitialFileInfo: validateInitialFileInfo\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-upload/dist/es/util.js\n// module id = ./node_modules/@progress/kendo-angular-upload/dist/es/util.js\n// module chunks = rspackage.module","var INVALIDMAXFILESIZE = \"invalidMaxFileSize\";\nvar INVALIDMINFILESIZE = \"invalidMinFileSize\";\nvar INVALIDFILEEXTENSION = \"invalidFileExtension\";\nvar validateFileExtension = function (file, allowedExtensions) {\n    if (allowedExtensions.length > 0) {\n        if (allowedExtensions.indexOf(file.extension.toLowerCase()) < 0) {\n            file.validationErrors = file.validationErrors || [];\n            if (file.validationErrors.indexOf(INVALIDFILEEXTENSION) < 0) {\n                file.validationErrors.push(INVALIDFILEEXTENSION);\n            }\n        }\n    }\n};\nvar validateFileSize = function (file, minFileSize, maxFileSize) {\n    if (minFileSize !== 0 && file.size < minFileSize) {\n        file.validationErrors = file.validationErrors || [];\n        if (file.validationErrors.indexOf(INVALIDMINFILESIZE) < 0) {\n            file.validationErrors.push(INVALIDMINFILESIZE);\n        }\n    }\n    if (maxFileSize !== 0 && file.size > maxFileSize) {\n        file.validationErrors = file.validationErrors || [];\n        if (file.validationErrors.indexOf(INVALIDMAXFILESIZE) < 0) {\n            file.validationErrors.push(INVALIDMAXFILESIZE);\n        }\n    }\n};\nvar parseAllowedExtensions = function (extensions) {\n    var allowedExtensions = extensions.map(function (ext) {\n        var parsedExt = (ext.substring(0, 1) === \".\") ? ext : (\".\" + ext);\n        return parsedExt.toLowerCase();\n    });\n    return allowedExtensions;\n};\nvar validateFiles = function (files, restrictionInfo) {\n    var allowedExtensions = parseAllowedExtensions(restrictionInfo.allowedExtensions);\n    var maxFileSize = restrictionInfo.maxFileSize;\n    var minFileSize = restrictionInfo.minFileSize;\n    var i;\n    for (i = 0; i < files.length; i++) {\n        validateFileExtension(files[i], allowedExtensions);\n        validateFileSize(files[i], minFileSize, maxFileSize);\n    }\n};\nexport default {\n    validateFiles: validateFiles\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@progress/kendo-angular-upload/dist/es/validation-util.js\n// module id = ./node_modules/@progress/kendo-angular-upload/dist/es/validation-util.js\n// module chunks = rspackage.module","import { GSP, Package } from '@farris/ide-devkit';\r\nimport {ComponentFactoryResolver, Injector, Type} from '@angular/core';\r\nimport { ResourceMetadataComponent } from './views/resourcemetadatadesigner/resourcemetadata.component';\r\nimport { ResourceMetadataPackageView } from './views';\r\nimport { MetadataDto } from \"@gsp-lcm/metadata-selector\";\r\nexport class ResourceMetadataPackage extends Package {\r\n  constructor(\r\n    gsp: GSP,\r\n    private cfr: ComponentFactoryResolver,\r\n    private injector: Injector\r\n  ) {\r\n    super(gsp);\r\n  }\r\n\r\n  activate(state) {\r\n    this.gsp.workspace.addOpener((uri: string) => this.openRs(uri));\r\n\r\n    // if (!this.packageView) {\r\n    //   this.packageView = new SgDesignerPackageView(state, this.cfr, this.injector);\r\n    //   this.gsp.workspace.addMainPanel({id: this.id,title:this.data.name, item: this.packageView.getElement()});\r\n    \r\n    //   const currentElement = this.packageView.getElement().instance as SgDesignerComponent;\r\n    //   if (currentElement) {\r\n    //     currentElement.metadataContent = this.data;\r\n    //   }\r\n    // }\r\n    // this.workspace.activePackage(this);\r\n  }\r\n\r\n  openRs(uri) {\r\n    if (uri.endsWith('.rs')) {\r\n      const pkgView = new ResourceMetadataPackageView({}, this.cfr, this.injector);\r\n      const currentElement = pkgView.getElement().instance as ResourceMetadataComponent;\r\n      currentElement.metadataUri = uri;\r\n      \r\n      return {\r\n        getTitle: () => uri,\r\n        getElement: () => pkgView.getElement()\r\n      };\r\n    }\r\n  }\r\n  /**\r\n   * 新建元数据\r\n   */\r\n  private createMetadata(data: MetadataDto) {\r\n    this.gsp.eventBus.post(ResourceMetadataPackage, this.id, 'Command:CreateMetadata', data);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/packages/resource-metadata-designer/package.ts","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { ComponentFactoryResolver, Injector, NgModule } from '@angular/core';\r\nimport { PackageModule } from '@farris/ide-devkit';\r\nimport { ResourceMetadataPackage } from './package';\r\nimport { ResourceMetadataModule } from './views/resourcemetadatadesigner/resourcemetadata.module';\r\nimport { HttpModule } from '@angular/http';\r\nimport { TextResourcesService } from './views/resourcemetadatadesigner/textgrid/textresources.service';\r\nimport { BitresourcesService } from './views/resourcemetadatadesigner/birgrid/bitresources.service';\r\nvar ResourceMetadataPackageModule = (function (_super) {\r\n    __extends(ResourceMetadataPackageModule, _super);\r\n    function ResourceMetadataPackageModule(cfr, injector) {\r\n        var _this = _super.call(this) || this;\r\n        _this.cfr = cfr;\r\n        _this.injector = injector;\r\n        return _this;\r\n    }\r\n    ResourceMetadataPackageModule.prototype.initPackage = function (gsp) {\r\n        this.package = new ResourceMetadataPackage(gsp, this.cfr, this.injector);\r\n    };\r\n    ResourceMetadataPackageModule = __decorate([\r\n        NgModule({\r\n            imports: [\r\n                ResourceMetadataModule,\r\n                HttpModule\r\n            ],\r\n            providers: [\r\n                TextResourcesService, BitresourcesService\r\n            ]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [ComponentFactoryResolver, Injector])\r\n    ], ResourceMetadataPackageModule);\r\n    return ResourceMetadataPackageModule;\r\n}(PackageModule));\r\nexport { ResourceMetadataPackageModule };\r\n//# sourceMappingURL=rspackage.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/resource-metadata-designer/rspackage.module.js\n// module id = ./src/packages/resource-metadata-designer/rspackage.module.js\n// module chunks = rspackage.module","import { ComponentFactoryResolver, Injector, NgModuleRef } from '@angular/core';\r\nimport { ResourceMetadataComponent } from './resourcemetadatadesigner/resourcemetadata.component';\r\nimport { PackageView } from '@farris/ide-devkit';\r\nimport { ResourceMetadataModule } from './resourcemetadatadesigner/resourcemetadata.module';\r\nexport class ResourceMetadataPackageView extends PackageView {\r\n\r\n  constructor(serializedState: any,\r\n    private cfr: ComponentFactoryResolver,\r\n    private injector: Injector){\r\n    super(serializedState);\r\n    const componentFactory = this.cfr.resolveComponentFactory(ResourceMetadataComponent);\r\n    const moduleRef = this.injector.get(ResourceMetadataModule) as ResourceMetadataModule;\r\n    console.log(moduleRef);\r\n    this.element = componentFactory.create(this.injector);\r\n  }\r\n  \r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/packages/resource-metadata-designer/views/index.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/baseinfo/baseinfo.component.css\n// module id = ./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/baseinfo/baseinfo.component.css\n// module chunks = rspackage.module","module.exports = \"<div class=\\\"d-flex flex-column\\\" style=\\\"flex:1 1 auto;\\\">\\n  \\n    <div class=\\\"card\\\" style=\\\"background-color: #f6f6f6;\\\">\\n          \\n                <form class=\\\"k-form\\\" style=\\\"padding: 10px 16px 10px 16px;width: 100%;\\\" >\\n                    <form class=\\\"k-form-inline\\\" style=\\\"padding: 0px;height: 36px;\\\">\\n                        <div class=\\\"k-form-field\\\" style=\\\"height: 36px;\\\">\\n                            <label style=\\\"width: 15%;min-width: 95px\\\">资源编号</label>\\n                            <input style=\\\"width: 75%;\\\" class=\\\"k-textbox\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"currentViewModel.code\\\" name=\\\"code\\\" />\\n                        </div>\\n                    </form>\\n                    <form class=\\\"k-form-inline\\\" style=\\\"padding: 2px;height: 36px;\\\">\\n                        <div class=\\\"k-form-field\\\"  style=\\\"height: 36px;\\\">\\n                            <label style=\\\"width: 15%;min-width: 95px;\\\">资源名称</label>\\n                            <input style=\\\"width: 75%;\\\" class=\\\"k-textbox\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"currentViewModel.name\\\" name=\\\"name\\\"/>                 \\n                        </div>\\n                    </form>\\n                                      \\n                    <form class=\\\"k-form-inline\\\" style=\\\"padding: 2px;height: 36px;\\\">\\n                        <div class=\\\"k-form-field\\\"  style=\\\"height: 36px;\\\">\\n                            <label style=\\\"width: 15%;min-width: 95px;\\\">业务对象</label>\\n                            <input style=\\\"width: 75%;\\\" class=\\\"k-textbox\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"currentViewModel.bizObject\\\"  name=\\\"bizobject\\\"/>\\n                        </div>\\n                    </form>\\n                    <form class=\\\"k-form-inline\\\" style=\\\"padding: 2px;height: 36px;\\\">\\n                            <div class=\\\"k-form-field\\\"  style=\\\"height: 36px;\\\">\\n                                <label style=\\\"width: 15%;min-width: 95px;\\\">创建时间</label>\\n                                <input style=\\\"width: 75%;\\\" class=\\\"k-textbox\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"currentViewModel.lastModifiedTime\\\" name=\\\"lastmodifiedtime\\\"/>\\n                            </div>\\n                    </form>\\n                </form>\\n           \\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/baseinfo/baseinfo.component.html\n// module id = ./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/baseinfo/baseinfo.component.html\n// module chunks = rspackage.module","import { Component, OnInit,Input} from '@angular/core';\nimport {ResourceMetadata} from '../resourcemetadata/resourcemetadata';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { isNullOrUndefined } from 'util';\n@Component({\n  selector: 'app-baseinfo',\n  templateUrl: './baseinfo.component.html',\n  styleUrls: ['./baseinfo.component.css']\n})\n\nexport class BaseinfoComponent implements OnInit {\n \n  public formGroup: FormGroup;\n  @Input() currentViewModel:ResourceMetadata ;\n  \n  constructor(protected formBuilder: FormBuilder) { }\n\n  ngOnchange(){\n    \n  }\n  \n  ngOnInit() {\n\n  }\n\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/baseinfo/baseinfo.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".preform{\\r\\n    background-size: contain;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/birgrid/birgrid.component.css\n// module id = ./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/birgrid/birgrid.component.css\n// module chunks = rspackage.module","module.exports = \"\\n<kendo-grid id=\\\"bitGrid\\\"\\n(cellClick)=\\\"cellClickHandler($event)\\\"\\n[groupable]=\\\"false\\\"\\n[group]=\\\"groups\\\"\\n(groupChange)=\\\"groupChange($event)\\\"\\n[data]=\\\"gridData\\\"\\n[height]=\\\"200\\\" \\n(add)=\\\"addHandler()\\\"\\n(remove)=\\\"removeHandler($event)\\\"\\n[navigable]=\\\"true\\\">\\n<ng-template kendoGridToolbarTemplate>\\n    <button kendoGridAddCommand [icon]=\\\"'plus-outline'\\\">新增二进制资源</button>       \\n</ng-template>\\n    <kendo-grid-column field=\\\"id\\\" title=\\\"资源编号\\\" width=\\\"70%\\\" [headerStyle]=\\\"{'text-align': 'center'}\\\" [style]=\\\"{'text-align':'center'}\\\">\\n    </kendo-grid-column>\\n  <kendo-grid-command-column title=\\\"\\\" width=\\\"15%\\\" [style]=\\\"{'text-align':'center'}\\\">\\n        <ng-template kendoGridCellTemplate let-isNew=\\\"isNew\\\">\\n        <button kendoButton id=\\\"loadfile\\\" value=\\\"导入图片\\\" (click) = \\\"loadFile()\\\" [icon]=\\\"'download'\\\">导入图片</button>\\n        <input  type=\\\"file\\\" value=\\\"导入图片文件\\\" id=\\\"upload\\\" (change)= \\\"fileUploadonselect()\\\" style=\\\"display:none\\\" accept=\\\"image/*\\\"/>\\n        </ng-template>\\n  </kendo-grid-command-column>\\n  <kendo-grid-command-column title=\\\"\\\" width=\\\"15%\\\" [style]=\\\"{'text-align':'center'}\\\">\\n      <ng-template kendoGridCellTemplate let-isNew=\\\"isNew\\\">\\n          <button kendoGridRemoveCommand type=\\\"button\\\" [icon]=\\\"'delete'\\\">删除资源</button>\\n      </ng-template>\\n  </kendo-grid-command-column>\\n</kendo-grid>\\n<div id=\\\"result\\\" class=\\\"preform\\\" name=\\\"result\\\" style=\\\"width: 100%;text-align: center;\\\"></div>  \\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/birgrid/birgrid.component.html\n// module id = ./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/birgrid/birgrid.component.html\n// module chunks = rspackage.module","\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Component, OnInit, OnDestroy, ViewChild, Renderer2,Input, Output, EventEmitter} from '@angular/core';\nimport { GridComponent } from '@progress/kendo-angular-grid';\nimport { groupBy, GroupDescriptor } from '@progress/kendo-data-query';\nimport { BitresourcesService } from './bitresources.service';\nimport { BitItem, ResourceMetadata, BinaryResourceItem, ResourceType } from '../resourcemetadata/resourcemetadata';\nimport { isNullOrUndefined } from 'util';\n\n\nconst createFormGroup = dataItem => new FormGroup({\n  'bitId':new FormControl(dataItem.bitId),\n  'id': new FormControl(dataItem.id),\n  'value': new FormControl(dataItem.value)\n});\nconst matches = (el, selector) => (el.matches || el.msMatchesSelector).call(el, selector);\n@Component({\n  selector: 'app-birgrid',\n  templateUrl: './birgrid.component.html',\n  styleUrls: ['./birgrid.component.css']\n})\nexport class BirgridComponent implements OnInit,OnDestroy {\n\n  @ViewChild(GridComponent)\n  protected grid: GridComponent;\n  public groups: GroupDescriptor[] = [];\n  public gridData: any[];\n  private Info :any;\n  public formGroup: FormGroup;\n  private bitresourceitem:BinaryResourceItem[]=[];\n  private editedRowIndex: number;\n  private docClickSubscription: any;\n  private isNew: boolean;\n  private checkbitelement:boolean=true;\n  constructor(private service: BitresourcesService, private renderer: Renderer2) { }\n  @Input() currentViewModel:ResourceMetadata ;\n  @Output() change = new EventEmitter();\n  bitmetadatas:BitItem[]=[{\n    bitId:1,\n    id:'',\n    value:''\n   }];  \n  data:BitItem[]=[]; \n  public ngOnInit(): void {\n    if(this.currentViewModel.imageResources.length!=0){\n      let igridData = this.currentViewModel.imageResources;\n      for(var i=0;i<igridData.length;i++){\n          this.data[i]={ bitId:i+1, id:'', value:''};\n          this.data[i].id = igridData[i].id;\n          this.data[i].value = igridData[i].value;\n      }\n      this.gridData = this.data;\n  }\n  else {\n      this.gridData = this.bitmetadatas;\n      this.data=this.bitmetadatas;\n  }\n  if(!isNullOrUndefined(this.gridData[0].value)){\n    let results=document.getElementById(\"result\"); \n    results.innerHTML= '<img src=\"' + this.gridData[0].value +'\" alt=\"\" />';\n  }\n    this.docClickSubscription = this.renderer.listen('document', 'click', this.onDocumentClick.bind(this));\n  }\n\n  public ngOnDestroy(): void {\n      this.docClickSubscription();\n      this.saveCurrentViewModel();\n      this.change.emit(this.currentViewModel);\n    }\n\n  public addHandler(): void {\n      this.closeEditor();\n\n      this.formGroup = createFormGroup({\n          'id': '',\n          'value': ''         \n      });\n      this.isNew = true;\n\n      this.grid.addRow(this.formGroup);\n    }\n\n  public removeHandler(dataItem) {\n     // this.grid.;\n     this.service.remove(dataItem,this.data);\n     let results=document.getElementById(\"result\"); \n        results.innerHTML= '<img src=\"' + \"test\" +'\" alt=\"\" />';\n    }\n\n  public cellClickHandler({ isEdited, dataItem, rowIndex }): void {\n      if (isEdited || (this.formGroup && !this.formGroup.valid)) {\n          return;\n      }\n      this.saveCurrent();\n      \n      this.formGroup = createFormGroup(dataItem);\n      this.editedRowIndex = rowIndex;\n      if(!isNullOrUndefined(dataItem.value)){\n        let results=document.getElementById(\"result\"); \n        results.innerHTML= '<img src=\"' + dataItem.value +'\" alt=\"\" />';\n      }else{\n        let results=document.getElementById(\"result\"); \n        results.innerHTML= '<img src=\"' + \"test\" +'\" alt=\"\" />';\n      }\n      this.grid.editRow(rowIndex, this.formGroup);\n    }\n\n  public cancelHandler(): void {\n      this.closeEditor();\n    }\n\n  public groupChange(groups: GroupDescriptor[]): void {\n      this.groups = groups;\n      this.gridData = groupBy(this.service.bitresources(), this.groups);\n    }\n\n  private closeEditor(): void {\n      this.grid.closeRow(this.editedRowIndex);\n      this.isNew = false;\n      this.editedRowIndex = undefined;\n      this.formGroup = undefined;\n    }\n\n  private onDocumentClick(e: any): void {\n  \n      if (this.formGroup && this.formGroup.valid &&\n          !matches(e.target, '#bitGrid tbody *, #bitGrid .k-grid-toolbar .k-button')) {\n          this.saveCurrent();\n        }\n    }\n\n  private saveCurrent(): void {\n      if (this.formGroup) {\n        if(!isNullOrUndefined(this.Info)){\n          this.formGroup.value.value=this.Info;\n          this.Info=null;\n        } \n          this.service.save(this.formGroup.value, this.isNew,this.data);\n          this.closeEditor();\n        }\n    }\n    \n  public fileUploadonselect():void{\n       \n        var uploadsFile = <HTMLInputElement>document.getElementById(\"upload\");\n        var file = uploadsFile.files[0];\n        let self = this;\n        var reader = new FileReader();//这是核心！！读取操作都是由它完成的\n        reader.readAsDataURL(file);        \n        reader.onload=function(){                  \n                    let results=document.getElementById(\"result\"); \n                    results.innerHTML= '<img src=\"' + this.result +'\" alt=\"\"/>';\n                    self.Info = this.result.toString();\n                }\n                this.Info = self.Info;\n        }\n  private saveCurrentViewModel() :void{\n          let bititem = this.data;\n          this.currentViewModel.imageResources = [];\n          for(var i=0 ;i <bititem.length;i++){\n            if(this.checkTextElement(bititem[i],this.currentViewModel)){\n              this.bitresourceitem[i]={id:'',value:'',resourceType:ResourceType.BinaryFile}\n              this.bitresourceitem[i].id = bititem[i].id;\n              this.bitresourceitem[i].value = bititem[i].value;\n              this.currentViewModel.imageResources.push(this.bitresourceitem[i]);\n            }\n            else{\n              this.currentViewModel.imageResources.find(x=>(x.id==bititem[i].id)).value = bititem[i].value;\n            }\n          }\n        }\n    \n        checkTextElement(element:BitItem,resourcecontent:ResourceMetadata):any{\n            for(var i=0;i<resourcecontent.imageResources.length;i++){\n              if(resourcecontent.imageResources[i].id==element.id){\n                this.checkbitelement=false;\n                break;\n              }\n              else this.checkbitelement=true;\n            }\n            return this.checkbitelement;\n        }\n        loadFile(){\n          let resulta=document.getElementById(\"upload\"); \n          resulta.click();\n        }      \n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/birgrid/birgrid.component.ts","import { Injectable } from '@angular/core';\nimport { BitItem } from '../resourcemetadata/resourcemetadata';\n\n@Injectable()\nexport class BitresourcesService {\n\n    bitmetadatas:BitItem[]=[{\n        bitId:1,\n        id:'',\n        value:''\n    }];  \n\n    // private data: any[] = bitresources;\n    // private counter: number = bitresources.length;\n\n    public bitresources(): any[] {\n        return this.bitmetadatas;\n    }\n\n    public remove(bitresource: any,data:any[]): void {\n        const index = data.findIndex(obj => obj.bitId === bitresource.dataItem.bitId);\n        data.splice(index, 1);\n        for(let i = index;i<=data.length-1;i++){\n            data[i].bitId--;\n        }\n    }\n\n    public save(bitresource: any, isNew: boolean,data:any[]): void {\n       \n        if (isNew) {\n          bitresource.bitId = data.length+1;\n          data.push(bitresource);\n        } else {\n            Object.assign(\n                data.find(obj => obj.bitId === bitresource.bitId),\n                bitresource\n            );\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/birgrid/bitresources.service.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"kendo-tabstrip p {\\r\\n    margin: 0;\\r\\n    padding: 8px;\\r\\n}\\r\\nkendo-splitter { margin: 20px 0 0; }\\r\\n h3 { font-size: 1.2em; padding: 10px; }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/resourcemetadata.component.css\n// module id = ./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/resourcemetadata.component.css\n// module chunks = rspackage.module","module.exports = \"<div>\\r\\n    <div style=\\\"background: #f3f3f3;width: 920px;\\\">\\r\\n        <button kendoButton [look]=\\\"'bare'\\\" (click)=\\\"onSave()\\\" [icon]=\\\"'save'\\\">保存</button>\\r\\n        <button kendoButton [look]=\\\"'bare'\\\" (click)=\\\"onLoad()\\\" [icon]=\\\"'download'\\\">导入资源</button>\\r\\n        <input  type=\\\"file\\\" value=\\\"\\\" id=\\\"uploads\\\" (change)= \\\"fileUploadonselect()\\\" style=\\\"display:none\\\" accept=\\\".rs\\\"/>\\r\\n    </div>\\r\\n    \\r\\n       <div>\\r\\n          <kendo-tabstrip>\\r\\n              <kendo-tabstrip-tab [title]=\\\"'基本信息'\\\" [selected]=\\\"true\\\" style=\\\" flex: 1 1 auto; display: flex;\\\">\\r\\n                <ng-template kendoTabContent>\\r\\n                 <div>\\r\\n                 <app-baseinfo style=\\\" flex: 1 1 auto; display: flex; \\\" [(currentViewModel)]=\\\"resourcemodel\\\"></app-baseinfo>\\r\\n                 </div>\\r\\n                </ng-template>\\r\\n              </kendo-tabstrip-tab>\\r\\n              <kendo-tabstrip-tab [title]=\\\"'资源项'\\\" >\\r\\n                <ng-template kendoTabContent>\\r\\n                    <kendo-splitter orientation=\\\"horizontal\\\" style=\\\"height: 500px;\\\">\\r\\n                        <kendo-splitter-pane size=\\\"15%\\\"> \\r\\n                           <div>                        \\r\\n                                  <button kendoButton style=\\\"width: 99%;height:40px\\\" (click)=\\\"onSelectText()\\\" [look]=\\\"'flat'\\\" [primary]=\\\"true\\\">文本资源</button>\\r\\n                           </div>\\r\\n                           <div>\\r\\n                                  <button kendoButton style=\\\"width: 99%;height:40px\\\" (click)=\\\"onSelectBiry()\\\" [look]=\\\"'flat'\\\" [primary]=\\\"true\\\">二进制资源</button>\\r\\n                           </div> \\r\\n                        </kendo-splitter-pane>\\r\\n                        <kendo-splitter-pane> \\r\\n                          <div *ngIf = selectedResource>\\r\\n                            <app-textgrid [(currentViewModel)]=\\\"resourcemodel\\\" (change)=\\\"textChange($event)\\\"></app-textgrid>\\r\\n                          </div>\\r\\n                          <div *ngIf = !selectedResource>  \\r\\n                            <app-birgrid [(currentViewModel)]=\\\"resourcemodel\\\" (change)=\\\"bitChange($event)\\\"></app-birgrid>\\r\\n                          </div>         \\r\\n                        </kendo-splitter-pane>                     \\r\\n                      </kendo-splitter>              \\r\\n                </ng-template>\\r\\n              </kendo-tabstrip-tab>           \\r\\n            </kendo-tabstrip>\\r\\n        </div>        \\r\\n  </div>\\r\\n  \\r\\n  \\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/resourcemetadata.component.html\n// module id = ./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/resourcemetadata.component.html\n// module chunks = rspackage.module","import { Component,ViewChild } from '@angular/core';\nimport { ResourceMetadata, TextResourceItem, ResourceType, TextItem, BinaryResourceItem, BitItem } from './resourcemetadata/resourcemetadata';\nimport { MetadataDto, GSPMetadataService } from '@gsp-lcm/metadata-selector';\nimport { isNullOrUndefined } from 'util';\n//import { HttpUrlConst } from '../../../bedesigner-frame/views/bedesigner-frame/util/be-reference';\nimport {TextgridComponent} from './textgrid/textgrid.component';\nimport { BirgridComponent } from './birgrid/birgrid.component';\nimport { CacheService } from \"@farris/ide-devkit/services\";\n@Component({\n  selector: 'app-resourcemetadata',\n  templateUrl: './resourcemetadata.component.html',\n  styleUrls: ['./resourcemetadata.component.css']\n})\nexport class ResourceMetadataComponent {\n  \n  constructor(private lcmService: GSPMetadataService,private cache:CacheService) {\n    \n  }\n  @ViewChild(TextgridComponent) childtext:TextgridComponent;\n  @ViewChild(BirgridComponent) childbit:BirgridComponent;\n  textresourceitem:TextResourceItem[]=[];\n  bitresourceitem:BinaryResourceItem[]=[];\n  public resourcecontent:ResourceMetadata={\n    code:'',\n    name:'',\n    bizObject:'',\n    lastModifiedTime:'',\n    stringResources:this.textresourceitem,\n    imageResources:this.bitresourceitem\n  };\n  public resourcemetadataDto: MetadataDto={\n    id: '',\n    nameSpace: '',\n    code: '',\n    name: '',\n    fileName: '',\n    type: '',\n    bizobjectID: '',\n    relativePath: '',\n    extendProperty: '',\n    content: ''\n  };\n  public dto:MetadataDto;\n  selectedResource = true; \n  checktextelement:boolean=true;\n  checkbitelement:boolean=true;\n  public resourcemodel:ResourceMetadata={\n    code:'',\n    name:'',\n    bizObject:'',\n    lastModifiedTime:'',\n    stringResources:this.textresourceitem,\n    imageResources:this.bitresourceitem\n  };\n  private _metadataUri: string;\n  \n  public resourceTypeList: string[] = []; //资源类型列表\n  set metadataUri(metadataUri: string) {\n    const filename  = metadataUri.substring(metadataUri.lastIndexOf('/')+1);\n    const filepath = metadataUri.substring(1,metadataUri.lastIndexOf('/'));\n    this.lcmService.LoadMetadata(filename,filepath).subscribe(data =>{\n      this.dto = data;\n      this.loadRs(this.dto);\n    });\n    \n    // todo: 通过元数据服务获取元数据内容\n    ///////\n    //const name = metadataUri.slice(metadataUri.lastIndexOf('/'));\n    //const dto = new MetadataDto('', '', '', name, '', 'rs', '', '', '', '{\"Code\":\"\",\"Name\":\"\",\"BizObject\":\"\",\"StringResources\":[],\"ImageResources\":[],\"LastModifiedTime\":\"\"}');\n  }\ntextChange($event) {\n    this.resourcemodel.stringResources = $event.stringResources;\n}\nbitChange($event) {\n  this.resourcemodel.imageResources = $event.imageResources;\n}\n\n  onSelectText():void{\n      this.selectedResource = true;\n  }\n  onSelectBiry():void{\n      this.selectedResource =false; \n  }\n\n  set metadataContent(metadataContent: any) {\n    this.loadRs(metadataContent);\n  }\n\n  loadRs(dto: MetadataDto): any {\n    if (isNullOrUndefined(dto) || isNullOrUndefined(dto.content)) {\n      this.resourcemodel = null;\n      this.resourcemodel = null;\n      return;\n    }\n    \n    let temp = JSON.parse(dto.content);\n    this.GetCamelParse(temp);\n    this.resourcemodel = temp;\n    this.resourcemetadataDto = dto;\n   }\n\n  //json串解析\n  private GetCamelParse(jsonObj: any) {\n    for (let key in jsonObj) {\n      if (typeof (jsonObj[key]) === \"object\") {\n        this.GetCamelParse(jsonObj[key]);\n      }\n      let temp = jsonObj[key];\n      delete (jsonObj[key]);\n      jsonObj[this.ConvertToCamel(key)] = temp;\n    }\n  }\n\n  //字符串转换为Camel\n  private ConvertToCamel(input: string): string {\n    if (input.length > 0) {\n      let len = input.length;\n      var strTemp = \"\"; //新字符串\n      for (let i = 0; i < len; i++) {\n        if (i == 0) {\n          strTemp += input[i].toLowerCase(); //第一个\n        }\n        else {\n          strTemp += input[i];\n        }\n      }\n      return strTemp;\n    }\n  }\n    //json串解析\n    private GetUnCamelParse(jsonObj: any) {\n      for (let key in jsonObj) {\n        if (typeof (jsonObj[key]) === \"object\") {\n          this.GetUnCamelParse(jsonObj[key]);\n        }\n        let temp = jsonObj[key];\n        delete (jsonObj[key]);\n        jsonObj[this.ConvertToUncamel(key)] = temp;\n      }\n    }\n   //字符串反转换Camel\n   private ConvertToUncamel(input: string): string {\n    if (input.length > 0) {\n      let len = input.length;\n      var strTemp = \"\"; //新字符串\n      for (let i = 0; i < len; i++) {\n        if (i == 0) {\n          strTemp += input[i].toUpperCase(); //第一个\n        }\n        else {\n          strTemp += input[i];\n        }\n      }\n      return strTemp;\n    }\n  }\n  \n  onSave(){\n    let tmpone = JSON.parse(this.resourcemetadataDto.content);\n    this.GetCamelParse(tmpone);\n    this.resourcecontent = tmpone;\n    \n    if(!isNullOrUndefined(this.childtext)){\n      this.resourcecontent.stringResources=[];\n        var textitem = this.childtext.data;\n        for(var i=0 ;i <textitem.length;i++){\n          if(this.checkTextElement(textitem[i],this.resourcecontent)){\n            this.textresourceitem[i]={id:'',value:'',resourceType:ResourceType.TextFile}\n            this.textresourceitem[i].id = textitem[i].id;\n            this.textresourceitem[i].value = textitem[i].value;\n          };\n         this.resourcecontent.stringResources.push(this.textresourceitem[i]);\n        }\n    }\n    else{\n      this.resourcecontent.stringResources = this.resourcemodel.stringResources ;\n    }\n\n    if(!isNullOrUndefined(this.childbit)){\n        this.resourcecontent.imageResources=[];\n        var bititem = this.childbit.data;\n        for(var i=0 ;i <bititem.length;i++){\n          if(this.checkBitElement(bititem[i],this.resourcecontent)){\n            this.bitresourceitem[i]={id:'',value:'',resourceType:ResourceType.BinaryFile}\n            this.bitresourceitem[i].id = bititem[i].id;\n            this.bitresourceitem[i].value = bititem[i].value;\n          };\n          this.resourcecontent.imageResources.push(this.bitresourceitem[i]);\n        };\n      }\n      else{\n        this.resourcecontent.imageResources = this.resourcemodel.imageResources;\n      }\n    this.GetUnCamelParse(this.resourcecontent);\n    let stringcontent = JSON.stringify(this.resourcecontent);\n    this.resourcemetadataDto.content = stringcontent;\n    const sessionId = this.cache.get('sessionId');\n    this.lcmService.SaveMetadata(this.resourcemetadataDto,sessionId).subscribe(() => {\n      alert('保存成功');\n    },\n      () => {\n      alert('保存失败');\n      }\n      )\n      this.GetCamelParse(this.resourcecontent);\n  }\n\n  checkTextElement(element:TextItem,resourcecontent:ResourceMetadata):any{\n    \n    for(var i=0;i<resourcecontent.stringResources.length;i++){\n      if(resourcecontent.stringResources[i].id==element.id){\n        this.checktextelement=false;\n        break;\n      }\n      else this.checktextelement=true;\n    }\n    return this.checktextelement;\n  }\n\n  checkBitElement(element:BitItem,resourcecontent:ResourceMetadata):any{\n    for(var i=0;i<resourcecontent.imageResources.length;i++){\n      if(resourcecontent.imageResources[i].id==element.id){\n        this.checkbitelement=false;\n        break;\n      }\n      else this.checkbitelement=true;\n    }\n    return this.checkbitelement;\n  }\n\n  onLoad(){\n    let results=document.getElementById(\"uploads\"); \n    results.click();\n  }\n\n  fileUploadonselect(){\n    var uploadsFile = <HTMLInputElement>document.getElementById(\"uploads\");\n    var file = uploadsFile.files[0];\n    let self = this;\n    let reader = new FileReader();\n    reader.readAsBinaryString(file);\n\n    reader.onload = function() {\n      let resultInfo  = JSON.parse(this.result.toString());\n      let contentInfo = JSON.parse(resultInfo.Content);\n      self.GetCamelParse(contentInfo);\n      self.resourcemodel.stringResources = contentInfo.stringResources;\n      self.resourcemodel.imageResources = contentInfo.imageResources;\n    }\n    this.resourcemodel.stringResources = self.resourcemodel.stringResources;\n    this.resourcemodel.imageResources = self.resourcemodel.imageResources;\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/resourcemetadata.component.ts","import { NgModule } from '@angular/core';\nimport { ButtonsModule } from '@progress/kendo-angular-buttons';\nimport { ResourceMetadataComponent } from './resourcemetadata.component';\nimport { LayoutModule } from '@progress/kendo-angular-layout';\n\nimport { GridModule } from '@progress/kendo-angular-grid';\n\nimport { UploadModule } from '@progress/kendo-angular-upload';\nimport { HttpClientModule } from '@angular/common/http';\nimport {BaseinfoComponent} from './baseinfo/baseinfo.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { TextgridComponent } from './textgrid/textgrid.component';\nimport { TextResourcesService } from './textgrid/textresources.service';\nimport { BitresourcesService } from './birgrid/bitresources.service';\nimport { BirgridComponent } from './birgrid/birgrid.component';\n@NgModule({\n  declarations: [\n    ResourceMetadataComponent,\n    BaseinfoComponent,\n    TextgridComponent,\n    BirgridComponent\n\n  ],\n  imports: [\n    CommonModule,\n    ButtonsModule,\n    LayoutModule,\n    GridModule,\n    UploadModule,\n    HttpClientModule,\n    FormsModule \n  ],\n  providers: [TextResourcesService,BitresourcesService],\n  bootstrap: [ResourceMetadataComponent]\n})\nexport class ResourceMetadataModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/resourcemetadata.module.ts","export class ResourceMetadata {\r\n    code:string;\r\n    name:string;\r\n    bizObject:string;\r\n    lastModifiedTime:string;\r\n    stringResources:TextResourceItem[];\r\n    imageResources:BinaryResourceItem[];\r\n}\r\nexport class TextResourceItem{\r\n    id:string;\r\n    value:string;\r\n    resourceType:ResourceType;\r\n}\r\nexport class BinaryResourceItem{\r\n    id:string;\r\n    value:string;\r\n    resourceType:ResourceType;\r\n}\r\nexport enum ResourceType{\r\n    TextFile,\r\n    BinaryFile\r\n}\r\n\r\nexport class TextItem {\r\n    textId:number;\r\n    id:string;\r\n    value:string;\r\n}\r\nexport class BitItem{\r\n    bitId:number;\r\n    id:string;\r\n    value:string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/resourcemetadata/resourcemetadata.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/textgrid/textgrid.component.css\n// module id = ./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/textgrid/textgrid.component.css\n// module chunks = rspackage.module","module.exports = \"<kendo-grid id=\\\"textGrid\\\"\\n(cellClick)=\\\"cellClickHandler($event)\\\"\\n[groupable]=\\\"false\\\"\\n[group]=\\\"groups\\\"\\n(groupChange)=\\\"groupChange($event)\\\"\\n[data]=\\\"gridData\\\"\\n[height]=\\\"500\\\" \\n(add)=\\\"addHandler()\\\"\\n(remove)=\\\"removeHandler($event)\\\"\\n[navigable]=\\\"true\\\">\\n    <ng-template kendoGridToolbarTemplate>\\n        <button kendoGridAddCommand [icon]=\\\"'plus-outline'\\\">新增文本资源</button>       \\n    </ng-template>\\n\\n    <kendo-grid-column field=\\\"id\\\" title=\\\"资源编号\\\" width=\\\"85\\\"  [headerStyle]=\\\"{'text-align': 'center'}\\\"  [style]=\\\"{'text-align':'center'}\\\">             \\n    </kendo-grid-column>\\n    <kendo-grid-column field=\\\"value\\\" title=\\\"资源文本\\\"  width=\\\"150\\\" [headerStyle]=\\\"{'text-align': 'center'}\\\" [style]=\\\"{'text-align':'center'}\\\">\\n    </kendo-grid-column>\\n    <kendo-grid-command-column title=\\\"\\\" width=\\\"40\\\" [style]=\\\"{'text-align':'center'}\\\">\\n        <ng-template kendoGridCellTemplate let-isNew=\\\"isNew\\\">\\n            <button kendoGridRemoveCommand type=\\\"button\\\" [icon]=\\\"'delete'\\\">删除资源</button>\\n        </ng-template>\\n    </kendo-grid-command-column>\\n</kendo-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/textgrid/textgrid.component.html\n// module id = ./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/textgrid/textgrid.component.html\n// module chunks = rspackage.module","import { Component, OnInit, OnDestroy, ViewChild, Renderer2, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { GridComponent } from '@progress/kendo-angular-grid';\nimport { groupBy, GroupDescriptor } from '@progress/kendo-data-query';\nimport { TextResourcesService } from './textresources.service';\nimport { ResourceMetadata, TextItem, TextResourceItem, ResourceType } from '../resourcemetadata/resourcemetadata';\n\nconst createFormGroup = dataItem => new FormGroup({\n    'textId':new FormControl(dataItem.textId),\n    'id': new FormControl(dataItem.id),\n    'value': new FormControl(dataItem.value)\n  });\n  const matches = (el, selector) => (el.matches || el.msMatchesSelector).call(el, selector);\n\n  @Component({\n    selector: 'app-textgrid',\n    templateUrl: './textgrid.component.html',\n    styleUrls: ['./textgrid.component.css']\n  })\n\nexport class TextgridComponent implements OnInit,OnDestroy{\n\n    @ViewChild(GridComponent)\n    private grid: GridComponent;\n    public groups: GroupDescriptor[] = [];\n    public gridData: any[];\n    private checktextelement:boolean=true;\n    public formGroup: FormGroup;\n    private textresourceitem:TextResourceItem[]=[];\n    private editedRowIndex: number;\n    private docClickSubscription: any;\n    private isNew: boolean;\n    @Input() currentViewModel:ResourceMetadata ;\n    @Output() change = new EventEmitter();\n    constructor(public service: TextResourcesService, private renderer: Renderer2) {}\n    \n    textmetadatas:TextItem[]=[{\n        textId:1,\n        id:'',\n        value:''\n    }];  \n    data:TextItem[]=[]; \n    ngOnInit(): void {\n      \n        if(this.currentViewModel.stringResources.length!=0){\n            let igridData = this.currentViewModel.stringResources;\n            for(var i=0;i<igridData.length;i++){\n                this.data[i]={ textId:i+1, id:'', value:''};\n                this.data[i].id = igridData[i].id;\n                this.data[i].value = igridData[i].value;\n            }\n            this.gridData = this.data; \n        }\n        else {\n            this.gridData = this.textmetadatas;\n            this.data=this.textmetadatas;\n        }\n      this.docClickSubscription = this.renderer.listen('document', 'click', this.onDocumentClick.bind(this));\n    }\n    public ngOnDestroy(): void {\n        this.docClickSubscription();\n        this.saveCurrentViewModel();\n        this.change.emit(this.currentViewModel);\n\n    }\n\n    public addHandler(): void {\n        this.closeEditor();\n\n        this.formGroup = createFormGroup({\n            'id': '',\n            'value': ''         \n        });\n        this.isNew = true;\n        this.grid.addRow(this.formGroup);\n       \n    }\n\n    public removeHandler(dataItem) {\n       this.service.remove(dataItem,this.data);\n  }\n\n    public cellClickHandler({ isEdited, dataItem, rowIndex }): void {\n        if (isEdited || (this.formGroup && !this.formGroup.valid)) {\n            return;\n        }\n        this.saveCurrent();\n        this.formGroup = createFormGroup(dataItem);\n        this.editedRowIndex = rowIndex;\n\n        this.grid.editRow(rowIndex, this.formGroup);\n    }\n\n    public cancelHandler(): void {\n        this.closeEditor();\n    }\n\n    public groupChange(groups: GroupDescriptor[]): void {\n        debugger;\n        this.groups = groups;\n        this.gridData = groupBy(this.service.textresources(), this.groups);\n    }\n\n    private closeEditor(): void {\n        this.grid.closeRow(this.editedRowIndex);\n\n        this.isNew = false;\n        this.editedRowIndex = undefined;\n        this.formGroup = undefined;\n    }\n\n    private onDocumentClick(e: any): void {\n        if (this.formGroup && this.formGroup.valid &&\n            !matches(e.target, '#textGrid tbody *, #textGrid .k-grid-toolbar .k-button')) {\n            this.saveCurrent();\n        }\n    }\n\n    private saveCurrent(): void {\n        if (this.formGroup) {\n            this.service.save(this.formGroup.value, this.isNew,this.data);\n            this.closeEditor();\n        }\n    }\n    private saveCurrentViewModel() :void{\n      let textitem = this.data;\n      this.currentViewModel.stringResources = [];\n      for(var i=0 ;i <textitem.length;i++){\n        if(this.checkTextElement(textitem[i],this.currentViewModel)){\n          this.textresourceitem[i]={id:'',value:'',resourceType:ResourceType.TextFile}\n          this.textresourceitem[i].id = textitem[i].id;\n          this.textresourceitem[i].value = textitem[i].value;\n          this.currentViewModel.stringResources.push(this.textresourceitem[i]);\n        }\n        else{\n          this.currentViewModel.stringResources.find(x=>(x.id==textitem[i].id)).value = textitem[i].value;\n        }\n      }\n    }\n\n    checkTextElement(element:TextItem,resourcecontent:ResourceMetadata):any{\n        for(var i=0;i<resourcecontent.stringResources.length;i++){\n          if(resourcecontent.stringResources[i].id==element.id){\n            this.checktextelement=false;\n            break;\n          }\n          else this.checktextelement=true;\n        }\n        return this.checktextelement;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/textgrid/textgrid.component.ts","import { Injectable } from '@angular/core';\nimport { TextItem} from '../resourcemetadata/resourcemetadata';\n\n@Injectable()\nexport class TextResourcesService {\n    textmetadatas:TextItem[]=[{\n        textId:1,\n        id:'',\n        value:''\n    }];  \n    public textresources(): any[] {\n        return this.textmetadatas;\n    }\n\n    public remove(textresource: any,data:any[]): void {\n        const index = data.findIndex( obj=> obj.textId === textresource.dataItem.textId);\n        data.splice(index, 1);\n        for(let i = index;i<=data.length-1;i++){\n            data[i].textId--;\n        }\n    }\n\n    public save(textresource: any, isNew: boolean,data:any[]): void {\n        \n        if (isNew) {\n          textresource.textId = data.length+1;\n            data.push(textresource);\n        } else {\n            Object.assign(\n                data.find(({ textId }) => textId === textresource.textId),\n                textresource\n            );\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/packages/resource-metadata-designer/views/resourcemetadatadesigner/textgrid/textresources.service.ts"],"sourceRoot":"webpack:///"}